<?xml version="1.0"?>
<xs:schema xmlns:nav="http://www.teradp.com/schemas/GN4/1/ObjNav.xsd" xmlns:gs="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:gn4="urn:schemas-teradp-com:gn4tera" xmlns="urn:schemas-teradp-com:gn4tera" elementFormDefault="qualified" targetNamespace="urn:schemas-teradp-com:gn4tera" gs:modules="Editorial" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>GN4 editorial system schema</xs:documentation>
  </xs:annotation>
  <xs:complexType id="type142" gs:key="folderRef name" gs:descName="gn4:title" name="objGroup">
    <xs:annotation>
      <xs:documentation>Group of related objects</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:folderObject">
        <xs:sequence>
          <xs:element minOccurs="0" name="objs">
            <xs:annotation>
              <xs:documentation>Objects belonging to the group - as references. Note that this can include groups - creating hierarchies.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="true" gs:refer="folderObject" minOccurs="0" maxOccurs="unbounded" name="ref">
                  <xs:complexType>
                    <xs:complexContent mixed="false">
                      <xs:extension base="gn4:reference">
                        <xs:sequence>
                          <xs:element gs:refer="ObjsGroupRelationships" minOccurs="0" name="rel" nillable="true" type="gn4:categoryRef">
                            <xs:annotation>
                              <xs:documentation>Relationship between the group and the referenced object</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="title" type="gn4:tShortLine">
                            <xs:annotation>
                              <xs:documentation>Short natural language description of the relationship</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="caption" type="gn4:tShortText">
                            <xs:annotation>
                              <xs:documentation>Descriptive text associated with the referenced object.</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                      </xs:extension>
                    </xs:complexContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element gs:refer="ObjsGroupKinds" minOccurs="0" name="kind" nillable="true" type="gn4:categoryRef">
            <xs:annotation>
              <xs:documentation>Group's kind</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="objGroup" type="gn4:objGroup">
    <xs:annotation>
      <xs:documentation>Group of related objects</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="_objectType">
    <xs:annotation>
      <xs:documentation>Object type attributes</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:_objectTypeEditorial" />
    </xs:complexContent>
  </xs:complexType>
  <xs:attributeGroup name="justScopeExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'justScope' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="justScopeExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'justScope' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="fontLayoutExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'fontLayout' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="fontLayoutExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'fontLayout' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="fontExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'font' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="fontExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'font' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="justDefExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'justDef' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="justDefExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'justDef' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="hyphenationExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'hyphenation' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="hyphenationExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'hyphenation' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="justContextExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'justContext' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="justContextExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'justContext' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="geometryExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'geometry' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="geometryExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'geometry' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="printTemplateExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'printTemplate' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="printTemplateExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'printTemplate' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="printQueueExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'printQueue' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="printQueueExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'printQueue' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="printConfigExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'printConfig' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="printConfigExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'printConfig' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="linkObjectExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'linkObject' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="linkObjectExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'img' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element gs:compute="true" minOccurs="0" default="false" name="isLinked" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Computed boolean: false: not linked - true: linked</xs:documentation>
          <xs:appinfo>
            <gs:ui mode="ReadOnly" xmlns:gs="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd" />
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
      <xs:element gs:refer="source" minOccurs="0" name="sourceRef" nillable="true" type="gn4:reference">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="sourceRef" />
          </xs:appinfo>
          <xs:documentation>The external source of the object (i.e. CosMos)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sourceId" type="gn4:tSourceId">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="sourceInfo" />
          </xs:appinfo>
          <xs:documentation>The unique identifier of the object in the source system</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="sourceFileName" type="gn4:tPath">
        <xs:annotation>
          <xs:documentation>The name of the file this object has been created from - either the original name of an uploaded file or the name of a file processed in a spool folder.</xs:documentation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="sourceInfo" />
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="imgExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'img' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
    <xs:attributeGroup ref="gn4:archiveObjectExtra" />
  </xs:attributeGroup>
  <xs:group name="imgExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'img' object type that are rendered as XML element</xs:documentation>
      <xs:appinfo>
        <gs:compute inherit="true">
          <img xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns="urn:schemas-teradp-com:gn4tera">
            <xsl:variable name="isPub" select="nav:referencing/nav:referencingBy[@attrName='pubDest.objs']/nav:refs" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            <!-- 'Fake' test of the handle attribute to generate a dependency -->
            <xsl:if test="string($isPub/@handle)">
              <xsl:choose>
                <xsl:when test="$isPub/nav:refObject/gn4:pubDest">
                  <isPublished>true</isPublished>
                </xsl:when>
                <xsl:otherwise>
                  <isPublished>false</isPublished>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:if>
            <xsl:variable name="layerImgs" select="nav:referencing/nav:referencingBy[@attrName='layer.imgs']/nav:refs" />
            <xsl:choose>
              <xsl:when test="string($layerImgs/@handle) and $layerImgs/nav:refObject/gn4:pageLayer">
                <isLinked>true</isLinked>
              </xsl:when>
              <xsl:otherwise>
                <isLinked>false</isLinked>
              </xsl:otherwise>
            </xsl:choose>
          </img>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:group ref="gn4:archiveObjectExtra" />
      <xs:element gs:refer="user" minOccurs="0" name="authorRef" nillable="true" type="gn4:reference">
        <xs:annotation>
          <xs:documentation>Author of the image</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="notes" type="gn4:tDescription">
        <xs:annotation>
          <xs:documentation>Copy-flow notes</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="txtExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'txt' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="txtExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'txt' object type that are rendered as XML element</xs:documentation>
      <xs:appinfo>
        <gs:compute inherit="true">
          <txt>
            <xsl:variable name="txtGeometryTxt" select="nav:referencing/nav:referencingBy[@attrName='txtGeometry.txtRef']/nav:refs" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            <xsl:variable name="pageLayersFragment">
              <xsl:if test="string($txtGeometryTxt/@handle)">
                <xsl:for-each select="$txtGeometryTxt/nav:refObject/gn4:txtGeometry">
                  <xsl:variable name="regionId" select="gn4:regionRef/@idref" />
                  <xsl:if test="string(gn4:jumps/@nav:handle)">
                    <xsl:for-each select="gn4:jumps/gn4:ref[@hasFrames='true']">
                      <xsl:variable name="layerId" select="@idref" />
                      <xsl:variable name="layer" select="nav:refObject/gn4:pageLayer" />
                      <xsl:for-each select="$layer/gn4:pages/gn4:ref">
                        <item key="{concat(fn:objectIdFromString($layerId),'-',fn:objectIdFromString(@idref))}">
                          <xsl:if test="string(gn4:sectionRef/@idref)">
                            <sectionRef idref="{gn4:sectionRef/@idref}" name="{gn4:sectionRef/nav:refObject/gn4:section/@name}" />
                          </xsl:if>
                        </item>
                      </xsl:for-each>
                    </xsl:for-each>
                  </xsl:if>
                </xsl:for-each>
              </xsl:if>
            </xsl:variable>
            <xsl:variable name="pageLayers" select="msxsl:node-set($pageLayersFragment)" />
            <xsl:choose>
              <xsl:when test="$pageLayers and $pageLayers/gn4:item">
                <xsl:variable name="sectionName" select="$pageLayers/gn4:item[1]/gn4:sectionRef/@name" />
                <sectionColor>
                  <xsl:value-of select="concat('color',$sectionName)" />
                </sectionColor>
                <sectionHead>
                  <xsl:value-of select="concat('head',$sectionName)" />
                </sectionHead>
                <isLinked>true</isLinked>
              </xsl:when>
              <xsl:otherwise>
                <sectionColor />
                <sectionHead />
                <isLinked>false</isLinked>
              </xsl:otherwise>
            </xsl:choose>
          </txt>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element gs:refer="user" minOccurs="0" name="authorRef" nillable="true" type="gn4:reference">
        <xs:annotation>
          <xs:documentation>Author of the text - it can be diffrent that the creator if the text is being entered in the system on behalf of someone else</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="notes" type="gn4:tDescription">
        <xs:annotation>
          <xs:documentation>Copy-flow notes</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:sequence>
        <xs:element gs:compute="true" minOccurs="0" default="" name="sectionColor" nillable="true" type="xs:string">
          <xs:annotation>
            <xs:documentation>Section color</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element gs:compute="true" minOccurs="0" default="" name="sectionHead" nillable="true" type="xs:string">
          <xs:annotation>
            <xs:documentation>Headline color by section</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="urlExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'url' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="urlExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'url' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="articleExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'article' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
    <xs:attribute gs:dimension="time:s" gs:access="Content" gs:compute="true" name="duration" type="xs:float">
      <xs:annotation>
        <xs:appinfo>
          <gs:ui mode="ReadOnly" />
        </xs:appinfo>
        <xs:documentation>The max duration of the item contained into the article</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="gn4:archiveObjectExtra" />
  </xs:attributeGroup>
  <xs:group name="articleExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'article' object type thatare rendered as XML element</xs:documentation>
      <xs:appinfo>
        <gs:compute inherit="true">
          <article xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:t="http://www.teradp.com/schemas/GN3/t.xsd">
            <xsl:attribute name="duration">
              <xsl:variable name="readingTimeParams" select="$context/lc:LoginContext/lc:GlobalConfig/lc:ReadingTime" />
              <xsl:variable name="readingTime" select="fn:estimateReadingTime(gn4:txts/gn4:body/gn4:tText,$readingTimeParams,1,'')" />
              <xsl:variable name="articleDurations">
                <root xmlns="">
                  <item>
                    <xsl:choose>
                      <xsl:when test="$readingTime/@avg">
                        <xsl:value-of select="$readingTime/@avg" />
                      </xsl:when>
                      <xsl:otherwise>0</xsl:otherwise>
                    </xsl:choose>
                  </item>
                  <xsl:for-each select="gn4:txts/gn4:*/gn4:ref/nav:refObject/gn4:*[local-name()='audio' or local-name()='video']">
                    <item>
                      <xsl:value-of select="@duration" />
                    </item>
                  </xsl:for-each>
                </root>
              </xsl:variable>
              <xsl:value-of select="fn:maxNumber(msxsl:node-set($articleDurations)/root/*)" />
            </xsl:attribute>
            <xsl:variable name="isPub" select="nav:referencing/nav:referencingBy[@attrName='pubDest.objs']/nav:refs" />
            <!-- 'Fake' test of the handle attribute to generate a dependency -->
            <xsl:if test="string($isPub/@handle)">
              <xsl:choose>
                <xsl:when test="$isPub/nav:refObject/gn4:pubDest">
                  <isPublished xmlns="urn:schemas-teradp-com:gn4tera">true</isPublished>
                </xsl:when>
                <xsl:otherwise>
                  <isPublished xmlns="urn:schemas-teradp-com:gn4tera">false</isPublished>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:if>
            <xsl:variable name="pageLayers" select="gn4:txts/*/gn4:pageLayers" />
            <xsl:choose>
              <xsl:when test="$pageLayers and $pageLayers/gn4:item">
                <isLinked xmlns="urn:schemas-teradp-com:gn4tera">true</isLinked>
              </xsl:when>
              <xsl:otherwise>
                <isLinked xmlns="urn:schemas-teradp-com:gn4tera">false</isLinked>
              </xsl:otherwise>
            </xsl:choose>
            <!-- number of imgs attached to the article. To minimize the compute we are not checking if an img is referenced.-->
            <nImgs xmlns="urn:schemas-teradp-com:gn4tera">
              <xsl:value-of select="count(gn4:txts/gn4:photoCaption)" />
            </nImgs>
            <headline>
              <xsl:if test="$context/oc:OperationContext/@Kind!='Upgrade'">
                <xsl:if test="gn4:txts/gn4:head">
                  <xsl:for-each select="gn4:txts/gn4:head/gn4:tText/t:t/t:p/text()">
                    <xsl:value-of select="concat(normalize-space(.),' ')" />
                  </xsl:for-each>
                </xsl:if>
              </xsl:if>
            </headline>
          </article>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:group ref="gn4:archiveObjectExtra" />
      <xs:element gs:refer="user" minOccurs="0" name="authorRef" nillable="true" type="gn4:reference">
        <xs:annotation>
          <xs:documentation>Author of the article - it can be different than the creator if the article is being entered on behalf of someone else</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="notes" type="gn4:tDescription">
        <xs:annotation>
          <xs:documentation>Copy-flow notes</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element gs:compute="true" minOccurs="0" default="0" name="nImgs" type="gn4:tNonNegativeInt">
        <xs:annotation>
          <xs:documentation>Number of images linked to the article.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element gs:compute="true" minOccurs="0" name="headline" type="gn4:tText">
        <xs:annotation>
          <xs:documentation>Automatically computed attribute containing the plain text of the hedline.</xs:documentation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="gn4Title" />
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="titleExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'title' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="titleExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'title' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="milestoneExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'milestone' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="milestoneExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'milestone' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="regionExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'region' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="regionExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'region' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="editionExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'edition' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="editionExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'edition' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="NumberOrd" nillable="true" type="gn4:tOptionalName">
        <xs:annotation>
          <xs:documentation>NumberOrd of the edition</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="extDocExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'extDoc' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="extDocExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'extDoc' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="masterExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'master' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="masterExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'master' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="layerTypeExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'layerType' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="layerTypeExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'layerType' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="pageLayerExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'pageLayer' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="pageLayerExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'pageLayer' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="pageExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'page' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="pageExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'page' object type that are rendered as XML element</xs:documentation>
      <xs:appinfo>
        <gs:compute inherit="true">
          <page xmlns="urn:schemas-teradp-com:gn4tera">
            <xsl:variable name="sectionName" select="gn4:sectionRef/*/gn4:section/@name" />
            <sectionColor>
              <xsl:value-of select="concat('color',$sectionName)" />
            </sectionColor>
            <sectionHead>
              <xsl:value-of select="concat('head',$sectionName)" />
            </sectionHead>
            <xsl:if test="gn4:layers/gn4:ref and string(gn4:layers/@nav:handle)">
              <layersModifiedDate>
                <xsl:value-of select="fn:maxDateTime(gn4:layers/gn4:ref/nav:refObject/*/@modifiedDate)" />
              </layersModifiedDate>
            </xsl:if>
          </page>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element gs:compute="true" minOccurs="0" default="" name="sectionColor" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:documentation>Section color</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element gs:compute="true" minOccurs="0" default="" name="sectionHead" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:documentation>Headline color by section</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element gs:compute="true" minOccurs="0" name="layersModifiedDate" nillable="true" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>When this page's layers have been modified. Automatically computed.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="txtGeometryExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'txtGeometry' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="txtGeometryExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'txtGeometry' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="libExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'lib' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="libExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'lib' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="libObjExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'libObj' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="libObjExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'libObj' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="webCommentExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'webComment' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="webCommentExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'webComment' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="externalSystemExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'externalSystem' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="externalSystemExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'externalSystem' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element gs:refer="justScope" minOccurs="0" name="scopeRef" type="gn4:reference">
        <xs:annotation>
          <xs:documentation>Default justification scope the article will be assigned to.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element gs:refer="region" minOccurs="0" name="regionRef" type="gn4:reference">
        <xs:annotation>
          <xs:documentation>Default region to format the articles</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:complexType name="text">
    <xs:annotation>
      <xs:documentation>Element corresponding to text with markup applied directly (as opposed to a character style)</xs:documentation>
      <xs:appinfo>
        <gs:_objectType textElement="text" />
      </xs:appinfo>
    </xs:annotation>
    <xs:attribute name="f" type="gn4:textAttrib-f" />
    <xs:attribute name="fontName" type="gn4:textAttrib-fontName" />
    <xs:attribute name="fontFamily" type="gn4:textAttrib-fontFamily" />
    <xs:attribute name="it" type="gn4:textAttrib-it" />
    <xs:attribute name="bd" type="gn4:textAttrib-bd" />
    <xs:attribute name="small" type="gn4:textAttrib-small" />
    <xs:attribute name="h" type="gn4:textAttrib-h" />
    <xs:attribute name="w" type="gn4:textAttrib-w" />
    <xs:attribute name="co" type="gn4:textAttrib-co" />
    <xs:attribute name="gray" type="gn4:textAttrib-gray" />
    <xs:attribute name="jmp" type="gn4:textAttrib-jmp" />
    <xs:attribute name="mode" type="gn4:textAttrib-mode" />
    <xs:attribute name="modeData" type="gn4:textAttrib-modeData" />
  </xs:complexType>
  <xs:complexType name="bell">
    <xs:annotation>
      <xs:documentation>Element corresponding to an isolated 'bell' character</xs:documentation>
      <xs:appinfo>
        <gs:_objectType textElement="bell" />
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="br">
    <xs:annotation>
      <xs:documentation>Element corresponding to an end line</xs:documentation>
      <xs:appinfo>
        <gs:_objectType textElement="line" />
      </xs:appinfo>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="inlineImg">
    <xs:annotation>
      <xs:documentation>Element corresponding to an inline image</xs:documentation>
      <xs:appinfo>
        <gs:_objectType textElement="img" />
      </xs:appinfo>
    </xs:annotation>
    <xs:attribute name="imgId" type="gn4:textAttrib-imgId" use="optional" />
    <xs:attribute name="imgName" type="gn4:textAttrib-imgName" use="optional" />
    <xs:attribute name="imgDummy" type="gn4:textAttrib-imgDummy" use="optional" />
    <xs:attribute name="w" type="gn4:textAttrib-w" use="optional" />
    <xs:attribute name="h" type="gn4:textAttrib-h" use="optional" />
  </xs:complexType>
  <xs:complexType name="inlineRule">
    <xs:annotation>
      <xs:documentation>Element corresponding to an inline image</xs:documentation>
      <xs:appinfo>
        <gs:_objectType textElement="rule" />
      </xs:appinfo>
    </xs:annotation>
    <xs:attribute name="w" type="gn4:textAttrib-w" use="optional" />
    <xs:attribute name="h" type="gn4:textAttrib-h" use="optional" />
  </xs:complexType>
  <xs:complexType name="link">
    <xs:annotation>
      <xs:documentation>Element corresponding to a character style used to insert links</xs:documentation>
    </xs:annotation>
    <xs:attribute name="url" type="xs:string" use="optional" />
  </xs:complexType>
  <xs:complexType name="p" mixed="true">
    <xs:annotation>
      <xs:documentation>Standard text paragraph</xs:documentation>
      <xs:appinfo>
        <gs:_objectType textElement="para" />
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element minOccurs="0" name="text" type="gn4:text" />
      <xs:element minOccurs="0" name="link" type="gn4:link" />
      <xs:element minOccurs="0" name="bell" type="gn4:bell" />
      <xs:element minOccurs="0" name="br" type="gn4:br" />
      <xs:element minOccurs="0" name="inlineImg" type="gn4:inlineImg" />
      <xs:element minOccurs="0" name="inlineRule" type="gn4:inlineRule" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="headline" mixed="true">
    <xs:annotation>
      <xs:documentation>Headline paragraph</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="straphead" mixed="true">
    <xs:annotation>
      <xs:documentation>Straphead paragraph</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="byline" mixed="true">
    <xs:annotation>
      <xs:documentation>Byline paragraph</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="beat" mixed="true">
    <xs:annotation>
      <xs:documentation>Byline beat paragraph</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="dlStart" mixed="true">
    <xs:annotation>
      <xs:documentation>Start of a dateline paragraph</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="dlText" mixed="true">
    <xs:annotation>
      <xs:documentation>Text of a dateline paragraph</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="dateline">
    <xs:annotation>
      <xs:documentation>Paragraph starting with the dataline</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="1" maxOccurs="1" name="dlStart" type="gn4:dlStart" />
      <xs:element minOccurs="1" maxOccurs="1" name="dlText" type="gn4:dlText" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="credit" mixed="true">
    <xs:annotation>
      <xs:documentation>Credit paragraph - used in photo captions</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="caption" mixed="true">
    <xs:annotation>
      <xs:documentation>Credit paragraph - used in photo captions</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="crosshead" mixed="true">
    <xs:annotation>
      <xs:documentation>Cross headline paragraph</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="td" mixed="true">
    <xs:annotation>
      <xs:documentation>Tabulation cell</xs:documentation>
      <xs:appinfo>
        <gs:_objectType textElement="cell" />
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="1" maxOccurs="unbounded" name="p" type="gn4:p" />
    </xs:sequence>
    <xs:attribute name="coln" type="gn4:textAttrib-colN" />
    <xs:attribute name="colspan" type="gn4:textAttrib-nCols" />
    <xs:attribute name="rown" type="gn4:textAttrib-rowN" />
    <xs:attribute name="rowspan" type="gn4:textAttrib-nRows" />
  </xs:complexType>
  <xs:complexType name="tr">
    <xs:annotation>
      <xs:documentation>Tabulation row</xs:documentation>
      <xs:appinfo>
        <gs:_objectType textElement="row" />
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="1" maxOccurs="unbounded" name="td" type="gn4:td" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="table">
    <xs:annotation>
      <xs:documentation>Table</xs:documentation>
      <xs:appinfo>
        <gs:_objectType textElement="table" />
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="1" maxOccurs="unbounded" name="tr" type="gn4:tr" />
    </xs:sequence>
    <xs:attribute name="tableName" type="gn4:textAttrib-tableName" />
  </xs:complexType>
  <xs:element name="photo">
    <xs:complexType id="type143">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:img" />
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="head">
    <xs:complexType id="type85">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,hd" typeKind="headline" mediaType="Text">
            <description>Headline</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="1" name="headline" type="gn4:headline" />
                  <xs:element minOccurs="1" maxOccurs="unbounded" name="p" type="gn4:p" />
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="straphead" type="gn4:straphead" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="webHead">
    <xs:complexType id="type86">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,whd" typeKind="headline" typeLink="no" mediaType="Text">
            <description>Web headline</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="1" maxOccurs="unbounded" name="p" type="gn4:p" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="blogPost">
    <xs:complexType id="type87">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,blog" typeLink="no" mediaType="Text">
            <description>Blog Post</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element minOccurs="1" maxOccurs="1" name="crosshead" type="gn4:crosshead" />
                    <xs:element minOccurs="1" maxOccurs="unbounded" name="p" type="gn4:p" />
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="table" type="gn4:table" />
                  </xs:sequence>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="jumpHead">
    <xs:complexType id="type88">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,jhd" typeKind="headline" typeLink="single" mediaType="Text">
            <description>Jump headline</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="1" maxOccurs="unbounded" name="p" type="gn4:p" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="body">
    <xs:complexType id="type92">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" typeKind="body" mediaType="Text">
            <description>Body</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="p" type="gn4:p" />
                  <xs:element minOccurs="0" maxOccurs="1" name="byline" type="gn4:byline" />
                  <xs:element minOccurs="0" maxOccurs="1" name="beat" type="gn4:beat" />
                  <xs:element minOccurs="0" maxOccurs="1" name="dateline" type="gn4:dateline" />
                  <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="crosshead" type="gn4:crosshead" />
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="table" type="gn4:table" />
                  </xs:sequence>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="webBody">
    <xs:complexType id="type93">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,wbd" typeKind="body" typeLink="no" mediaType="Text">
            <description>Web body</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="p" type="gn4:p" />
                  <xs:element minOccurs="0" maxOccurs="1" name="byline" type="gn4:byline" />
                  <xs:element minOccurs="0" maxOccurs="1" name="dateline" type="gn4:dateline" />
                  <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="crosshead" type="gn4:crosshead" />
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="table" type="gn4:table" />
                  </xs:sequence>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="smsBody">
    <xs:complexType id="type94">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,sbd" typeKind="body" typeLink="no" mediaType="Text">
            <description>SMS body</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="1" maxOccurs="unbounded" name="p" type="gn4:p" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="subhead">
    <xs:complexType id="type89">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,subhd" mediaType="Text">
            <description>Sub-headline</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="p" type="gn4:p" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="kicker">
    <xs:complexType id="type90">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,kick" typeLink="single" mediaType="Text">
            <description>Kicker</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="p" type="gn4:p" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="intro">
    <xs:complexType id="type91">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,intro" typeLink="single" mediaType="Text">
            <description>Introduction</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="p" type="gn4:p" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="pullquote">
    <xs:complexType id="type97">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,pull&amp;n[1,2]" mediaType="Text">
            <description>Pull quote</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="p" type="gn4:p" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="twitterMsg">
    <xs:complexType id="type95">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,sms" typeKind="body" typeLink="no" mediaType="Text">
            <description>Twitter message</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="1" maxOccurs="unbounded" name="p" type="gn4:p" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="facebookMsg">
    <xs:complexType id="type96">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,sms" typeKind="body" typeLink="no" mediaType="Text">
            <description>facebook message</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="1" maxOccurs="unbounded" name="p" type="gn4:p" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="photoCaption">
    <xs:complexType id="type98">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,ph&amp;n[1,2]" typeLink="single" mediaType="Text">
            <description>Photo caption</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="p" type="gn4:p" />
                  <xs:element minOccurs="0" maxOccurs="1" name="credit" type="gn4:credit" />
                  <xs:element minOccurs="0" maxOccurs="1" name="caption" type="gn4:caption" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:refer="img" minOccurs="0" name="ref" type="gn4:reference" />
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="urlCaption">
    <xs:complexType id="type99">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,url&amp;n[1,2]" typeLink="no" mediaType="Text">
            <description>Url caption</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="p" type="gn4:p" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:refer="url" name="ref" type="gn4:reference" />
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="audioCaption">
    <xs:complexType id="type100">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,au&amp;n[1,2]" typeLink="no" mediaType="Text">
            <description>Audio caption</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="p" type="gn4:p" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:refer="audio" name="ref" type="gn4:reference" />
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="videoCaption">
    <xs:complexType id="type101">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,vi&amp;n[1,2]" typeLink="no" mediaType="Text">
            <description>Video caption</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="p" type="gn4:p" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:refer="video" name="ref" type="gn4:reference" />
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="galleryCaption">
    <xs:complexType id="type102">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,mmg&amp;n[1,2]" typeLink="no" mediaType="Text">
            <description>Video caption</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:refer="mediaGallery" name="ref" type="gn4:reference" />
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="sidebarHead">
    <xs:complexType id="type103">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,sdh&amp;n[1,2]" typeKind="headline" mediaType="Text" typeLink="single">
            <description>Sidebar Head</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="p" type="gn4:p" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="sidebar">
    <xs:complexType id="type104">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType deadlineGap="0" nameptt="&amp;a,sd&amp;n[1,2]" typeKind="body" mediaType="Text">
            <description>Sidebar text. To have multiple sidebars on one frame each, add typeLink="single"</description>
          </gs:_objectType>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:txt">
          <xs:sequence>
            <xs:element gs:storage="Ignore" minOccurs="0" name="xmlText">
              <xs:annotation>
                <xs:documentation>Text XML structure. Not stored in the database</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="p" type="gn4:p" />
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="table" type="gn4:table" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="_articleTxts">
    <xs:annotation>
      <xs:documentation>The texts contained in an article</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" ref="gn4:head" />
      <xs:element minOccurs="0" maxOccurs="1" ref="gn4:webHead" />
      <xs:element minOccurs="0" maxOccurs="1" ref="gn4:blogPost" />
      <xs:element minOccurs="0" maxOccurs="1" ref="gn4:jumpHead" />
      <xs:element minOccurs="0" maxOccurs="1" ref="gn4:subhead" />
      <xs:element minOccurs="0" maxOccurs="1" ref="gn4:kicker" />
      <xs:element minOccurs="0" maxOccurs="1" ref="gn4:intro" />
      <xs:element minOccurs="0" maxOccurs="1" ref="gn4:body" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:webBody" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:smsBody" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:twitterMsg" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:facebookMsg" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:pullquote" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:photoCaption" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:urlCaption" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:audioCaption" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:videoCaption" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:galleryCaption" />
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element minOccurs="0" maxOccurs="1" ref="gn4:sidebarHead" />
        <xs:element minOccurs="0" maxOccurs="1" ref="gn4:sidebar" />
      </xs:sequence>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="objects">
    <xs:annotation>
      <xs:documentation>Generic root element</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="gn4:editorialObjects" />
        <xs:group ref="gn4:tarkObjects" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:objGroup" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:head" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:webHead" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:blogPost" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:jumpHead" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:subhead" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:kicker" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:intro" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:body" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:twitterMsg" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:facebookMsg" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:photo" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:pullquote" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:photoCaption" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:urlCaption" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:audioCaption" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:videoCaption" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:galleryCaption" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:sidebarHead" />
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:sidebar" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="privilegeValue">
    <xs:annotation>
      <xs:documentation>System-wide privileges</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="all">
        <xs:annotation>
          <xs:documentation>All privileges: it is a shorthand notation for all of the values listed below. It MUST be always the first value</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DefaultPermission">
        <xs:annotation>
          <xs:documentation>Grant access permission to objects or attributes if it has not been explicitely denied</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ManageVolumes">
        <xs:annotation>
          <xs:documentation>List, create, modify, delete the volumes description.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Delete">
        <xs:annotation>
          <xs:documentation>Permanently delete or un-spike objects</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Audit">
        <xs:annotation>
          <xs:documentation>Access the audit trail of other users</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ManageUI">
        <xs:annotation>
          <xs:documentation>Modify global user interface configuration: translation strings, icons, etc.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ManageTasks">
        <xs:annotation>
          <xs:documentation>Create, list and remove scheduled tasks</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Unlock">
        <xs:annotation>
          <xs:documentation>Unlock objects of other users</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AuditSearch">
        <xs:annotation>
          <xs:documentation>The search operations are audited - i.e. each search operation performed by the user is recorded in the audit trail table (it might be argued that it is not really a 'privilege')</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AuditLoad">
        <xs:annotation>
          <xs:documentation>All object access (read from the database) are audited - i.e. each time an object is loaded by the user an entry is recorded in the audit trail table (it might be argued that it is not really a 'privilege')</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AuditCheckOut">
        <xs:annotation>
          <xs:documentation>The check-out and check-in operations are audited - i.e. each time an object is checked-out or checked-in by the user an entry is recorded in the audit trail table (it might be argued that it is not really a 'privilege')</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ManageSchema">
        <xs:annotation>
          <xs:documentation>Edit and update the database schema</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ManageTriggers">
        <xs:annotation>
          <xs:documentation>Create, list and remove triggers</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CreateKeywords">
        <xs:annotation>
          <xs:documentation>Create/delete/rename keywords</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="accessValue">
    <xs:annotation>
      <xs:documentation>Complete access permisssions on an object</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="all">
        <xs:annotation>
          <xs:documentation>All accesses: it is a shorthand notation for all of the values listed below. It MUST always be the first value</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Delete">
        <xs:annotation>
          <xs:documentation>Delete the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ReadNormal">
        <xs:annotation>
          <xs:documentation>Read the value of the 'normal' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ReadProtected">
        <xs:annotation>
          <xs:documentation>Read the value of the 'protected' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ReadSpecial">
        <xs:annotation>
          <xs:documentation>Read the value of the 'special' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ReadContent">
        <xs:annotation>
          <xs:documentation>Read the value of the 'content' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WriteNormal">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'normal' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WriteProtected">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'protected' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WriteSpecial">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'special' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WriteContent">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'content' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PlaceInNormal">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Normal' access class to reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SendFromNormal">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Normal' access class to no longer reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefDelete">
        <xs:annotation>
          <xs:documentation>Delete objects referencing this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefReadNormal">
        <xs:annotation>
          <xs:documentation>Read the value of the 'normal' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefReadProtected">
        <xs:annotation>
          <xs:documentation>Read the value of the 'protected' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefReadSpecial">
        <xs:annotation>
          <xs:documentation>Read the value of the 'special' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefReadContent">
        <xs:annotation>
          <xs:documentation>Read the value of the 'content' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefWriteNormal">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'normal' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefWriteProtected">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'protected' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefWriteSpecial">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'special' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefWriteContent">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'content' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PlaceInProtected">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Protected' access class to reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SendFromProtected">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Protected' access class to no longer reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PlaceInSpecial">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Special' access class to reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SendFromSpecial">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Special' access class to no longer reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PlaceInContent">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Content' access class to reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SendFromContent">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Content' access class to no longer reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="accessDirectValue">
    <xs:annotation>
      <xs:documentation>Direct access permisssions on an object</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="all">
        <xs:annotation>
          <xs:documentation>All accesses: it is a shorthand notation for all of the values listed below. It MUST always be the first value</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Delete">
        <xs:annotation>
          <xs:documentation>Delete the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ReadNormal">
        <xs:annotation>
          <xs:documentation>Read the value of the 'normal' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ReadProtected">
        <xs:annotation>
          <xs:documentation>Read the value of the 'protected' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ReadSpecial">
        <xs:annotation>
          <xs:documentation>Read the value of the 'special' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ReadContent">
        <xs:annotation>
          <xs:documentation>Read the value of the 'content' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WriteNormal">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'normal' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WriteProtected">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'protected' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WriteSpecial">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'special' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WriteContent">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'content' attributes of the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="accessIndirectValue">
    <xs:annotation>
      <xs:documentation>Indirect (via references) access permisssions on an object</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="all">
        <xs:annotation>
          <xs:documentation>All accesses: it is a shorthand notation for all of the values listed below. It MUST always be the first value</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PlaceInNormal">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Normal' access class to reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SendFromNormal">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Normal' access class to no longer reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefDelete">
        <xs:annotation>
          <xs:documentation>Delete objects referencing this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefReadNormal">
        <xs:annotation>
          <xs:documentation>Read the value of the 'normal' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefReadProtected">
        <xs:annotation>
          <xs:documentation>Read the value of the 'protected' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefReadSpecial">
        <xs:annotation>
          <xs:documentation>Read the value of the 'special' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefReadContent">
        <xs:annotation>
          <xs:documentation>Read the value of the 'content' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefWriteNormal">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'normal' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefWriteProtected">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'protected' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefWriteSpecial">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'special' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RefWriteContent">
        <xs:annotation>
          <xs:documentation>Write (i.e. modify) the value of the 'content' attributes of objects referencing this object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PlaceInProtected">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Protected' access class to reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SendFromProtected">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Protected' access class to no longer reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PlaceInSpecial">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Special' access class to reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SendFromSpecial">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Special' access class to no longer reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PlaceInContent">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Content' access class to reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SendFromContent">
        <xs:annotation>
          <xs:documentation>Allow another object with 'Content' access class to no longer reference this object.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="privileges">
    <xs:annotation>
      <xs:documentation>List of privileges granted or denied to a user/group</xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element minOccurs="0" name="grant" type="gn4:privilegeValue" />
      <xs:element minOccurs="0" name="deny" type="gn4:privilegeValue" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="reference">
    <xs:annotation>
      <xs:documentation>Reference to another object - either a direct id or a list of values specifying the object key.</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="keyVal" type="xs:string">
        <xs:annotation>
          <xs:documentation>Value of a key field in the referenced object (for fields that hold simple values like number, strings etc.)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="keyRef" nillable="true" type="gn4:reference">
        <xs:annotation>
          <xs:documentation>Value of a key field in the referenced object - used for fields that are references themselves</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="keyCat" nillable="true" type="gn4:categoryRef">
        <xs:annotation>
          <xs:documentation>Value of a key field in the referenced object - used for fields that are (single) category references</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
    <xs:attribute name="idref" type="xs:NCName" use="optional">
      <xs:annotation>
        <xs:documentation>The database id of the referenced object</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="objectType" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>The object type name of the referenced object. Needed for references to multiple object types to correcly resolve the key.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="accessRef">
    <xs:annotation>
      <xs:documentation>Reference to an object specifying also complete access permissions</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:reference">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
          <xs:element minOccurs="0" name="grant" type="gn4:accessValue" />
          <xs:element minOccurs="0" name="deny" type="gn4:accessValue" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="accessDirectRef">
    <xs:annotation>
      <xs:documentation>Reference to an object specifying also direct access permissions</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:reference">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
          <xs:element minOccurs="0" name="grant" type="gn4:accessDirectValue" />
          <xs:element minOccurs="0" name="deny" type="gn4:accessDirectValue" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="accessIndirectRef">
    <xs:annotation>
      <xs:documentation>Reference to an object specifying also reference (indirect) access permissions</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:reference">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
          <xs:element minOccurs="0" name="grant" type="gn4:accessIndirectValue" />
          <xs:element minOccurs="0" name="deny" type="gn4:accessIndirectValue" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="access">
    <xs:annotation>
      <xs:documentation>Complete access permissions description</xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element gs:refer="security" minOccurs="0" maxOccurs="unbounded" name="securityAccess" type="gn4:accessRef" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="accessDirect">
    <xs:annotation>
      <xs:documentation>Direct-only access permissions description</xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element gs:refer="security" minOccurs="0" maxOccurs="unbounded" name="securityAccess" type="gn4:accessDirectRef" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="accessIndirect">
    <xs:annotation>
      <xs:documentation>Indirect-only access permissions description</xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element gs:refer="security" minOccurs="0" maxOccurs="unbounded" name="securityAccess" type="gn4:accessIndirectRef" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="dataContent">
    <xs:annotation>
      <xs:documentation>Binary data content</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="url" type="xs:anyURI">
          <xs:annotation>
            <xs:documentation>URL pointing to the file containing the data</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="data" type="xs:base64Binary">
          <xs:annotation>
            <xs:documentation>Direct binary data</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="text">
          <xs:annotation>
            <xs:documentation>Direct text data</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:whiteSpace value="preserve" />
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element name="xml">
          <xs:annotation>
            <xs:documentation>Direct XML data</xs:documentation>
          </xs:annotation>
          <xs:complexType mixed="true">
            <xs:sequence>
              <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
      <xs:element minOccurs="0" maxOccurs="1" name="fileInfo">
        <xs:annotation>
          <xs:documentation>Optional additional information about the file containing the data. It is filled when importing data from files.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="srcDesc">
              <xs:annotation>
                <xs:documentation>Optional description associated to the file as provided by the source application</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:whiteSpace value="preserve" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="xmp">
              <xs:annotation>
                <xs:documentation>Optional XMP meta-data extracted from the file</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="srcPath" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Optional path of the original file</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="srcMime" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Optional MIME type of the original file as identified by the source application. Note that in the case of browsers for example this is based on the file extension, so not really reliable.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="srcSize" type="xs:long" use="optional">
            <xs:annotation>
              <xs:documentation>Optional size in bytes of the original file as identified by the source application.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="mime" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Specifies the MIME type of the data.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="size" type="xs:long" use="optional">
      <xs:annotation>
        <xs:documentation>Optional size in bytes of the data.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="id" type="xs:ID" use="optional">
      <xs:annotation>
        <xs:documentation>Optional internal id of the data content. Ignored on import, except when loading old versions of existing objects.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="categoryRef">
    <xs:annotation>
      <xs:documentation>Reference to a category - either a direct id or a value specifying the category key.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="idref" type="xs:NCName" use="optional">
      <xs:annotation>
        <xs:documentation>The database id of the referenced category. Optional, when present it takes precedence over the value of the 'code' (unique key) attribute defined below</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="code" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Value of the code field uniquely identifying the referenced category.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="categoryRefs">
    <xs:annotation>
      <xs:documentation>References to multiple categories with optional weight</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="ref">
        <xs:complexType>
          <xs:complexContent mixed="false">
            <xs:extension base="gn4:categoryRef">
              <xs:attribute default="0" name="weight" use="optional">
                <xs:annotation>
                  <xs:documentation>The percentage weight of the referenced category, i.e. how well the category matches the data</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                  <xs:restriction base="xs:short">
                    <xs:minInclusive value="0" />
                    <xs:maxInclusive value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:attribute>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="keywords">
    <xs:annotation>
      <xs:documentation>List of keywords.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="faces">
    <xs:annotation>
      <xs:documentation>List of face coordinates (x,y,w,h).</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="item" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="password">
    <xs:annotation>
      <xs:documentation>'Place-holder' simple type to differentiate normal strings in the schema from strings that are actually password - and that as such must be stored in the database and edited in a particular way (stored encrypted, edited masked)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>
  <xs:simpleType name="objectType">
    <xs:annotation>
      <xs:documentation>Object type name - and that as such are edited in a particular way (value selected from a list of object types)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="32" />
      <xs:pattern value="[a-zA-Z][a-zA-Z0-9_]*" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tLockLevel">
    <xs:annotation>
      <xs:documentation>Lock level: only users with a lock level greater or equal can modify an element containing a lock level attribute</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:short">
      <xs:minInclusive value="0" />
      <xs:maxInclusive value="255" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="position">
    <xs:annotation>
      <xs:documentation>Coordinate pairs (longitude, latitude) of a geographical position.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="positionInfo">
        <xs:annotation>
          <xs:documentation>Optional additional information about the geographical position. It is filled when importing data.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="posAddress">
              <xs:annotation>
                <xs:documentation>Optional address associated to the geographical position</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:whiteSpace value="preserve" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="posCountryCode">
              <xs:annotation>
                <xs:documentation>Optional country code associated to the geographical position</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:whiteSpace value="preserve" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="posCountryName">
              <xs:annotation>
                <xs:documentation>Optional country name associated to the geographical position</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:whiteSpace value="preserve" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="posAdminArea">
              <xs:annotation>
                <xs:documentation>Optional administrative area associated to the geographical position</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:whiteSpace value="preserve" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="posSubAdminArea">
              <xs:annotation>
                <xs:documentation>Optional subadministrative area associated to the geographical position</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:whiteSpace value="preserve" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="posCity">
              <xs:annotation>
                <xs:documentation>Optional city associated to the geographical position</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:whiteSpace value="preserve" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="posLocality">
              <xs:annotation>
                <xs:documentation>Optional locality associated to the geographical position</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:whiteSpace value="preserve" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="posThoroughFare">
              <xs:annotation>
                <xs:documentation>Optional thoroughfare associated to the geographical position</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:whiteSpace value="preserve" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="posPostalCode">
              <xs:annotation>
                <xs:documentation>Optional postal code associated to the geographical position</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:whiteSpace value="preserve" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="geonames">
              <xs:annotation>
                <xs:documentation>Optional reverse geocoding data coming from 'geonames' web service (see http://www.geonames.org/) </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="lat" type="xs:decimal" use="required">
      <xs:annotation>
        <xs:documentation>Specifies the latitude of the geographical position.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="lon" type="xs:decimal" use="required">
      <xs:annotation>
        <xs:documentation>Specifies the longitude of the geographical position.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="rgbColor">
    <xs:annotation>
      <xs:documentation>RGB color - represented using HTML syntax: either haxadecimal RGB ('#rrggbb') or one of the standard color names: aqua, black, blue, fuchsia, gray, green, lime, maroon, navy, olive, purple, red, silver, teal, white, yellow</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(#[a-fA-F0-9]{6})|(#[a-fA-F0-9]{3})|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|purple|red|silver|teal|white|yellow" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="rightsStatus">
    <xs:annotation>
      <xs:documentation>Possible copyright statuses. Declared here even if not used in the standard schema objects because it corresponds to a built-in enumeration and logic (see CopyrightNoticeConverter)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="None">
        <xs:annotation>
          <xs:documentation>There are no copyrights associated with the object</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NoExpiration">
        <xs:annotation>
          <xs:documentation>There are copyrights associated with the object, none that can expire</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Expiration">
        <xs:annotation>
          <xs:documentation>There are copyrights associated with the object, and at least one can expire.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="paramType">
    <xs:annotation>
      <xs:documentation>Possible parameter types.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="string" />
      <xs:enumeration value="int" />
      <xs:enumeration value="boolean" />
      <xs:enumeration value="enum" />
      <xs:enumeration value="float" />
      <xs:enumeration value="text" />
      <xs:enumeration value="dateTime" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="paramValue">
    <xs:annotation>
      <xs:documentation>Value of a parameter (applies to both tParams.item.value and tParamsDef.item.default - cannot be longer than 1024 otherwise will become a NText field into the db and will not be searchable anymore).</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="1024" />
      <xs:whiteSpace value="preserve" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="tParams">
    <xs:annotation>
      <xs:documentation>General parameters: a list of name/value pairs. Note that parameters (name and values) are passed on URLs, so it is better if they are as short and simple as possible, hence the short maximum length and restrictive rules for parameters name and value</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
        <xs:complexType>
          <xs:attribute name="name">
            <xs:annotation>
              <xs:documentation>Name of the parameter.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1" />
                <xs:maxLength value="30" />
                <xs:pattern value="[A-Za-z0-9]+" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="value" type="gn4:paramValue">
            <xs:annotation>
              <xs:documentation>Value of the parameter.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="tParamsDef">
    <xs:annotation>
      <xs:documentation>Parameters definition.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
        <xs:complexType>
          <xs:attribute name="name" use="required">
            <xs:annotation>
              <xs:documentation>The name of the parameter</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1" />
                <xs:maxLength value="30" />
                <xs:pattern value="[A-Za-z0-9]+" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="type" type="gn4:paramType" use="required">
            <xs:annotation>
              <xs:documentation>The type of the parameter</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="maxLength" use="optional">
            <xs:annotation>
              <xs:documentation>Maximum length of the parameter value. Applies only when type is 'string' or 'text'</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="-2147483648" name="min" type="xs:double" use="optional">
            <xs:annotation>
              <xs:documentation>Minimum value of the parameter. Applies only when type is 'int' or 'float'</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="2147483647" name="max" type="xs:double" use="optional">
            <xs:annotation>
              <xs:documentation>Maximum value of the parameter. Applies only when type is 'int' or 'float'</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="values" use="optional">
            <xs:annotation>
              <xs:documentation>Possible values for the parameter. Applies only when type is 'enum' - cannot be longer than 1024 otherwise will become a NText field into the db and will not be searchable anymore)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="1024" />
                <xs:whiteSpace value="collapse" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="default" type="gn4:paramValue" use="optional">
            <xs:annotation>
              <xs:documentation>Default value of the parameter.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="instruction" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Instruction to be displayed when editing the value of the parameter</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="RSS20Languages">
    <xs:annotation>
      <xs:documentation>Standard languages codes as defined in the RSS 2.0 specification. It is a sub-set of the general W3C language/script/region specifications that is based on ISO standard codes.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="af">
        <xs:annotation>
          <xs:documentation>Afrikaans</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="sq">
        <xs:annotation>
          <xs:documentation>Albanian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="eu">
        <xs:annotation>
          <xs:documentation>Basque</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="be">
        <xs:annotation>
          <xs:documentation>Belarusian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="bg">
        <xs:annotation>
          <xs:documentation>Bulgarian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ca">
        <xs:annotation>
          <xs:documentation>Catalan</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="zh-cn">
        <xs:annotation>
          <xs:documentation>Chinese (Simplified)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="zh-tw">
        <xs:annotation>
          <xs:documentation>Chinese (Traditional)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="hr">
        <xs:annotation>
          <xs:documentation>Croatian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="cs">
        <xs:annotation>
          <xs:documentation>Czech</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="da">
        <xs:annotation>
          <xs:documentation>Danish</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="nl">
        <xs:annotation>
          <xs:documentation>Dutch</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="nl-be">
        <xs:annotation>
          <xs:documentation>Dutch (Belgium)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="nl-nl">
        <xs:annotation>
          <xs:documentation>Dutch (Netherlands)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="en">
        <xs:annotation>
          <xs:documentation>English</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="en-au">
        <xs:annotation>
          <xs:documentation>English (Australia)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="en-bz">
        <xs:annotation>
          <xs:documentation>English (Belize)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="en-ca">
        <xs:annotation>
          <xs:documentation>English (Canada)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="en-ie">
        <xs:annotation>
          <xs:documentation>English (Ireland)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="en-jm">
        <xs:annotation>
          <xs:documentation>English (Jamaica)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="en-nz">
        <xs:annotation>
          <xs:documentation>English (New Zealand)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="en-ph">
        <xs:annotation>
          <xs:documentation>English (Phillipines)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="en-za">
        <xs:annotation>
          <xs:documentation>English (South Africa)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="en-tt">
        <xs:annotation>
          <xs:documentation>English (Trinidad)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="en-gb">
        <xs:annotation>
          <xs:documentation>English (United Kingdom)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="en-us">
        <xs:annotation>
          <xs:documentation>English (United States)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="en-zw">
        <xs:annotation>
          <xs:documentation>English (Zimbabwe)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="et">
        <xs:annotation>
          <xs:documentation>Estonian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="fo">
        <xs:annotation>
          <xs:documentation>Faeroese</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="fi">
        <xs:annotation>
          <xs:documentation>Finnish</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="fr">
        <xs:annotation>
          <xs:documentation>French</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="fr-be">
        <xs:annotation>
          <xs:documentation>French (Belgium)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="fr-ca">
        <xs:annotation>
          <xs:documentation>French (Canada)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="fr-fr">
        <xs:annotation>
          <xs:documentation>French (France)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="fr-lu">
        <xs:annotation>
          <xs:documentation>French (Luxembourg)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="fr-mc">
        <xs:annotation>
          <xs:documentation>French (Monaco)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="fr-ch">
        <xs:annotation>
          <xs:documentation>French (Switzerland)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="gl">
        <xs:annotation>
          <xs:documentation>Galician</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="gd">
        <xs:annotation>
          <xs:documentation>Gaelic</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="de">
        <xs:annotation>
          <xs:documentation>German</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="de-at">
        <xs:annotation>
          <xs:documentation>German (Austria)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="de-de">
        <xs:annotation>
          <xs:documentation>German (Germany)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="de-li">
        <xs:annotation>
          <xs:documentation>German (Liechtenstein)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="de-lu">
        <xs:annotation>
          <xs:documentation>German (Luxembourg)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="de-ch">
        <xs:annotation>
          <xs:documentation>German (Switzerland)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="el">
        <xs:annotation>
          <xs:documentation>Greek</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="haw">
        <xs:annotation>
          <xs:documentation>Hawaiian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="hu">
        <xs:annotation>
          <xs:documentation>Hungarian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="is">
        <xs:annotation>
          <xs:documentation>Icelandic</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="in">
        <xs:annotation>
          <xs:documentation>Indonesian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ga">
        <xs:annotation>
          <xs:documentation>Irish</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="it">
        <xs:annotation>
          <xs:documentation>Italian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="it-it">
        <xs:annotation>
          <xs:documentation>Italian (Italy)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="it-ch">
        <xs:annotation>
          <xs:documentation>Italian (Switzerland)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ja">
        <xs:annotation>
          <xs:documentation>Japanese</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ko">
        <xs:annotation>
          <xs:documentation>Korean</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="mk">
        <xs:annotation>
          <xs:documentation>Macedonian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="no">
        <xs:annotation>
          <xs:documentation>Norwegian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="pl">
        <xs:annotation>
          <xs:documentation>Polish</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="pt">
        <xs:annotation>
          <xs:documentation>Portuguese</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="pt-br">
        <xs:annotation>
          <xs:documentation>Portuguese (Brazil)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="pt-pt">
        <xs:annotation>
          <xs:documentation>Portuguese (Portugal)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ro">
        <xs:annotation>
          <xs:documentation>Romanian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ro-mo">
        <xs:annotation>
          <xs:documentation>Romanian (Moldova)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ro-ro">
        <xs:annotation>
          <xs:documentation>Romanian (Romania)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ru">
        <xs:annotation>
          <xs:documentation>Russian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ru-mo">
        <xs:annotation>
          <xs:documentation>Russian (Moldova)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ru-ru">
        <xs:annotation>
          <xs:documentation>Russian (Russia)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="sr">
        <xs:annotation>
          <xs:documentation>Serbian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="sk">
        <xs:annotation>
          <xs:documentation>Slovak</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="sl">
        <xs:annotation>
          <xs:documentation>Slovenian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es">
        <xs:annotation>
          <xs:documentation>Spanish</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-ar">
        <xs:annotation>
          <xs:documentation>Spanish (Argentina)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-bo">
        <xs:annotation>
          <xs:documentation>Spanish (Bolivia)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-cl">
        <xs:annotation>
          <xs:documentation>Spanish (Chile)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-co">
        <xs:annotation>
          <xs:documentation>Spanish (Colombia)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-cr">
        <xs:annotation>
          <xs:documentation>Spanish (Costa Rica)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-do">
        <xs:annotation>
          <xs:documentation>Spanish (Dominican Republic)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-ec">
        <xs:annotation>
          <xs:documentation>Spanish (Ecuador)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-sv">
        <xs:annotation>
          <xs:documentation>Spanish (El Salvador)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-gt">
        <xs:annotation>
          <xs:documentation>Spanish (Guatemala)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-hn">
        <xs:annotation>
          <xs:documentation>Spanish (Honduras)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-mx">
        <xs:annotation>
          <xs:documentation>Spanish (Mexico)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-ni">
        <xs:annotation>
          <xs:documentation>Spanish (Nicaragua)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-pa">
        <xs:annotation>
          <xs:documentation>Spanish (Panama)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-py">
        <xs:annotation>
          <xs:documentation>Spanish (Paraguay)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-pe">
        <xs:annotation>
          <xs:documentation>Spanish (Peru)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-pr">
        <xs:annotation>
          <xs:documentation>Spanish (Puerto Rico)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-es">
        <xs:annotation>
          <xs:documentation>Spanish (Spain)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-uy">
        <xs:annotation>
          <xs:documentation>Spanish (Uruguay)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="es-ve">
        <xs:annotation>
          <xs:documentation>Spanish (Venezuela)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="sv">
        <xs:annotation>
          <xs:documentation>Swedish</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="sv-fi">
        <xs:annotation>
          <xs:documentation>Swedish (Finland)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="sv-se">
        <xs:annotation>
          <xs:documentation>Swedish (Sweden)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="tr">
        <xs:annotation>
          <xs:documentation>Turkish</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="uk">
        <xs:annotation>
          <xs:documentation>Ukranian</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tName">
    <xs:annotation>
      <xs:documentation>General object name. It cannot be empty.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1" />
      <xs:maxLength value="80" />
      <xs:whiteSpace value="collapse" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tOptionalName">
    <xs:annotation>
      <xs:documentation>General object name. It can be empty.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="0" />
      <xs:maxLength value="80" />
      <xs:whiteSpace value="collapse" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tPath">
    <xs:annotation>
      <xs:documentation>General object path or file path or URL.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="400" />
      <xs:whiteSpace value="collapse" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tTitle">
    <xs:annotation>
      <xs:documentation>A line of text (single-line string), typically used for titles</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="200" />
      <xs:whiteSpace value="collapse" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tDescription">
    <xs:annotation>
      <xs:documentation>General object description.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="500" />
      <xs:whiteSpace value="preserve" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tText">
    <xs:annotation>
      <xs:documentation>A free-form text: very large multi-line string</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="100000" />
      <xs:whiteSpace value="preserve" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tNonNegativeInt">
    <xs:annotation>
      <xs:documentation>An integer (32 bits) greater or equal than zero</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tPositiveInt">
    <xs:annotation>
      <xs:documentation>An integer (32 bits) greater than zero</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minExclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tNonNegativeShort">
    <xs:annotation>
      <xs:documentation>An integer (16 bits) greater or equal than zero</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:short">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tNonNegativeLong">
    <xs:annotation>
      <xs:documentation>A long integer (64 bits) greater or equal than zero</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tNonNegativeDouble">
    <xs:annotation>
      <xs:documentation>A double precision floating point greater or equal than zero</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:double">
      <xs:minInclusive value="0.0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tPercentage">
    <xs:annotation>
      <xs:documentation>An integer (16 bits) from 0 to 100</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:short">
      <xs:minInclusive value="0" />
      <xs:maxInclusive value="100" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tExpirationRuleComputedTrigger">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Creation Date">
        <xs:annotation>
          <xs:documentation>Expiration date computed from creation date.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Modified Date">
        <xs:annotation>
          <xs:documentation>Expiration date computed from last modification date.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Attribute Value">
        <xs:annotation>
          <xs:documentation>Expiration date computed from the object attribute specified in the attributeName.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tSpikeCode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Normal">
        <xs:annotation>
          <xs:documentation>Standard spiking.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Carbon Copy">
        <xs:annotation>
          <xs:documentation>Black Copy.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Auto">
        <xs:annotation>
          <xs:documentation>Automatic spiking of sub-objects no longer used.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tObjectTypes">
    <xs:annotation>
      <xs:documentation>List of object types - represented as a string containing space-separated object type names</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="255" />
      <xs:whiteSpace value="collapse" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tAttributes">
    <xs:annotation>
      <xs:documentation>List of attributes - represented as a string containing space-separated full attribute names (e.g. 'video.title' etc.)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="255" />
      <xs:whiteSpace value="collapse" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tTaskStatus">
    <xs:annotation>
      <xs:documentation>Possible states of a task ('to-do'). Corresponds to the possible values of the iCalendar to-dos 'status' property.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="needsAction" />
      <xs:enumeration value="completed" />
      <xs:enumeration value="inProcess" />
      <xs:enumeration value="cancelled" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tCopyFlowTransition">
    <xs:annotation>
      <xs:documentation>Type of a copy-flow transition - i.e. for which operation it is used</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="sendOn" />
      <xs:enumeration value="sendBack" />
      <xs:enumeration value="start" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tPlatform">
    <xs:annotation>
      <xs:documentation>Type of Platform machine: 32bit (x86) or 64bit (x64)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="x86" />
      <xs:enumeration value="x64" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tVersionMode">
    <xs:annotation>
      <xs:documentation>Possible version creation modes: : which actions trigger the creation of a version</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="everySave">
        <xs:annotation>
          <xs:documentation>Create versions at every save (update) operation</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="explicitSave">
        <xs:annotation>
          <xs:documentation>Create versions only at saves (updates) explicitely requested by a user - i.e. not auto-saves.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="oncePerSession">
        <xs:annotation>
          <xs:documentation>Create versions only once for each editing session.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tFolderKind">
    <xs:annotation>
      <xs:documentation>Search kind to be used to filter full text searches</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="wires" />
      <xs:enumeration value="archive" />
      <xs:enumeration value="editorial" />
      <xs:enumeration value="contacts" />
      <xs:enumeration value="userContent" />
      <xs:enumeration value="otherContent" />
      <xs:enumeration value="audiences" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tProcessType">
    <xs:annotation>
      <xs:documentation>The type of the client application's designers.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="articleDesigner">
        <xs:annotation>
          <xs:documentation>The article editor</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="pageDesigner">
        <xs:annotation>
          <xs:documentation>The page editor</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="editionDesigner">
        <xs:annotation>
          <xs:documentation>The edition editor</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="publishDesigner">
        <xs:annotation>
          <xs:documentation>The publishing destination editor</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TracyDesigner">
        <xs:annotation>
          <xs:documentation>The page tracer</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GNXCapture">
        <xs:annotation>
          <xs:documentation>The GN mobile application</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="InDesignDesigner">
        <xs:annotation>
          <xs:documentation>The Adobe InDesign plugin</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="InCopyDesigner">
        <xs:annotation>
          <xs:documentation>The Adobe InCopy plugin</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PhotoshopDesigner">
        <xs:annotation>
          <xs:documentation>The Adobe Photoshop plugin</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="articleDesignerWeb">
        <xs:annotation>
          <xs:documentation>The article editor in I4</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IllustratorDesigner">
        <xs:annotation>
          <xs:documentation>The Adobe Illustrator plugin</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="tXml">
    <xs:annotation>
      <xs:documentation>Arbitrary XML</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="tNameTemplate">
    <xs:annotation>
      <xs:documentation>A template describing how to compose an object name - used to describe how to create descriptive names for budgets (and editions and pages in editorial configs)</xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element minOccurs="0" maxOccurs="unbounded" name="text">
        <xs:annotation>
          <xs:documentation>A text fragment to insert 'as-is' in the name</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="value" type="xs:string">
            <xs:annotation>
              <xs:documentation>The text to insert</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="var">
        <xs:annotation>
          <xs:documentation>A variable to insert in the name</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the variable to insert</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="var-date">
        <xs:annotation>
          <xs:documentation>A date/time variable to insert in the name</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the variable to insert</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="format" type="xs:string">
            <xs:annotation>
              <xs:documentation>How to format the date/time - using C# date-formatting syntax</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="var-number">
        <xs:annotation>
          <xs:documentation>A numric variable to insert in the name</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the variable to insert</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="format" type="xs:string">
            <xs:annotation>
              <xs:documentation>How to format the number - using the XPath format-number() function</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="var-boolean">
        <xs:annotation>
          <xs:documentation>A numric variable to insert in the name</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:attribute name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the variable to insert</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Value to insert when the variable is true</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>Value to insert when the variable is false</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="_objectTypeBase">
    <xs:annotation>
      <xs:documentation>Base object type attributes (none at the moment being)</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType id="type1" gs:descName="@name" name="object" abstract="true">
    <xs:annotation>
      <xs:documentation>Base type all the other ones descend from</xs:documentation>
      <xs:appinfo>
        <gs:index attrs="gn_isSpiked name gn_ObjectTypeId" xmlns:gs="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd" />
        <gs:index attrs="gn_isSpiked gn_ObjectTypeId modifiedDate" />
        <gs:compute>
          <!--
            Semplified XSL transformation to compute last modification date/time
          -->
          <object xmlns="">
            <!-- Set last modification date/time, when recomputing do nothing -->
            <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
              <xsl:when test="$context/oc:OperationContext/@Kind!='AutoRecompute'">
                <xsl:attribute name="modifiedDate">
                  <xsl:choose>
                    <!-- If an Upgrade, ie a schema upgrade, just get the value from the audit trail -->
                    <xsl:when test="$context/oc:OperationContext/@Kind='Upgrade'">
                      <xsl:value-of select="nav:modified/nav:actionDesc/@Time" />
                    </xsl:when>
                    <!-- If it is a normal update use the current date-time -->
                    <xsl:otherwise>
                      <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:attribute>
              </xsl:when>
            </xsl:choose>
          </object>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:group ref="gn4:objectExtra" />
    <xs:attribute name="id" type="xs:ID" use="required">
      <xs:annotation>
        <xs:documentation>The object id</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="gn4:tName" use="required">
      <xs:annotation>
        <xs:documentation>The object generic name - used in different ways by the descenders</xs:documentation>
        <xs:appinfo>
          <gs:fullTextAttr exaMetaName="gn4Title">
          </gs:fullTextAttr>
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute gs:compute="true" name="modifiedDate" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>The object last modified date</xs:documentation>
        <xs:appinfo>
          <gs:fullTextAttr exaMetaName="modifiedDate" />
        </xs:appinfo>
      </xs:annotation>
    </xs:attribute>
    <xs:attributeGroup ref="gn4:objectExtra" />
  </xs:complexType>
  <xs:element gs:key="name" name="team">
    <xs:annotation>
      <xs:documentation>Group of users</xs:documentation>
      <xs:appinfo />
    </xs:annotation>
    <xs:complexType id="type2" gs:key="name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General object description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="PlanCategories" minOccurs="0" name="cats" type="gn4:categoryRefs">
              <xs:annotation>
                <xs:documentation>Planning categories.</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" displayCompletePath="false" showWeights="false">
                      <objectUI xmlns="">
                        <web maxRows="5" />
                      </objectUI>
                    </gs:template>
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:teamExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:teamExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="securityScope">
    <xs:complexType id="type3" gs:key="name" gs:descName="@name">
      <xs:annotation>
        <xs:documentation>Scope used to bundle together related users and groups and control who can access and modify them.</xs:documentation>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of the scope</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions to the scope and the user/groups belonging to it</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="partition" gs:access="Protected" name="partitionRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to a partition.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="parsDef" type="gn4:tParamsDef">
              <xs:annotation>
                <xs:documentation>Provides a definition of the parameters the security objects that refer this securityScope object can have</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:securityScopeExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:securityScopeExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type4" gs:descName="@name" name="security" abstract="true">
    <xs:annotation>
      <xs:documentation>User or group common ancestor type. It is an 'abstract' type, i.e. there should be no actual objects of this type.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:object">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="gn4:tDescription">
            <xs:annotation>
              <xs:documentation>General description of the user or group</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:refer="securityScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
            <xs:annotation>
              <xs:documentation>The scope the user/group belongs to</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="access" type="gn4:accessDirect">
            <xs:annotation>
              <xs:documentation>Access permissions to this user/group. Usually access permissions are derived from the scope, but in some cases it is necessary to set them individually to give a user access to his/her own data. This is the reason it is a direct-only access, we do NOT want it to apply to objects containing references to users or groups (e.g. the creatorRef for a folderObject)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="privs" type="gn4:privileges">
            <xs:annotation>
              <xs:documentation>User or group system privileges</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="eMail" type="gn4:tTitle">
            <xs:annotation>
              <xs:documentation>e-mail address of the user or group. Group can have e-mail address corresponding to mailing lists or similar</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="credentials">
            <xs:annotation>
              <xs:documentation>Credentials used by users to access remote resources: FTP file systems, HTTP or LDAP servers etc. The credentials can be defined for user and groups, and when a user log-in to the system the ones of all the groups he/she belongs to will be merged with his/her specific ones.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
                  <xs:complexType>
                    <xs:attribute name="url" type="gn4:tName" use="required">
                      <xs:annotation>
                        <xs:documentation>The URL that we are providing authentication for. It must be specified always.</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="Basic" name="authType" use="optional">
                      <xs:annotation>
                        <xs:documentation>The authentication type (see http://msdn2.microsoft.com/en-us/library/system.net.authenticationschemes(VS.80).aspx. It is optional, defaulting to 'Basic' (the most common for http servers)</xs:documentation>
                      </xs:annotation>
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:enumeration value="Anonymous">
                            <xs:annotation>
                              <xs:documentation>Specifies anonymous authentication.</xs:documentation>
                            </xs:annotation>
                          </xs:enumeration>
                          <xs:enumeration value="Basic">
                            <xs:annotation>
                              <xs:documentation>Specifies basic authentication. For additional information, see RFC2617 – HTTP Authentication: Basic and Digest Authentication. This document is available at http://www.rfc-editor.org.</xs:documentation>
                            </xs:annotation>
                          </xs:enumeration>
                          <xs:enumeration value="Digest">
                            <xs:annotation>
                              <xs:documentation>Specifies digest authentication. For additional information, see RFC2617 – HTTP Authentication: Basic and Digest Authentication. This document is available at http://www.rfc-editor.org</xs:documentation>
                            </xs:annotation>
                          </xs:enumeration>
                          <xs:enumeration value="IntegratedWindowsAuthentication">
                            <xs:annotation>
                              <xs:documentation>Specifies Windows authentication.</xs:documentation>
                            </xs:annotation>
                          </xs:enumeration>
                          <xs:enumeration value="Negotiate">
                            <xs:annotation>
                              <xs:documentation>Negotiates with the client to determine the authentication scheme. If both client and server support Kerberos, it is used; otherwise, NTLM is used.</xs:documentation>
                            </xs:annotation>
                          </xs:enumeration>
                          <xs:enumeration value="None">
                            <xs:annotation>
                              <xs:documentation>No authentication is allowed. Use this value when a resource should never be served to a client. </xs:documentation>
                            </xs:annotation>
                          </xs:enumeration>
                          <xs:enumeration value="NTLM">
                            <xs:annotation>
                              <xs:documentation>Specifies NTLM authentication.</xs:documentation>
                            </xs:annotation>
                          </xs:enumeration>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="userName" use="required">
                      <xs:annotation>
                        <xs:documentation>The user name. It must be specified always.</xs:documentation>
                      </xs:annotation>
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:maxLength value="40" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute default="" name="password" use="optional">
                      <xs:annotation>
                        <xs:documentation>The user's password. It is optional, defaulting to empty string = no password</xs:documentation>
                      </xs:annotation>
                      <xs:simpleType>
                        <xs:restriction base="gn4:password">
                          <xs:maxLength value="40" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute default="" name="domain" use="optional">
                      <xs:annotation>
                        <xs:documentation>The (optional) domain associated with these credentials.</xs:documentation>
                      </xs:annotation>
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:maxLength value="40" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="params" type="gn4:tParams">
            <xs:annotation>
              <xs:documentation>General parameters that are available in the login context of a user. They are defined for user and groups, and then merged for all the groups the logged user belongs to to produce a single list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:access="Protected" name="urlAccess">
            <xs:annotation>
              <xs:documentation>List of URLs granted or denied</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
                  <xs:complexType>
                    <xs:attribute default="*" name="appName" type="gn4:tName">
                      <xs:annotation>
                        <xs:documentation>Name of the application.</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="*" name="url" type="gn4:tPath">
                      <xs:annotation>
                        <xs:documentation>The URL to grant/deny access to.</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="true" name="allow" type="xs:boolean">
                      <xs:annotation>
                        <xs:documentation>Access granted or denied.</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="copyFlow">
            <xs:annotation>
              <xs:documentation>Copy-flow for this user/group: pre-defined sequence (graph) of folders used in send-next (aka send-on) and send-back operations. Corresponds to the GN3 CopyFlowTable</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="item">
                  <xs:annotation>
                    <xs:documentation>A copy-flow graph segment</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element gs:refer="folder" minOccurs="0" name="fromFolderRef" nillable="true" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>Source folder for this copy-flow segment. Not specified if the source is the object's creation folder</xs:documentation>
                          <xs:appinfo>
                            <gs:ui>
                              <gs:template kind="Tree" refAttributes="folderParent" displayCompletePath="true" />
                            </gs:ui>
                          </xs:appinfo>
                        </xs:annotation>
                      </xs:element>
                      <xs:element gs:refer="folder" minOccurs="0" name="toFolderRef" nillable="true" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>Destination folder for this copy-flow segment. Not specified if the destination is the object's creation folder</xs:documentation>
                          <xs:appinfo>
                            <gs:ui>
                              <gs:template kind="Tree" refAttributes="folderParent" displayCompletePath="true" />
                            </gs:ui>
                          </xs:appinfo>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                    <xs:attribute name="type" type="gn4:tCopyFlowTransition" use="required">
                      <xs:annotation>
                        <xs:documentation>Type of this copy-flow transition - i.e. for which operation is used</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="taskCopyFlow">
            <xs:annotation>
              <xs:documentation>Copy-flow for this user/group: pre-defined sequence (graph) of calendar used in send-next (aka send-on) and send-back operations.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="item">
                  <xs:annotation>
                    <xs:documentation>A copy-flow graph segment</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element gs:refer="calendar" minOccurs="0" name="fromCalendarRef" nillable="true" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>Source calendar for this copy-flow segment. Not specified if the source is the object's creation calendar</xs:documentation>
                          <xs:appinfo>
                            <gs:ui>
                              <gs:template kind="Tree" refAttributes="calendarParent" displayCompletePath="true" />
                            </gs:ui>
                          </xs:appinfo>
                        </xs:annotation>
                      </xs:element>
                      <xs:element gs:refer="calendar" minOccurs="0" name="toCalendarRef" nillable="true" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>Destination calendar for this copy-flow segment. Not specified if the destination is the object's creation calendar</xs:documentation>
                          <xs:appinfo>
                            <gs:ui>
                              <gs:template kind="Tree" refAttributes="calendarParent" displayCompletePath="true" />
                            </gs:ui>
                          </xs:appinfo>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                    <xs:attribute name="type" type="gn4:tCopyFlowTransition" use="required">
                      <xs:annotation>
                        <xs:documentation>Type of this copy-flow transition - i.e. for which operation is used</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:group ref="gn4:securityExtra" />
        </xs:sequence>
        <xs:attribute default="0" name="lockLevel" type="gn4:tLockLevel" use="optional">
          <xs:annotation>
            <xs:documentation>Lock level</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Protected" default="false" name="sharedLogin" type="xs:boolean" use="optional">
          <xs:annotation>
            <xs:documentation>Set to true to tolerate changing IP address for this login; set to false (default) to return an exception when the IP address changes.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="gn4:securityExtra" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType id="type5" gs:key="name" gs:descName="@descName" name="user">
    <xs:annotation>
      <xs:appinfo>
        <gs:compute inherit="true">
          <user xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns="">
            <!--
              descName is fullName if it is specified (non-empty) and just @name (the login name) if @fullName is empty.
            -->
            <xsl:attribute name="descName" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
              <xsl:choose>
                <xsl:when test="string(@fullName)">
                  <xsl:value-of select="@fullName" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="@name" />
                </xsl:otherwise>
              </xsl:choose>
            </xsl:attribute>
          </user>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:security">
        <xs:sequence>
          <xs:element gs:access="Protected" name="groups">
            <xs:annotation>
              <xs:documentation>The groups the user belongs to - in priority order: settings of groups listed first have the precedence</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:refer="group" gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="groupRef" type="gn4:reference" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element gs:access="Protected" minOccurs="0" name="teams">
            <xs:annotation>
              <xs:documentation>The teams the user belongs to</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:refer="team" gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="ref">
                  <xs:complexType>
                    <xs:complexContent mixed="false">
                      <xs:extension base="gn4:reference" />
                    </xs:complexContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="dests">
            <xs:annotation>
              <xs:documentation>The notification destinations the user subscrides to. The attribute is ordered only for user interface purpose</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:refer="notifyDest" gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="notifyDestRef" type="gn4:reference" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:group ref="gn4:userExtra" />
        </xs:sequence>
        <xs:attribute gs:access="Special" default="" name="password" use="optional">
          <xs:annotation>
            <xs:documentation>Optional user's password - used when user authentication is performed by the system itself</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="gn4:password">
              <xs:maxLength value="40" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute gs:access="Special" name="question" use="optional">
          <xs:annotation>
            <xs:documentation>Optional user's question - meaningful when ownQuestion is empty, used together with answer when the user has to recover his/her password</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="What was your childhood nickname?" />
              <xs:enumeration value="What is the name of your favorite childhood friend?" />
              <xs:enumeration value="What was the name of your first animal you had as a child?" />
              <xs:enumeration value="What is the first name of the boy or girl that you first kissed?" />
              <xs:enumeration value="What are the last 5 digits of your driver's license number?" />
              <xs:enumeration value="What is your youngest brother's birthday?" />
              <xs:enumeration value="What is your maternal grandmother's maiden name?" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute gs:access="Special" default="" name="ownQuestion" type="gn4:tTitle" use="optional">
          <xs:annotation>
            <xs:documentation>Optional user's own question - used together with answer when the user has to recover his/her password</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Special" default="" name="answer" type="gn4:tTitle" use="optional">
          <xs:annotation>
            <xs:documentation>Optional user's answer - used together with question when the user has to recover his/her password</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Protected" default="false" name="disabled" type="xs:boolean" use="optional">
          <xs:annotation>
            <xs:documentation>Set to true to disable the user, so that he/she cannot log-in to the system any more</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="" name="fullName" type="gn4:tTitle" use="optional">
          <xs:annotation>
            <xs:documentation>The complete name of the user - as it should appear when the user is listed or referenced in the user interface</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Protected" default="named" name="loginType" use="optional">
          <xs:annotation>
            <xs:documentation>The type of license needed to login to the system</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="concurrent">
                <xs:annotation>
                  <xs:documentation>Shared license used part-time by a pool of users</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="named">
                <xs:annotation>
                  <xs:documentation>License associated to a specific user (non shareable)</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="public">
                <xs:annotation>
                  <xs:documentation>Public and open license with few limited functionalities.</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute gs:compute="true" name="descName" type="gn4:tTitle" use="optional">
          <xs:annotation>
            <xs:documentation>The descriptive name of the user. Automatically computed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Special" name="claimedIdentifier" type="gn4:tPath" use="optional">
          <xs:annotation>
            <xs:documentation>OpenId 'Claimed Identifier' - used to associate a user with his/her OpenId when using OpenId-based authentication (e.g. Google)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="gn4:userExtra" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="user" type="gn4:user">
    <xs:annotation>
      <xs:documentation>User</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="userGap">
    <xs:complexType id="type6" gs:key="userRef reasonRef start" gs:descName="@descName" gs:shortName="@shortName">
      <xs:annotation>
        <xs:documentation>Time interval describing when the user is not available: sick leave, vacation etc.</xs:documentation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <!--
              Semplified XSL transformation to compute last modification date/time, end date-time
              and descriptive names
            -->
            <userGap xmlns="">
              <!-- Set end date-time -->
              <xsl:attribute name="autoEnd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:choose>
                  <xsl:when test="(gn4:endMode = 'endAsDate') and gn4:end">
                    <xsl:value-of select="gn4:end" />
                  </xsl:when>
                  <xsl:when test="(gn4:endMode = 'endAsDuration') and gn4:start and gn4:duration">
                    <xsl:value-of select="fn:addDuration(gn4:start,number(gn4:duration)*60)" />
                  </xsl:when>
                </xsl:choose>
              </xsl:attribute>
              <!-- Set the short name: reason + start date  -->
              <xsl:variable name="clientTimeZoneId" select="$context/lc:LoginContext/@ClientTimeZoneId" />
              <xsl:variable name="formattedLocalStart" select="fn:formatDateTime(fn:fromUTCToClientLocalTime(gn4:start,$clientTimeZoneId),'d')" />
              <xsl:variable name="shortName">
                <xsl:value-of select="concat(gn4:reasonRef/nav:refObject/gn4:category/@name ,' ',$formattedLocalStart)" />
              </xsl:variable>
              <xsl:attribute name="shortName">
                <xsl:value-of select="$shortName" />
              </xsl:attribute>
              <!-- Set the descriptive name: user desc name + short name -->
              <xsl:attribute name="descName">
                <xsl:value-of select="concat(gn4:userRef/nav:refObject/gn4:user/@descName ,' - ',$shortName)" />
              </xsl:attribute>
            </userGap>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="securityScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope this gap belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="user" name="userRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The user this gap refers to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="GapReasons" name="reasonRef" type="gn4:categoryRef">
              <xs:annotation>
                <xs:documentation>Reason for the gap: ill, on vacation etc..</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="DropDown" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element name="start" type="xs:dateTime">
              <xs:annotation>
                <xs:documentation>Gap starting date and time.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="endMode">
              <xs:annotation>
                <xs:documentation>Specifies how the end date-time of the gap is specified</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="endAsDuration">
                    <xs:annotation>
                      <xs:documentation>The end date-time is specified as a duration from the start date-time</xs:documentation>
                    </xs:annotation>
                  </xs:enumeration>
                  <xs:enumeration value="endAsDate">
                    <xs:annotation>
                      <xs:documentation>The end date-time is specified directly</xs:documentation>
                    </xs:annotation>
                  </xs:enumeration>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element gs:dimension="time:min" minOccurs="0" name="duration">
              <xs:annotation>
                <xs:documentation>Duration of the gap, in minutes. Used only if endMode is 'endAsDuration'</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:int">
                  <xs:minInclusive value="0" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="end" type="xs:dateTime">
              <xs:annotation>
                <xs:documentation>Gap ending date and time. Used only if endMode is 'endAsDate'</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of the gap.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:userGapExtra" />
          </xs:sequence>
          <xs:attribute gs:compute="true" name="autoEnd" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically computed gap end date/time.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="descName" type="gn4:tTitle" use="optional">
            <xs:annotation>
              <xs:documentation>The descriptive name of the gap. Automatically computed.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="shortName" type="gn4:tTitle" use="optional">
            <xs:annotation>
              <xs:documentation>The short name of the gap. Automatically computed.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:userGapExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type7" gs:key="name" name="group">
    <xs:annotation>
      <xs:documentation>Group</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:security">
        <xs:sequence>
          <xs:element name="processLimits">
            <xs:annotation>
              <xs:documentation>
                Maximum limits of allowed running designers in client applications. Automatically computed by groups.
                The max value is verified by the GN4 license system: if the max value is 0, then no limit is applied.
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
                  <xs:complexType>
                    <xs:attribute name="processType" type="gn4:tProcessType" use="required">
                      <xs:annotation>
                        <xs:documentation>The type of the client application's designer.</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="0" name="max" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>The maximum number of running designers.</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:group ref="gn4:groupExtra" />
        </xs:sequence>
        <xs:attributeGroup ref="gn4:groupExtra" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="group" type="gn4:group">
    <xs:annotation>
      <xs:documentation>Group</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="configScope">
    <xs:complexType id="type8" gs:key="name" gs:descName="@name">
      <xs:annotation>
        <xs:documentation>Scope used to bundle together configuration data and control who can access and modify it.</xs:documentation>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of the scope</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions to the scope and the configuration data belonging to it.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:configScopeExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:configScopeExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="config">
    <xs:annotation>
      <xs:documentation>Configuration data</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type9" gs:key="securityRef name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the configuration data belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="security" minOccurs="0" name="securityRef" type="gn4:reference" />
            <xs:element gs:mimeTypes="application/xml" name="data" type="gn4:dataContent">
              <xs:annotation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="XmlEditor" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:configExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:configExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="icon">
    <xs:annotation>
      <xs:documentation>Standard icons</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type10" gs:key="name pixelSize language" gs:descName="concat(@name,' ',@pixelSize,' ',@language)">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the configuration data belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="image" name="data" type="gn4:dataContent" />
            <xs:group ref="gn4:iconExtra" />
          </xs:sequence>
          <xs:attribute name="language" use="optional">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="20" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="pixelSize" type="xs:short" use="required" />
          <xs:attributeGroup ref="gn4:iconExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="category">
    <xs:complexType id="type11" gs:key="categorySetName code" gs:descName="concat(@path, substring(concat(' (', @code, ')'), (@code=@name)*string-length(concat(' (', @code, ')'))+1))" gs:shortName="@name">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <category xmlns="">
              <!--
                Compute scopeRef based on the category set or parent category
              -->
              <xsl:variable name="parentCategorySet" select="nav:referencing/nav:parentBy[@attrName='categorySet.categories']/nav:refs" />
              <xsl:variable name="parentCategory" select="nav:referencing/nav:parentBy[@attrName='category.categories']/nav:refs" />
              <xsl:if test="string($parentCategory/@handle)">
                <xsl:attribute name="path">
                  <xsl:value-of select="concat($parentCategory/nav:refObject/gn4:category/@path,'/',@name)" />
                </xsl:attribute>
              </xsl:if>
              <xsl:if test="string($parentCategorySet/@handle) and string($parentCategory/@handle)">
                <xsl:choose>
                  <xsl:when test="$parentCategorySet/nav:refObject">
                    <!--this category is a direct child of the categorySet it belongs to => get sourceRef from the parent categorySet-->
                    <scopeRef>
                      <xsl:attribute name="idref">
                        <xsl:value-of select="$parentCategorySet/nav:refObject/gn4:categorySet/gn4:scopeRef/@idref" />
                      </xsl:attribute>
                    </scopeRef>
                  </xsl:when>
                  <xsl:when test="$parentCategory/nav:refObject">
                    <!--this category is a sub-category of another category => get sourceRef from the parent category-->
                    <scopeRef>
                      <xsl:attribute name="idref">
                        <xsl:value-of select="$parentCategory/nav:refObject/gn4:category/gn4:scopeRef/@idref" />
                      </xsl:attribute>
                    </scopeRef>
                  </xsl:when>
                </xsl:choose>
              </xsl:if>
            </category>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of this category</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="configScope" gs:compute="true" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the category belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="Children" minOccurs="0" name="categories">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:category" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:categoryExtra" />
          </xs:sequence>
          <xs:attribute default="false" name="container" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if this category is just a container for sub-categories and cannot be used directly</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="categorySetName" type="gn4:tName">
            <xs:annotation>
              <xs:documentation>Name of the category set this category belongs to. Needed to create a unique key for the category. Ideally it should be automatically computed.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="code" type="gn4:tName" use="required">
            <xs:annotation>
              <xs:documentation>Unique code identifying the category</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="path" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically generated path</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:categoryExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="categorySet">
    <xs:complexType id="type12" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of this set of categories</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the category set belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="Children" name="categories">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:category" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:categorySetExtra" />
          </xs:sequence>
          <xs:attribute name="code" type="gn4:tName" use="optional">
            <xs:annotation>
              <xs:documentation>Optional unique code identifying the category set</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:categorySetExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="keywordSet">
    <xs:complexType id="type13" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of this set of keywords.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the keyword set belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:keywordSetExtra" />
          </xs:sequence>
          <xs:attribute default="false" name="autoVisible" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if new keywords should be visible by default.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="accentInsensitive" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if it should ignore the accents in keywords.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:keywordSetExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type56" gs:key="name" gs:descName="@name" name="publicationBase">
    <xs:annotation>
      <xs:documentation>Abstract base object type for publications and titles. It can be used to have publication reference attributes that do not affect access permissions.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:object">
        <xs:sequence>
          <xs:element gs:storage="XmlText" minOccurs="0" name="budgetDescName" type="gn4:tNameTemplate">
            <xs:annotation>
              <xs:documentation>Template used to compose the descriptive name of budgets belonging to this publication</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:storage="XmlText" minOccurs="0" name="budgetShortName" type="gn4:tNameTemplate">
            <xs:annotation>
              <xs:documentation>Template used to compose the short name of budgets belonging to this publication</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="pubMode">
    <xs:annotation>
      <xs:documentation>Publishing mode: optional qualifier that specifies how an object is published on a destination (e.g. if the publishing destination correspond to a Web page the publication mode can indicate a particular position on the page, or a particular display style to be applied)</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type14" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="pubDest" name="pubDestRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The destination the publishing mode is associated to.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>Multi-line description of the publishing mode</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:pubModeExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:pubModeExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="pubTemplate">
    <xs:annotation>
      <xs:documentation>Publishing destination template: specify rules for the publishing in all the associated destinations</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type15" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the publishing template belongs to - used to set access rights</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="description" nillable="true" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>Multi-line description of the publishing template</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="parsDef" type="gn4:tParamsDef">
              <xs:annotation>
                <xs:documentation>Provides a definition of the parameters the objects that refer this pubTemplate object can have</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="xtraParsDef" type="gn4:tParamsDef">
              <xs:annotation>
                <xs:documentation>Provides a definition of the extra parameters to be provided when publishing objects to a pubDest that references this pubTemplate</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="publishWF" nillable="true" type="gn4:tXml">
              <xs:annotation>
                <xs:documentation>Workflow called on objects being published on the associated destinations.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="unPublishWF" nillable="true" type="gn4:tXml">
              <xs:annotation>
                <xs:documentation>Workflow called on objects being un-published (removed) from the associated destinations.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="changedWF" nillable="true" type="gn4:tXml">
              <xs:annotation>
                <xs:documentation>Workflow called on objects being changed (published, un-published or position changed) in the associated destinations.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="autoFillXslt" nillable="true" type="gn4:tXml">
              <xs:annotation>
                <xs:documentation>Auto-fill rule. It is an XSL transformation applied to the parent publishing destination to automatically compute the content of publishing destinations using this template.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="validateObjXslt" nillable="true" type="gn4:tXml">
              <xs:annotation>
                <xs:documentation>validateObj rule. It is an XSL transformation applied to the object to be published to validate it.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="exportOptions" nillable="true">
              <xs:annotation>
                <xs:documentation>Export options used to render the default XML for publishing destinations using this template.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:any minOccurs="0" maxOccurs="1" namespace="http://www.teradp.com/schemas/GN4/1/XmlExportOptions.xsd" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:pubTemplateExtra" />
          </xs:sequence>
          <xs:attribute default="0" name="minObjs" type="xs:short" use="optional">
            <xs:annotation>
              <xs:documentation>Minimum number of objects in the publishing destination. Optional - ignored if 0 or negative</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="maxObjs" type="xs:short" use="optional">
            <xs:annotation>
              <xs:documentation>Maximum number of objects in the publishing destination. Optional - ignored if 0 or negative</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="allowedTypes" use="optional">
            <xs:annotation>
              <xs:documentation>Space-separated list of the object types allowed in the publishing destination. If empty or omitted objects of any type are allowed.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="200" />
                <xs:whiteSpace value="collapse" />
                <xs:pattern value="([a-zA-Z][a-zA-Z0-9]* ?)*" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="previewUrl" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>URL of the preview Web page for the publishing destinations using this template. It is a Web page that receives the POSTed XML of the publishing destination and returns the resulting complete HTML.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="restUrl" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>URL of the REST command interface, with ending slash. Examples: "http://vcdev.teradp.com/", "http://localhost/gnweb/"</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="CMSType" use="optional">
            <xs:annotation>
              <xs:documentation>CMS type identifier</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="VirtualCom" />
                <xs:enumeration value="Kentico" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:pubTemplateExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="tWebPreviewMode">
    <xs:annotation>
      <xs:documentation>How pubdest send data to preview page.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Default" />
      <xs:enumeration value="CMSDirect" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="pubDest">
    <xs:annotation>
      <xs:documentation>
        Publishing destination: general container of published objects. Often corresponds to an RSS feed, so most of the attributes correspond to RSS feed properties see:

        cyber.law.harvard.edu/rss/for RSS 2.0 specification,
        www.atomenabled.org for Atom 1.0 specifications
        www.intertwingly.net/wiki/pie/Rss20AndAtom10Compared for a comparison/discussion

        Publishing destinations are organized in a tree, so there are main destinations that can have sub-destinations and so on.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType id="type16" gs:key="path" gs:descName="@path" gs:shortName="@name">
      <xs:annotation>
        <xs:appinfo>
          <gs:index attrs="path" />
          <gs:compute inherit="true">
            <!--
              Semplified XSL transformation to compute the path from the
              parent's one, and to update the published objects last
              modification date/time
            -->
            <pubDest xmlns="">
              <xsl:attribute name="path">
                <xsl:value-of select="concat(gn4:pubDestParent/nav:refObject/gn4:pubDest/@path,'/',@name)" />
              </xsl:attribute>
              <xsl:choose>
                <xsl:when test="@needObjsModifiedDate='true' and gn4:objs/gn4:ref">
                  <xsl:attribute name="objsModifiedDate">
                    <xsl:value-of select="fn:maxDateTime(gn4:objs/gn4:ref/nav:refObject/*/@modifiedDate)" />
                  </xsl:attribute>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:attribute name="objsModifiedDate">
                    <xsl:value-of select="''" />
                  </xsl:attribute>
                </xsl:otherwise>
              </xsl:choose>
            </pubDest>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="pubTemplate" name="templateRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Publishing template associated with the destination. It is optional: there can be destinations without a template.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="title" type="gn4:tTitle">
              <xs:annotation>
                <xs:documentation>Single-line description of the destination. Usually mapped to the 'title' (RSS 2.0, Atom 1.0) RSS feed property.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>Multi-line description of the destination. Usually mapped to the 'description' (RSS 2.0) or 'subtitle' (Atom 1.0) RSS feed properties</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="link" type="gn4:tTitle">
              <xs:annotation>
                <xs:documentation>The URL to the HTML website corresponding to the channel. Usually mapped to the 'link' (RSS 2.0, Atom 1.0) RSS feed property.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="copyright" type="gn4:tTitle">
              <xs:annotation>
                <xs:documentation>Copyright notice for content in the channel. Usually mapped to the 'copyright' (RSS 2.0) or 'right' (Atom 1.0) RSS feed properties.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="user" minOccurs="0" name="author" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Author of the feed as a whole. Usually mapped to the 'managingEditor' (RSS 2.0) or 'author' (Atom 1.0) RSS feed properties.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="IptcSubjectCodes" minOccurs="0" name="categories" type="gn4:categoryRefs">
              <xs:annotation>
                <xs:documentation>Specify one or more categories that the channel belongs to. Usually mapped to a sequence of 'category' (RSS 2.0, Atom 1.0) RSS feed properties.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="image/gif image/jpeg image/png" gs:maxSize="64000" gs:access="Normal" minOccurs="0" name="image" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>Specifies a GIF, JPEG or PNG image that can be displayed with the channel. Usually mapped to the 'image' (RSS 2.0), 'logo' or 'icon' (Atom 1.0) RSS feed properties. It MUST have an access class different than 'Content'</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions to the publishing destination. Controls who can modify this destination and its children (if any), and also who can publish in this destination.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="pubDest" minOccurs="0" name="pubDestParent" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the parent publishing destination. Missing if this destination is a root one.</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" refAttributes="pubDestParent" />
                  </gs:ui>
                  <gs:searchUi>
                    <gs:template kind="Tree" refAttributes="pubDestParent" />
                  </gs:searchUi>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="pubDest" minOccurs="0" name="pubDestObjectPreview" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the single object preview publishing destination.</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" refAttributes="pubDestParent" />
                  </gs:ui>
                  <gs:searchUi>
                    <gs:template kind="Tree" refAttributes="pubDestParent" />
                  </gs:searchUi>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:access="Content" minOccurs="0" name="objs">
              <xs:annotation>
                <xs:documentation>List of objects published in this destination. Note that is the only object attribute with access class 'Content', so granting/denying access to 'Content' attributes it is possible to grant/deny publishing permission to a destination to groups or users. Note also that it is an ordered list: the position (can) matter in the publishing (e.g. at the top or bottom of a Web page).</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:refer="object" gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:annotation>
                      <xs:documentation>Reference to a published object.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence>
                            <xs:element gs:refer="pubMode" minOccurs="0" name="pubModeRef" type="gn4:reference">
                              <xs:annotation>
                                <xs:documentation>Optional reference to the publishing mode for the object referenced by this entry</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="pubData" nillable="true" type="gn4:tXml">
                              <xs:annotation>
                                <xs:documentation>Log information created by the execution of the publishWF workflow associated with the pubTemplate that has been used for publishing the object referenced by this entry. Typically a list of files created.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="extraParams" nillable="true" type="gn4:tXml">
                              <xs:annotation>
                                <xs:documentation>Extra parameters used during the publication of the object.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element gs:refer="user" minOccurs="0" name="userRef" nillable="true" type="gn4:reference">
                              <xs:annotation>
                                <xs:documentation>Published by this user.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="pubTime" nillable="true" type="xs:dateTime">
                              <xs:annotation>
                                <xs:documentation>Published by this user.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                          </xs:sequence>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:access="Special" minOccurs="0" name="preObjs">
              <xs:annotation>
                <xs:documentation>Objects in editing (staging mode).</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:refer="object" gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:annotation>
                      <xs:documentation>Reference to an object.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence>
                            <xs:element gs:refer="pubMode" minOccurs="0" name="pubModeRef" type="gn4:reference">
                              <xs:annotation>
                                <xs:documentation>Optional reference to the publishing mode for the object referenced by this entry</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="extraParams" nillable="true" type="gn4:tXml">
                              <xs:annotation>
                                <xs:documentation>Extra parameters used during the publication of the object.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                          </xs:sequence>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="params" type="gn4:tParams">
              <xs:annotation>
                <xs:documentation>Parameters that are passed to the publish/unpublish workflows and to the auto-fill XSL transformation (workflows and transformation are defined in the template associated with the publishing destination). Note that parameters (name and values) are passed on URLs, so it is better if they are as short and simple as possible, hence the short maximum length and restrictive rules for parameters name and value.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="variantTypes">
              <xs:annotation>
                <xs:documentation>List of binary tranformations (variant types) to generate.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:refer="variantType" gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:annotation>
                      <xs:documentation>Reference to a variant type with the transformation steps.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence />
                          <xs:attribute default="-1" name="min" type="xs:int" use="optional" />
                          <xs:attribute default="-1" name="max" type="xs:int" use="optional" />
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:pubDestExtra" />
          </xs:sequence>
          <xs:attribute gs:compute="true" name="path" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically generated path. It is the key uniquely identifying the publishing destination.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="container" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if this pubDest is just a container for sub-destinations and cannot be used directly</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="objsModifiedDate" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>Most recent modification date-time amongst all the objects published in the destination. It is automatically computed, and because it is touched every time any of the published object is modified it has the side-effect that the last modification date-time of the publishing destination object itself will reflect the changes in any of the published object.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="true" name="needObjsModifiedDate" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Determines whether or not the objsModifiedDate attribute is needed by the publishing destination object or not. It is checked in the compute stylesheet to avoid (when set to 'false') a potentially huge computation, since objsModifiedDate depends from the modification date of every published object.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="language" type="gn4:RSS20Languages" use="optional">
            <xs:annotation>
              <xs:documentation>The language the published data is (usually) written in. Mapped to the 'language' RSS 2.0 property, or xml:lang for Atom 1.0 and other XML formats</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:pubDestExtra" />
          <xs:attribute gs:access="Content" default="false" name="fromPreObjs" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>The publish object list is the preObjs one (publish from pub dest designer).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="previewUrl" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>URL of the preview Web page that overrides the template one.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="Default" name="previewMode" type="gn4:tWebPreviewMode" />
          <xs:attribute default="false" name="overrideTemplateObjsLimits" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Determines whether or not the pubdest minObjs and maxObjs overrides the template ones.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="minObjs" type="xs:short" use="optional">
            <xs:annotation>
              <xs:documentation>Override minimum number of objects in the publishing destination. Optional - ignored if 0 or negative</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="maxObjs" type="xs:short" use="optional">
            <xs:annotation>
              <xs:documentation>Override maximum number of objects in the publishing destination. Optional - ignored if 0 or negative</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="postCheckOut" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
                Determines whether or not checking out the publishing destination before executing the publishWF and unPublishWF workflows
                configured into the template. If this flag is true, the destination is not checked out before executing workfows.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="notifyDest">
    <xs:annotation>
      <xs:documentation>Notification destination to which users can subscribe</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type17" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the notification destination belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>Multi-line description of the notification destination</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:notifyDestExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:notifyDestExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="quota">
    <xs:annotation>
      <xs:documentation>Definition of the maximum number, maximum individual size and maximum total size of the objects belonging to a partition</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type18" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the quota belongs to - used to set access rights</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:quotaExtra" />
          </xs:sequence>
          <xs:attribute name="maxCount" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>Maximum number of objects that can be placed in a partition using this quota. 0 = no limit</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="datasize:byte" name="maxSize" type="gn4:tNonNegativeDouble" use="required">
            <xs:annotation>
              <xs:documentation>Maximum size of objects in a partition using this quota. 0.0 = no maximum.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="datasize:byte" name="maxTotalSize" type="gn4:tNonNegativeDouble" use="required">
            <xs:annotation>
              <xs:documentation>Maximum total size of all the objects in a partition using this quota. 0.0 = no maximum.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="datasize:byte" name="maxAuxSize" type="gn4:tNonNegativeDouble" use="required">
            <xs:annotation>
              <xs:documentation>Maximum auxiliary size of objects in a partition using this quota. 0.0 = no maximum.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="datasize:byte" name="maxTotalAuxSize" type="gn4:tNonNegativeDouble" use="required">
            <xs:annotation>
              <xs:documentation>Maximum total auxiliary size of all the objects in a partition using this quota. 0.0 = no maximum.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="datasize:byte" name="maxExtSize" type="gn4:tNonNegativeDouble" use="required">
            <xs:annotation>
              <xs:documentation>Maximum extended (or external) size of objects in a partition using this quota. 0.0 = no maximum.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="datasize:byte" name="maxTotalExtSize" type="gn4:tNonNegativeDouble" use="required">
            <xs:annotation>
              <xs:documentation>Maximum total extended (or external) size of all the objects in a partition using this quota. 0.0 = no maximum.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:quotaExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="partition">
    <xs:annotation>
      <xs:documentation>
        Database partition used to control maximum number / sizes of objects and other administrative parameters.

        An object can belong to a partition either diretly (via a reference attribute referencing partitions) or indirectly - via a reference attribute referencing another object type that references a partition.

        No more than two indirections are considered.

        An object can belong to only one partition at a time.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType id="type19" gs:key="name" gs:descName="@name">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <!--
              Semplified XSL transformation to copy values from the associated quota, expiration rule and versioning rule
            -->
            <partition xmlns="">
              <!--
                Copy the quota values
              -->
              <xsl:choose>
                <xsl:when test="gn4:quotaRef/nav:refObject/gn4:quota">
                  <!-- There is an associated quota - copy its values-->
                  <xsl:variable name="quota" select="gn4:quotaRef/nav:refObject/gn4:quota" />
                  <xsl:attribute name="maxCount">
                    <xsl:value-of select="$quota/@maxCount" />
                  </xsl:attribute>
                  <xsl:attribute name="maxSize">
                    <xsl:value-of select="$quota/@maxSize" />
                  </xsl:attribute>
                  <xsl:attribute name="maxTotalSize">
                    <xsl:value-of select="$quota/@maxTotalSize" />
                  </xsl:attribute>
                  <xsl:attribute name="maxAuxSize">
                    <xsl:value-of select="$quota/@maxAuxSize" />
                  </xsl:attribute>
                  <xsl:attribute name="maxTotalAuxSize">
                    <xsl:value-of select="$quota/@maxTotalAuxSize" />
                  </xsl:attribute>
                  <xsl:attribute name="maxExtSize">
                    <xsl:value-of select="$quota/@maxExtSize" />
                  </xsl:attribute>
                  <xsl:attribute name="maxTotalExtSize">
                    <xsl:value-of select="$quota/@maxTotalExtSize" />
                  </xsl:attribute>
                </xsl:when>
                <xsl:otherwise>
                  <!-- There is no associated quota - set all values to 0 = no maximum sizes nor number limits-->
                  <xsl:attribute name="maxCount">
                    <xsl:value-of select="'0'" />
                  </xsl:attribute>
                  <xsl:attribute name="maxSize">
                    <xsl:value-of select="'0.0'" />
                  </xsl:attribute>
                  <xsl:attribute name="maxTotalSize">
                    <xsl:value-of select="'0.0'" />
                  </xsl:attribute>
                  <xsl:attribute name="maxAuxSize">
                    <xsl:value-of select="'0.0'" />
                  </xsl:attribute>
                  <xsl:attribute name="maxTotalAuxSize">
                    <xsl:value-of select="'0.0'" />
                  </xsl:attribute>
                  <xsl:attribute name="maxExtSize">
                    <xsl:value-of select="'0.0'" />
                  </xsl:attribute>
                  <xsl:attribute name="maxTotalExtSize">
                    <xsl:value-of select="'0.0'" />
                  </xsl:attribute>
                </xsl:otherwise>
              </xsl:choose>
              <!--
                'Auto-copy' for the totals - they are automatically computed
                only to prevent the normal object modifications to touch them
              -->
              <xsl:attribute name="count">
                <xsl:value-of select="@count" />
              </xsl:attribute>
              <xsl:attribute name="totalSize">
                <xsl:value-of select="@totalSize" />
              </xsl:attribute>
              <xsl:attribute name="totalAuxSize">
                <xsl:value-of select="@totalAuxSize" />
              </xsl:attribute>
              <xsl:attribute name="totalExtSize">
                <xsl:value-of select="@totalExtSize" />
              </xsl:attribute>
              <xsl:choose>
                <!--
                'Auto-copy' for the expiration rule "when"
                -->
                <xsl:when test="gn4:expirationRuleRef/nav:refObject/gn4:expirationRule">
                  <!-- There is an associated rule - copy its values-->
                  <xsl:variable name="expRule" select="gn4:expirationRuleRef/nav:refObject/gn4:expirationRule" />
                  <xsl:attribute name="expirationRuleName">
                    <xsl:value-of select="$expRule/@name" />
                  </xsl:attribute>
                  <xsl:attribute name="expirationComputedTrigger">
                    <xsl:value-of select="$expRule/@expirationComputedTrigger" />
                  </xsl:attribute>
                  <xsl:attribute name="expirationAttributeName">
                    <xsl:value-of select="$expRule/@attributeName" />
                  </xsl:attribute>
                  <xsl:attribute name="expirationTimeSpan">
                    <xsl:value-of select="$expRule/@expirationTimeSpan" />
                  </xsl:attribute>
                  <xsl:attribute name="expirationObjectType">
                    <xsl:value-of select="$expRule/@objectTypes" />
                  </xsl:attribute>
                </xsl:when>
                <xsl:otherwise>
                  <!-- There is no associated rule-->
                  <xsl:attribute name="expirationRuleName" />
                  <xsl:attribute name="expirationComputedTrigger" />
                  <xsl:attribute name="expirationTimeSpan">
                    <xsl:value-of select="'0.0'" />
                  </xsl:attribute>
                  <xsl:attribute name="expirationObjectType" />
                  <xsl:attribute name="expirationAttributeName" />
                </xsl:otherwise>
              </xsl:choose>
              <xsl:choose>
                <!--
                'Auto-copy' for the versioning rule
                -->
                <xsl:when test="gn4:versioningRuleRef/nav:refObject/gn4:versioningRule">
                  <!-- There is an associated rule - copy its values-->
                  <xsl:variable name="versRule" select="gn4:versioningRuleRef/nav:refObject/gn4:versioningRule" />
                  <xsl:attribute name="initialVersion">
                    <xsl:value-of select="$versRule/@initialVersion" />
                  </xsl:attribute>
                  <xsl:attribute name="lastVersion">
                    <xsl:value-of select="$versRule/@lastVersion" />
                  </xsl:attribute>
                  <xsl:attribute name="versionMode">
                    <xsl:value-of select="$versRule/@versionMode" />
                  </xsl:attribute>
                </xsl:when>
                <xsl:otherwise>
                  <!-- There is no associated rule-->
                  <xsl:attribute name="initialVersion">
                    <xsl:value-of select="0" />
                  </xsl:attribute>
                  <xsl:attribute name="lastVersion">
                    <xsl:value-of select="0" />
                  </xsl:attribute>
                </xsl:otherwise>
              </xsl:choose>
            </partition>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the partition belongs to - used to set access rights</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="quota" gs:access="Protected" name="quotaRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the associated quota. The access class is 'Protected' because the quota is a potentially sensitive setting (we would not want unprivileged users to be able to modify their quota)</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="expirationRule" gs:access="Protected" name="expirationRuleRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The expiration rule applied to objects</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="versioningRule" gs:access="Protected" name="versioningRuleRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The versioning rule applied to objects</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="volumesMap">
              <xs:annotation>
                <xs:documentation>Map from default volume names to the volume names to be used for objects in this partition</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:attribute name="from" type="gn4:tName" use="required" />
                      <xs:attribute name="to" type="gn4:tName" use="required" />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:partitionExtra" />
          </xs:sequence>
          <xs:attribute gs:compute="true" name="maxCount" type="gn4:tNonNegativeInt" />
          <xs:attribute gs:compute="true" gs:dimension="datasize:byte" name="maxSize" type="gn4:tNonNegativeDouble" />
          <xs:attribute gs:compute="true" gs:dimension="datasize:byte" name="maxTotalSize" type="gn4:tNonNegativeDouble" />
          <xs:attribute gs:compute="true" gs:dimension="datasize:byte" name="maxAuxSize" type="gn4:tNonNegativeDouble" />
          <xs:attribute gs:compute="true" gs:dimension="datasize:byte" name="maxTotalAuxSize" type="gn4:tNonNegativeDouble" />
          <xs:attribute gs:compute="true" gs:dimension="datasize:byte" name="maxExtSize" type="gn4:tNonNegativeDouble" />
          <xs:attribute gs:compute="true" gs:dimension="datasize:byte" name="maxTotalExtSize" type="gn4:tNonNegativeDouble" />
          <xs:attribute gs:compute="true" name="count" type="gn4:tNonNegativeInt">
            <xs:annotation>
              <xs:documentation>Total number of objects in this partition. It is set to automatically computed so that the normal object editing functions cannot modify it - it is modified internally by the code that mainains the totals.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" gs:dimension="datasize:byte" name="totalSize" type="gn4:tNonNegativeDouble">
            <xs:annotation>
              <xs:documentation>Total size of the objects in this partition. It is set to automatically computed so that the normal object editing functions cannot modify it - it is modified internally by the code that mainains the totals.</xs:documentation>
              <xs:appinfo>
                <gs:ui measurementUnit="megabyte" decimalDigits="2" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" gs:dimension="datasize:byte" name="totalAuxSize" type="gn4:tNonNegativeDouble">
            <xs:annotation>
              <xs:documentation>Total auxiliary size of the objects in this partition. It is set to automatically computed so that the normal object editing functions cannot modify it - it is modified internally by the code that mainains the totals.</xs:documentation>
              <xs:appinfo>
                <gs:ui measurementUnit="megabyte" decimalDigits="2" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" gs:dimension="datasize:byte" name="totalExtSize" type="gn4:tNonNegativeDouble">
            <xs:annotation>
              <xs:documentation>Total extra (or external) size of the objects in this partition.  It is set to automatically computed so that the normal object editing functions cannot modify it - it is modified internally by the code that mainains the totals.</xs:documentation>
              <xs:appinfo>
                <gs:ui measurementUnit="megabyte" decimalDigits="2" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="expirationRuleName" type="xs:string" />
          <xs:attribute gs:compute="true" name="expirationComputedTrigger" type="gn4:tExpirationRuleComputedTrigger">
            <xs:annotation>
              <xs:documentation>Specify how to calculated the expiration date</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" default="0" name="expirationTimeSpan" type="xs:float" />
          <xs:attribute gs:compute="true" name="expirationObjectType" type="gn4:tObjectTypes" />
          <xs:attribute gs:compute="true" name="expirationAttributeName" type="xs:string" />
          <xs:attribute gs:compute="true" name="initialVersion" type="xs:int" />
          <xs:attribute gs:compute="true" name="lastVersion" type="xs:int" />
          <xs:attribute gs:compute="true" name="versionMode" type="gn4:tVersionMode" />
          <xs:attribute default="true" name="extendSpike" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>If true objects in this partition are spiked when they reference objects being spiked via attributes specified in the 'extendOrUnref' list of the spike command - i.e. they wont' be spiked as a side-effect of the spiking of edition, pages or other complex objects they are 'part of' via referencing.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:partitionExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="counter">
    <xs:annotation>
      <xs:documentation>Counters, used to keep statistics about database objects (e.g. number of impressions)</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type20" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the counter belongs to - used to set access rights</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of the counter</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="intervals">
              <xs:annotation>
                <xs:documentation>Set of time intervals the counter should be split into</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="in">
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:enumeration value="Total" />
                        <xs:enumeration value="Hour" />
                        <xs:enumeration value="Day" />
                        <xs:enumeration value="Week" />
                        <xs:enumeration value="Month" />
                        <xs:enumeration value="Year" />
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:counterExtra" />
          </xs:sequence>
          <xs:attribute name="category" use="required">
            <xs:annotation>
              <xs:documentation>The overall category of the counter</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="General">
                  <xs:annotation>
                    <xs:documentation>General or unspecified</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="Impression">
                  <xs:annotation>
                    <xs:documentation>An impression - i.e. 'view' of some kind by a user</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="Click">
                  <xs:annotation>
                    <xs:documentation>A click-through - i.e. click or selection by a user</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="Conversion">
                  <xs:annotation>
                    <xs:documentation>A conversion - i.e. an action like buying something or registering by a user</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="hasObject" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies if the counter is associated with database objects or it is a global one</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="audit" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies if every time the counter is incremented the event should be also recorded in the audit trail</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:counterExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="workstate">
    <xs:annotation>
      <xs:documentation>Workstates</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type21" gs:key="name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the workstate belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="access" type="gn4:accessIndirect">
              <xs:annotation>
                <xs:documentation>Referencing access permissions, typically used to grant/deny editing permissions on objects referencing workstate, such as page objs</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Access" permissionsSet="PageWorkstates" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General workstate description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="levels">
              <xs:annotation>
                <xs:documentation>Object levels this workstate applies to.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="in">
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:enumeration value="Element">
                          <xs:annotation>
                            <xs:documentation>Basic content elements (folderObject). The workstate is assigned indirectly via the folder.</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="Page">
                          <xs:annotation>
                            <xs:documentation>Pages (printed or Web) - containing basic elements. The workstate is usually assigned directly.</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="Edition">
                          <xs:annotation>
                            <xs:documentation>Editions - collections of pages. The workstate is usually assigned directly.</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="calendarObject">
                          <xs:annotation>
                            <xs:documentation>Calendar elements (calendarObject). The workstate is assigned indirectly via the calendar.</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:workstateExtra" />
          </xs:sequence>
          <xs:attribute default="white" name="color" type="gn4:rgbColor">
            <xs:annotation>
              <xs:documentation>Color associated with the workstate - to be used in production tracking displays</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="needsAction" name="status" type="gn4:tTaskStatus" use="optional">
            <xs:annotation>
              <xs:documentation>Standard task (iCalendar) status corresponding to this workstate</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:workstateExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type22" name="folderBase">
    <xs:annotation>
      <xs:documentation>Abstract base object type for folders - used to folder reference attributes that do not affect access permissions.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:object" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="folder">
    <xs:annotation>
      <xs:documentation>Generic folder</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type23" gs:key="path" gs:descName="@path" gs:shortName="@name" gs:access="Protected">
      <xs:annotation>
        <xs:appinfo>
          <gs:index attrs="path" />
          <gs:index attrs="folderParent" />
          <gs:compute inherit="true">
            <!-- Semplified XSL transformation to compute the path from the parent's one -->
            <folder xmlns="">
              <xsl:attribute name="path">
                <xsl:value-of select="concat(gn4:folderParent/nav:refObject/gn4:folder/@path,'/',@name)" />
              </xsl:attribute>
            </folder>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:folderBase">
          <xs:sequence>
            <xs:element minOccurs="0" name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions on the folder and on the object contained in the folder</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="folder" minOccurs="0" name="folderParent" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the parent in the folder hierarchy</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" refAttributes="folderParent" />
                  </gs:ui>
                  <gs:searchUi>
                    <gs:template kind="Tree" refAttributes="folderParent" />
                  </gs:searchUi>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="partition" gs:access="Protected" minOccurs="0" name="partitionRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the partition this folder (and all the folder objects it contains) belongs to. It is optional - a folder can belong to no partition. The access class is 'Protected' because the partition controls the quota, that is a potentially sensitive setting (we would not want unprivileged users to be able to modify their quota).</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="workstate" minOccurs="0" name="workstateRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the workstate associated with this folder - that is the workstate of all the objects contained in the folder.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:folderExtra" />
          </xs:sequence>
          <xs:attribute gs:compute="true" name="path" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically generated path</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="createCarbon" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>If set to true the system creates carbon-copies of objects moved to a different folder.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="folderKind" type="gn4:tFolderKind">
            <xs:annotation>
              <xs:appinfo>
                <gs:ui instruction="instructionSearchKindFolder" />
              </xs:appinfo>
              <xs:documentation>Search kind. Used to associate content of this folder to a specific full text kind in addition to its object type.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:folderExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type28" gs:stateAttr="folderRef:createCarbon" name="folderObject" abstract="true">
    <xs:annotation>
      <xs:documentation>Common ancestor for all objects contained in folders</xs:documentation>
      <xs:appinfo>
        <gs:index attrs="folderRef" />
        <gs:index attrs="folderKind creationDate" />
        <gs:index attrs="creationDate" />
        <gs:compute inherit="true">
          <!--
            Semplified XSL transformation to compute creation date/time, creator and last modifier
          -->
          <folderObject xmlns="">
            <xsl:if test="not(@id)">
              <xsl:attribute name="creationDate">
                <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
              </xsl:attribute>
            </xsl:if>
            <xsl:attribute name="folderKind">
              <xsl:value-of select="gn4:folderRef/nav:refObject/gn4:folder/@folderKind" />
            </xsl:attribute>
            <xsl:if test="@nav:originalStateId">
              <xsl:attribute name="sentDate">
                <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
              </xsl:attribute>
              <xsl:element name="senderRef">
                <xsl:attribute name="idref">
                  <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                </xsl:attribute>
              </xsl:element>
            </xsl:if>
            <xsl:if test="not(@id)">
              <creatorRef>
                <xsl:attribute name="idref">
                  <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                </xsl:attribute>
              </creatorRef>
            </xsl:if>
            <xsl:if test="$context/oc:OperationContext/@Kind!='Upgrade'">
              <modifierRef>
                <xsl:attribute name="idref">
                  <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                </xsl:attribute>
              </modifierRef>
            </xsl:if>
          </folderObject>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:object">
        <xs:sequence>
          <xs:element gs:refer="folder" name="folderRef" type="gn4:reference">
            <xs:annotation>
              <xs:documentation>The folder this object is in</xs:documentation>
              <xs:appinfo>
                <gs:fullTextAttr exaMetaName="folderRef" />
                <gs:ui>
                  <gs:template kind="Tree" refAttributes="folderParent" />
                </gs:ui>
                <gs:searchUi>
                  <gs:template kind="Tree" refAttributes="folderParent" />
                </gs:searchUi>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="creatorRef" type="gn4:reference" />
          <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="modifierRef" type="gn4:reference" />
          <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="senderRef" type="gn4:reference">
            <xs:annotation>
              <xs:documentation>User that sent this object as part of the workflow. Automatically computed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:access="Special" minOccurs="0" name="variants">
            <xs:annotation>
              <xs:documentation>List of binary variants - as multi-reference</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="false" gs:refer="variantType" minOccurs="0" maxOccurs="unbounded" name="ref">
                  <xs:complexType>
                    <xs:complexContent mixed="false">
                      <xs:extension base="gn4:reference">
                        <xs:sequence>
                          <xs:element gs:volume="variants" name="data" type="gn4:dataContent" />
                        </xs:sequence>
                        <xs:attribute name="modifiedDate" type="xs:dateTime" use="optional" />
                      </xs:extension>
                    </xs:complexContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element gs:storage="Children" minOccurs="0" name="externals">
            <xs:annotation>
              <xs:documentation>List of external details</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:externalObject" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:group ref="gn4:folderObjectExtra" />
        </xs:sequence>
        <xs:attribute gs:compute="true" name="sentDate" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:appinfo>
              <xs:documentation xmlns:xs="http://www.w3.org/2001/XMLSchema">The date and time the object was sent. Automatically computed.</xs:documentation>
            </xs:appinfo>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:compute="true" name="creationDate" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:appinfo>
              <gs:fullTextAttr exaMetaName="creationDate" />
            </xs:appinfo>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:compute="true" name="folderKind" type="gn4:tFolderKind" use="optional">
          <xs:annotation>
            <xs:appinfo>
              <gs:ui mode="Hidden" />
              <gs:fullTextAttr exaMetaName="folderKind" />
            </xs:appinfo>
            <xs:documentation>Automatically computed folder kind. It is calculated based on the folder's corresponding attribute</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="gn4:folderObjectExtra" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="tServiceHost">
    <xs:annotation>
      <xs:documentation>Service host name or address</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="80" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tServicePort">
    <xs:annotation>
      <xs:documentation>Service port</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
      <xs:maxInclusive value="65535" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="clientTemplate">
    <xs:annotation>
      <xs:documentation>Template for a client specification. Specify how local file names are computed starting from an object and other client-specific options and parameters.</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type24" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the client template belongs to - used to set access rights (hence the 'Protected' access class).</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of the template</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="rules">
              <xs:annotation>
                <xs:documentation>Rules specifying how to generate file names and which data to use for the various object types</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:attribute name="objectType" use="optional">
                        <xs:annotation>
                          <xs:documentation>Name of the object type this rule refers to. If empty or not specified the rule applies to all the types not named explicitely in other rules - i.e. it is the default rule</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:maxLength value="30" />
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                      <xs:attribute name="attribute" use="optional">
                        <xs:annotation>
                          <xs:documentation>Name of the attribute containing the data to get and update for this object type. If empty or not specified the entire XML of the object is used.</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:maxLength value="30" />
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                      <xs:attribute name="feed" use="optional">
                        <xs:annotation>
                          <xs:documentation>Name of the feed definition (stored as a configuration object) used when getting the XML data of the object. Optional, and used only if no attribute name has been specified.</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:maxLength value="80" />
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                      <xs:attribute name="nameExpr" type="gn4:tPath" use="required">
                        <xs:annotation>
                          <xs:documentation>XPath expression used to compute the name of the local file from the object XML</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="updateWF" type="gn4:tName" use="required">
                        <xs:annotation>
                          <xs:documentation>Name of the workflow to use to update objects of this type</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="servicePlugIn" use="optional">
                        <xs:annotation>
                          <xs:documentation>Name of the plug-in the File4 local file service uses for objects of this type</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:maxLength value="80" />
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:clientTemplateExtra" />
          </xs:sequence>
          <xs:attribute name="pathSeparator" use="required">
            <xs:annotation>
              <xs:documentation>Character separating directory and file names in local paths</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1" />
                <xs:maxLength value="1" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="useFileNameExt" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If set the generated file names have an extensions based on the type of the data they contain</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="serviceHost" type="gn4:tServiceHost" use="optional">
            <xs:annotation>
              <xs:documentation>File4 local file service host name or address. If not specified or empty the system uses the client specification host address or name.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="servicePort" type="gn4:tServicePort" use="optional">
            <xs:annotation>
              <xs:documentation>File4 local file service port number. If not specified or 0 the system uses the internal default.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:clientTemplateExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="clientSpec">
    <xs:annotation>
      <xs:documentation>Client specification: describe a client machine that is used to edit objects.</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type25" gs:key="name" gs:descName="@name">
      <xs:annotation>
        <xs:appinfo>
          <gs:index attrs="host" />
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the client template belongs to - used to set access rights (hence the 'Protected' access class).</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of the client specification</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="clientTemplate" name="templateRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The associated template specifying how to compose local file names and which data to get.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="folderRefs">
              <xs:annotation>
                <xs:documentation>Folder(s) used by this client with their corresponding local path</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="false" gs:refer="folder" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence>
                            <xs:element name="localPath" type="gn4:tPath">
                              <xs:annotation>
                                <xs:documentation>Local path corresponding to the folder - i.e. where the folder content is stored locally.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                          </xs:sequence>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:refer="user" gs:access="Special" minOccurs="0" name="inUseUserRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the user that is using this client specification. Missing or nil if the client specification is not in use. It has 'Special' access class because it is possible that only some users can create/modify client specifications but a larger group can actually use them.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:access="Special" minOccurs="0" name="inUseIP" nillable="true">
              <xs:annotation>
                <xs:documentation>IP address of the client machine that is using this client specification. Missing or empty if the client specification is not in use. It has 'Special' access class because it is possible that only some users can create/modify client specifications but a larger group can actually use them.</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="40" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element gs:access="Special" name="inUseLogins">
              <xs:annotation>
                <xs:documentation>List of the GUIDs of the logins that are using this client specification. Missing or empty if the client specification is not in use. It has 'Special' access class because it is possible that only some users can create/modify client specifications but a larger group can actually use them.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:maxLength value="40" />
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:clientSpecExtra" />
          </xs:sequence>
          <xs:attribute name="host" type="gn4:tName">
            <xs:annotation>
              <xs:documentation>Client host name or IP address.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="serviceHost" type="gn4:tServiceHost" use="optional">
            <xs:annotation>
              <xs:documentation>File4 local file service host name or address. If not specified or empty the system uses the template one.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="servicePort" type="gn4:tServicePort" use="optional">
            <xs:annotation>
              <xs:documentation>File4 local file service port number. If not specified or 0 the system uses the template one.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="servicePlugInParam" use="optional">
            <xs:annotation>
              <xs:documentation>Optional parameter to pass to the plug-in the File4 local file service</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="80" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:clientSpecExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="externalSystem">
    <xs:complexType id="type26" gs:key="name">
      <xs:annotation>
        <xs:documentation>External System that is synced with this GN4 system</xs:documentation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <!--
            Semplified XSL transformation to compute creation date/time, creator and last modifier
          -->
            <externalSystem xmlns="">
              <xsl:if test="not(@id)">
                <xsl:attribute name="creationDate">
                  <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
                </xsl:attribute>
              </xsl:if>
              <xsl:if test="not(@id)">
                <creatorRef>
                  <xsl:attribute name="idref">
                    <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                  </xsl:attribute>
                </creatorRef>
              </xsl:if>
              <xsl:if test="$context/oc:OperationContext/@Kind!='Upgrade'">
                <modifierRef>
                  <xsl:attribute name="idref">
                    <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                  </xsl:attribute>
                </modifierRef>
              </xsl:if>
            </externalSystem>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="folder" name="folderRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Folder the imported data will be placed when creating the object</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" refAttributes="folderParent" />
                  </gs:ui>
                  <gs:searchUi>
                    <gs:template kind="Tree" refAttributes="folderParent" />
                  </gs:searchUi>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="creatorRef" type="gn4:reference" />
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="modifierRef" type="gn4:reference" />
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>Description of the external system</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:externalSystemExtra" />
          </xs:sequence>
          <xs:attribute gs:compute="true" name="creationDate" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:appinfo>
                <gs:fullTextAttr exaMetaName="creationDate" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="url" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>URL of the external system</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="type" use="required">
            <xs:annotation>
              <xs:documentation>Type of sync (Import, Export, Sync)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Import">
                  <xs:annotation>
                    <xs:documentation>Specifies system is used to import data only.</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="Export">
                  <xs:annotation>
                    <xs:documentation>Specifies system has data exported to only.</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="Sync">
                  <xs:annotation>
                    <xs:documentation>Specifies system is synced.</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="exportUrl" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Url to post the export (only need if type is sync or Export)</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="exportWorkflow" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Optional workflow to export the data.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="SyncExport" name="exportXslt" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Optional xslt config used to export the data.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="preImportXsltWorkflow" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Optional workflow to run on the imported xml. Ran before the xml is transformed by the ImportXslt is ran.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="postImportXsltWorkflow" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Optional workflow to run on the xml just before its imported. Ran after the xml has been transformed by the ImportXslt.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="SyncImport" name="importXslt" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Optional xslt config used to import the data.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="overwrite" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>When importing, will the data get overwritten if it has been changed since the last import.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:externalSystemExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="externalObject" type="gn4:externalObject">
    <xs:annotation>
      <xs:documentation>external Object.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType id="type27" gs:key="externalSystemRef externalId" name="externalObject">
    <xs:annotation>
      <xs:documentation>External details of this object</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:object">
        <xs:sequence>
          <xs:element gs:refer="externalSystem" name="externalSystemRef" type="gn4:reference">
            <xs:annotation>
              <xs:documentation>Reference to the external system</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="externalId" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>External id</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="externalCreationDate" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:documentation>External creation date</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="externalModifiedDate" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:documentation>External creation date</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="externalModifierId" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>External modifier id</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="externalModifierName" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>External modifier name</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="externalCreatorId" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>External creator id</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="externalCreatorName" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>External creator name</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="importedDate" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:documentation>Date last imported</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="exportedDate" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:documentation>Date last exported</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="addInSolution">
    <xs:complexType id="type29" gs:key="name folderRef">
      <xs:annotation>
        <xs:documentation>Solution for a number of add-ins</xs:documentation>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:folderObject">
          <xs:attribute name="solution" type="gn4:tText" use="required" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="addInProject">
    <xs:complexType id="type30" gs:key="name folderRef">
      <xs:annotation>
        <xs:documentation>Complete project for an add-in</xs:documentation>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:folderObject">
          <xs:sequence>
            <xs:element gs:volume="addIns" gs:mimeTypes="application/zip" name="project" type="gn4:dataContent" />
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="addIn">
    <xs:complexType id="type31" gs:key="name platform">
      <xs:annotation>
        <xs:documentation>Individual add-in assembly</xs:documentation>
        <xs:appinfo>
          <gs:init attrs="platform">
            <addIn id="{@id}" platform="x86" xmlns="" />
          </gs:init>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:volume="addIns" gs:mimeTypes="application/zip" name="assembly" type="gn4:dataContent" />
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the addIn belongs to - used to set access rights</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute default="" name="version" type="xs:string" use="optional" />
          <xs:attribute default="x86" name="platform" type="gn4:tPlatform" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type32" gs:key="name" gs:descName="@name" name="variantType">
    <xs:annotation>
      <xs:documentation>Type of binary variation</xs:documentation>
      <xs:appinfo>
        <gs:compute inherit="true">
          <variantType xmlns="">
            <!--
              Note: We set typeRef to the generic "folderObject" value.
              It must be overriden in the compute section of the object types that derives from variantType.
            -->
            <typeRef>folderObject</typeRef>
          </variantType>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:object">
        <xs:sequence>
          <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
            <xs:annotation>
              <xs:documentation>The scope the variation belongs to - used to set access rights</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="steps">
            <xs:annotation>
              <xs:documentation>List of binary variants - as references</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="item">
                  <xs:complexType>
                    <xs:sequence />
                    <xs:attribute name="conversion" use="required">
                      <xs:simpleType>
                        <xs:annotation>
                          <xs:documentation>video conversion types</xs:documentation>
                        </xs:annotation>
                        <xs:restriction base="xs:string">
                          <xs:enumeration value="ChangeFormat" />
                          <xs:enumeration value="Scale" />
                          <xs:enumeration value="SetResolution" />
                          <xs:enumeration value="ChangeColorSpace" />
                          <xs:enumeration value="Rotate" />
                          <xs:enumeration value="FlipHorizontal" />
                          <xs:enumeration value="FlipVertical" />
                          <xs:enumeration value="ChangeFrameRate" />
                          <xs:enumeration value="ChangeVideoBitRate" />
                          <xs:enumeration value="ChangeAudioFrequency" />
                          <xs:enumeration value="ChangeAudioBitRate" />
                          <xs:enumeration value="Crop" />
                          <xs:enumeration value="ChangeChannels" />
                          <xs:enumeration value="SetSaveOpt" />
                          <xs:enumeration value="Clip" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="format" type="gn4:tName" use="optional">
                      <xs:annotation>
                        <xs:documentation>mime type</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="quality" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>the picture quality (in percentage)</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="width" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>positive = pixel, negative = percentage. If the height is missing, then it is the max frame size.</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="height" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>positive = pixel, negative = percentage. If the height is missing, then it is the max frame size.</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="SaCubicBSpline" name="scalingMode">
                      <xs:annotation>
                        <xs:documentation>the scaling algorithm</xs:documentation>
                      </xs:annotation>
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:enumeration value="SaCubicBSpline" />
                          <xs:enumeration value="Bicubic" />
                          <xs:enumeration value="SaLinear" />
                          <xs:enumeration value="SaNearest" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute default="Default" name="colorSpace">
                      <xs:annotation>
                        <xs:documentation>the color space</xs:documentation>
                      </xs:annotation>
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:enumeration value="Default" />
                          <xs:enumeration value="Mono" />
                          <xs:enumeration value="Grayscale" />
                          <xs:enumeration value="RGB" />
                          <xs:enumeration value="CMYK" />
                          <xs:enumeration value="Indexed" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="colorProfile" type="gn4:tName" use="optional">
                      <xs:annotation>
                        <xs:documentation>the color profile name</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="horizontalRes" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>horizontal resolution (dpi)</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="verticalRes" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>vertical resolution (dpi)</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="Default" name="resolutionMode">
                      <xs:annotation>
                        <xs:documentation>when apply the resolution's change</xs:documentation>
                      </xs:annotation>
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:enumeration value="Default" />
                          <xs:enumeration value="Always" />
                          <xs:enumeration value="IfSmaller" />
                          <xs:enumeration value="IfBigger" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="rotationAngle" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>angle of rotation</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="frameRate" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>video frame rate (in fps)</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="videoBitRate" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>video bit rate (in Kbit/s)</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute gs:dimension="time:s" default="0" name="startPosition" type="gn4:tNonNegativeInt" use="optional">
                      <xs:annotation>
                        <xs:documentation>video start position</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute gs:dimension="time:s" default="0" name="duration" type="gn4:tNonNegativeInt" use="optional">
                      <xs:annotation>
                        <xs:documentation>video duration</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="sampleRate" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>audio frequency (in Hz)</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="audioBitRate" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>audio bit rate (in Kbit/s)</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="Stereo" name="channelsMode">
                      <xs:annotation>
                        <xs:documentation>audio channels mode</xs:documentation>
                      </xs:annotation>
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:enumeration value="Stereo" />
                          <xs:enumeration value="Mono" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="saveImgOptions" type="gn4:tName" use="optional">
                      <xs:annotation>
                        <xs:documentation>Options for save images (namevalue list: "nameOpt1:value1;nameOpt2:value2;nameOpt3:value3")</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="pdfResolution" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>resolution of transformed pdf (influence the final size)</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element gs:compute="true" name="typeRef" type="gn4:objectType">
            <xs:annotation>
              <xs:documentation>Type of the objects this variantType is for. It must be either folderObject or one of its descendants.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute default="-1" name="min" type="xs:int" use="optional" />
        <xs:attribute default="-1" name="max" type="xs:int" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="variantType" type="gn4:variantType">
    <xs:annotation>
      <xs:documentation>Type of binary variation</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="expirationRule">
    <xs:complexType id="type33" gs:key="name" gs:descName="@name">
      <xs:annotation>
        <xs:documentation>Expiration rule</xs:documentation>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of the expiration rule</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the expiration rule belongs to - used to set access rights</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:expirationRuleExtra" />
          </xs:sequence>
          <xs:attribute name="expirationComputedTrigger" type="gn4:tExpirationRuleComputedTrigger" use="required">
            <xs:annotation>
              <xs:documentation>Specify how to calculated the expiration date</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="" name="attributeName" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>The name of the attribute containing the data to use to compute the expiration date.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:d" default="0.0" name="expirationTimeSpan" type="xs:float">
            <xs:annotation>
              <xs:documentation>The number of days after which the object expires</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="objectTypes" type="gn4:tObjectTypes" use="required">
            <xs:annotation>
              <xs:documentation>List of object types affected by this rule.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="spikeCode" type="gn4:tSpikeCode" use="optional">
            <xs:annotation>
              <xs:documentation>Spike code to use to spike expired objects.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="" name="spikeUnref" type="gn4:tAttributes" use="optional">
            <xs:annotation>
              <xs:documentation>Unref parameter for spiking</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="" name="spikeExtend" type="gn4:tAttributes" use="optional">
            <xs:annotation>
              <xs:documentation>Extend parameter for spiking</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="" name="spikeExtendUnref" type="gn4:tAttributes" use="optional">
            <xs:annotation>
              <xs:documentation>Extend or unref parameter for spiking</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:d" default="0.0" name="purgeTimeSpan" type="xs:float" use="optional">
            <xs:annotation>
              <xs:documentation>Purge time-span to use to spike expired objects</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="" name="workflowName" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>The name of the workflow to apply to the expired objects.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="" name="workflowPars" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Extra parameters (name-value) to pass to the workflow.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:expirationRuleExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="versioningRule">
    <xs:complexType id="type34" gs:key="name" gs:descName="@name">
      <xs:annotation>
        <xs:documentation>Versioning rule</xs:documentation>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of the versioning rule</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the expiration rule belongs to - used to set access rights</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="initialVersion" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Number of initial versions to keep (use a negative number to keep all versions).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lastVersion" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Number of last versions to keep (use a negative number to keep all versions).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="oncePerSession" name="versionMode" type="gn4:tVersionMode" use="optional">
            <xs:annotation>
              <xs:documentation>Version creation mode: which actions trigger the creation of a version</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="tSchedulingRuleType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="One Time">
        <xs:annotation>
          <xs:documentation>One time schedule at specific date and time</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Daily">
        <xs:annotation>
          <xs:documentation>Daily schedule at a specific time.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Weekly">
        <xs:annotation>
          <xs:documentation>Weekly schedule at specific days of the week and time</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="schedulingRule">
    <xs:complexType id="type35" gs:key="name" gs:descName="@name">
      <xs:annotation>
        <xs:documentation>Task scheduling rule</xs:documentation>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of the scheduling rule</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="daysOfTheWeek">
              <xs:annotation>
                <xs:documentation>Days of the week</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="in">
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:enumeration value="Sunday">
                          <xs:annotation>
                            <xs:documentation>Sunday</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="Monday">
                          <xs:annotation>
                            <xs:documentation>Monday</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="Tuesday">
                          <xs:annotation>
                            <xs:documentation>Tuesday</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="Wednesday">
                          <xs:annotation>
                            <xs:documentation>Wednesday</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="Thursday">
                          <xs:annotation>
                            <xs:documentation>Thursday</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="Friday">
                          <xs:annotation>
                            <xs:documentation>Friday</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="Saturday">
                          <xs:annotation>
                            <xs:documentation>Saturday</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the scheduling rule belongs to - used to set access rights</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="schedulingType" type="gn4:tSchedulingRuleType" use="required">
            <xs:annotation>
              <xs:documentation>Specify the type of the schedule</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="start" type="xs:dateTime" use="required">
            <xs:annotation>
              <xs:documentation>The schedule start date time</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="expire" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>The schedule expire date time</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="recurEvery" type="gn4:tPositiveInt" use="required">
            <xs:annotation>
              <xs:documentation>Number of days or weeks the schedule should recur.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="scheduledTask">
    <xs:complexType id="type36" gs:key="name" gs:descName="@name">
      <xs:annotation>
        <xs:documentation>Scheduled task</xs:documentation>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of the scheduling rule</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the scheduled task belongs to - used to set access rights</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="schedulingRule" gs:access="Protected" name="schedRuleRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scheduling rule</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="user" minOccurs="0" name="userRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>User used to schedule the task</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="priority">
            <xs:annotation>
              <xs:documentation>Priority of the task.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:short">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="ids" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Database id(s) of the objects to act on rendered as a string containing space-separated values. It can be empty</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="workflowName" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>The name of the workflow to execute.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="profile" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Name uniquely identifying the execution profile of the task</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="" name="workflowPars" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Extra parameters (name-value) to pass to the workflow.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="tLogActions">
    <xs:annotation>
      <xs:documentation>Possible log actions</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="in">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="DBLog">
              <xs:annotation>
                <xs:documentation>Log in the database</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="EventLog">
              <xs:annotation>
                <xs:documentation>Log in the Windows Event Log</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="tProfileName">
    <xs:annotation>
      <xs:documentation>Task execution profile name</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="80" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="back4Config">
    <xs:annotation>
      <xs:documentation>Back4 service configuration. The name is the name of the server where Back4 is running or '*' for 'any server'.</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type37" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of this Back4 service</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the data source template belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="profiles">
              <xs:annotation>
                <xs:documentation>Task execution profiles</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="onSuccess" type="gn4:tLogActions">
                          <xs:annotation>
                            <xs:documentation>Log actions to take on task execution success</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element name="onWarning" type="gn4:tLogActions">
                          <xs:annotation>
                            <xs:documentation>Log actions to take on task execution warning</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element name="onError" type="gn4:tLogActions">
                          <xs:annotation>
                            <xs:documentation>Log actions to take on task execution error</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element gs:refer="notifyDest" minOccurs="0" name="onSuccessNotifyDestRef" type="gn4:reference">
                          <xs:annotation>
                            <xs:documentation>Optional notifyDest object that must be notified on task execution success</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element gs:refer="notifyDest" minOccurs="0" name="onWarningNotifyDestRef" type="gn4:reference">
                          <xs:annotation>
                            <xs:documentation>Optional notifyDest object that must be notified on task execution warning</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element gs:refer="notifyDest" minOccurs="0" name="onErrorNotifyDestRef" type="gn4:reference">
                          <xs:annotation>
                            <xs:documentation>Optional notifyDest object that must be notified on task execution error</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                      </xs:sequence>
                      <xs:attribute name="name" type="gn4:tProfileName">
                        <xs:annotation>
                          <xs:documentation>Profile name</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="0" name="maxRetries" type="gn4:tNonNegativeShort" use="optional">
                        <xs:annotation>
                          <xs:documentation>The maximum number of execution tries</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute gs:dimension="time:ms" default="0" name="retryDelay" type="gn4:tNonNegativeInt" use="optional">
                        <xs:annotation>
                          <xs:documentation>The delay between task retries (in milliseconds)</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="false" name="serialExecution" type="xs:boolean" use="optional">
                        <xs:annotation>
                          <xs:documentation>Indicates if the task workflow should be executed serially - i.e. if Back4 should not execute it multiple times in parallel on multiple threads</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:back4ConfigExtra" />
          </xs:sequence>
          <xs:attribute gs:dimension="time:s" default="15" name="dbInterval" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>Database polling interval in seconds.</xs:documentation>
              <xs:appinfo>
                <gs:ui instruction="hhmmss">
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:ms" default="0" name="dbTaskDuration" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Estimated time in milliseconds required to execute a background task loaded from the database. It is used in combination with dbPollingInterval and the number of pending tasks to compute how many new tasks to load from the database at each polling cycle. Set to 0 to always load allthe available tasks at each polling cycle.</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="1" name="nPollingThreads" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>Number of concurrent polling threads.</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="1" name="nProcThreads" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>Number of concurrent processing threads.</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="nProcThreadsHigh" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Number of processing threads at high priority.</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="5" name="minHighPriority" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Minimum task priority to use a high priority thread - e.g. a task with priority &gt;= minHighPriority will be executed by a high priority thread.</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:s" default="60" name="commitEvery" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Number of seconds between every FullText commit.</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="commitEnabled" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Set to true to enable the index commit process</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="commitPriority" type="gn4:tNonNegativeShort" use="optional">
            <xs:annotation>
              <xs:documentation>The priority of the tasks created by the index process</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:s" default="60" name="categorizeEvery" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Number of seconds between every categorize.</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="categorizeEnabled" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Set to true to enable the index categorize process</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="categorizePriority" type="gn4:tNonNegativeShort" use="optional">
            <xs:annotation>
              <xs:documentation>The priority of the tasks created by the index process</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:h" default="168" name="logMaxHours" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Maximum number of hours to keep the task log entries</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:s" default="300" name="synchTimeout" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>Synchronization time-out: maximum number of seconds a task will wait for the completion of other synchronized tasks started before itself.</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="http://*:7373/" name="webUrlPrefix" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>Web listener url prefix</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="isCluster" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True indicates that the associated back4 service is part of a cluster.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="100" name="maxCachedLogins" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>Maximum number of logins that are kept cached. Higher numbers will use up more memory but make less likely that a new (slow) login is required when executing a task.</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="cleanupExpirationEnabled" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Set to true to enable the expiration rules clean-up process</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:s" default="86400" name="cleanupExpirationInterval" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>Interval between executions of the expiration rules clean-up process</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="cleanupExpirationOneTime" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Set to true to execute the expiration rules clean-up process to run only one time</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="cleanupPurgeEnabled" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Set to true to enable the purge clean-up process</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:s" default="86400" name="cleanupPurgeInterval" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>Interval between executions of the purge clean-up process</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="cleanupPurgeOneTime" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Set to true to execute the purge clean-up process to run only one time</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="cleanupLoginEnabled" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Set to true to enable the login clean-up process</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:s" default="600" name="cleanupLoginInterval" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>Interval between executions of the login clean-up process</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="cleanupLoginOneTime" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Set to true to execute the login clean-up process to run only one time</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="cleanupAuditEnabled" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Set to true to enable the audit clean-up process</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:s" default="86400" name="cleanupAuditInterval" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>Interval between executions of the audit clean-up process</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="cleanupAuditOneTime" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Set to true to execute the audit clean-up process to run only one time</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="cleanupTasksLogEnabled" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Set to true to enable the tasks log clean-up process</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:s" default="86400" name="cleanupTasksLogInterval" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>Interval between executions of the tasks log clean-up process</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="cleanupTasksLogOneTime" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Set to true to execute the tasks log clean-up process to run only one time</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:d" default="365" name="cleanupPurgeDays" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>The clean-up process purges objects that have been spiked since this number of days</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:s" default="1800" name="cleanupLoginLastAccess" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>Logins that have not been used for longer this time are ‘stale’ and automatically logged-out by the clean-up process</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:d" default="30" name="cleanupAuditDays" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>The clean-up process deletes audit entries (Login/Logout only) older than this number of days</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="cleanupPriority" type="gn4:tNonNegativeShort" use="optional">
            <xs:annotation>
              <xs:documentation>The priority of the tasks created by the clean-up process</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="cleanupProfile" type="gn4:tProfileName" use="optional">
            <xs:annotation>
              <xs:documentation>The name of the execution profile used by the tasks created by the clean-up process</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="true" name="pollingDBEnabled" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Set to true to enable the database polling (scheduled publishing and scheduled workflows)</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:back4ConfigExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="dataSrcTemplate">
    <xs:annotation>
      <xs:documentation>Data source template</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type38" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description of this data source template</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the data source template belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="parsDef" type="gn4:tParamsDef">
              <xs:annotation>
                <xs:documentation>Provides a definition of the parameters the objects that refer this dataSrcTemplate object can have</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="importWF" type="gn4:tXml">
              <xs:annotation>
                <xs:documentation>Workflow importing the data from the data source into the system.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="pollWF" nillable="true" type="gn4:tXml">
              <xs:annotation>
                <xs:documentation>Workflow polling for new data to import. Used only for custom data sources. The workflow must write in its &lt;b&gt;ExecutionLog&lt;/b&gt; global variable a xml containing all the objects to be processed, nested into a &lt;c&gt;&amp;lt;objects&amp;gt;&lt;/c&gt; element even when only one object must be processed.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="onSuccess" type="gn4:tLogActions">
              <xs:annotation>
                <xs:documentation>Log actions to take on task execution success</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="onWarning" type="gn4:tLogActions">
              <xs:annotation>
                <xs:documentation>Log actions to take on task execution warning</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="onError" type="gn4:tLogActions">
              <xs:annotation>
                <xs:documentation>Log actions to take on task execution error</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="notifyDest" minOccurs="0" name="onSuccessNotifyDestRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Optional notifyDest object that must be notified when the data source task completes with success</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="notifyDest" minOccurs="0" name="onWarningNotifyDestRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Optional notifyDest object that must be notified when the data source task completes with warning</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="notifyDest" minOccurs="0" name="onErrorNotifyDestRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Optional notifyDest object that must be notified when the data source task completes with error</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:dataSrcTemplateExtra" />
          </xs:sequence>
          <xs:attribute name="priority">
            <xs:annotation>
              <xs:documentation>Priority of the task executing the import workflow. It can be overriden by the priority attribute of the dataSrc object tha references this dataSrcTemplate object.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:short">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="no" name="serialExecution" use="optional">
            <xs:annotation>
              <xs:documentation>Indicates if the import workflow should be executed serially - i.e. if Back4 should not execute it multiple times in parallel on multiple threads</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="no">
                  <xs:annotation>
                    <xs:documentation>No serial execution: the workflow can be executed multiple time in parallel on different threads</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="source">
                  <xs:annotation>
                    <xs:documentation>Serial execution for each source: the workflow can be executed multiple times in parallel for different data sources, but only serially for the same data source</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="wf">
                  <xs:annotation>
                    <xs:documentation>Serial execution always: the workflow cannot be executed multiple times in parallel</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:dataSrcTemplateExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type39" gs:key="name" gs:descName="@name" name="dataSrc" abstract="true">
    <xs:annotation>
      <xs:documentation>Base type for the various data sources descriptions</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:object">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="gn4:tDescription">
            <xs:annotation>
              <xs:documentation>General description of this data source</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
            <xs:annotation>
              <xs:documentation>The scope the data source belongs to - used to set access rights.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:refer="dataSrcTemplate" name="templateRef" type="gn4:reference">
            <xs:annotation>
              <xs:documentation>Associated data source template.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:refer="back4Config" name="back4Ref" type="gn4:reference">
            <xs:annotation>
              <xs:documentation>Associated Back4 configuration and server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="params" type="gn4:tParams">
            <xs:annotation>
              <xs:documentation>Parameters that are passed to the import workflow.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute default="false" name="disabled" type="xs:boolean" use="optional">
          <xs:annotation>
            <xs:documentation>Set to true to disable the data source, so that Back4 does not uses it</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="-1" name="priority">
          <xs:annotation>
            <xs:documentation>Priority of the task executing the import workflow of the associated template. When set to -1, the value of the priority attribute of the associated template applies. When set to a value different than -1, it overrides the value of the priority attribute of the associated template.</xs:documentation>
            <xs:appinfo>
              <gs:ui instruction="InstructionDataSrcPriority">
                <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                  <objectUI>
                    <web maxCharsPerLine="5" />
                  </objectUI>
                </gs:template>
              </gs:ui>
            </xs:appinfo>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:short">
              <xs:minInclusive value="-1" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="dataSrcFiles">
    <xs:annotation>
      <xs:documentation>Files (spool folder) data source</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type40">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:dataSrc">
          <xs:sequence>
            <xs:group ref="gn4:dataSrcFilesExtra" />
          </xs:sequence>
          <xs:attribute name="inputDir" type="gn4:tPath" use="required">
            <xs:annotation>
              <xs:documentation>Input directory</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="subFolders" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Defines if watch also for files in subfolders</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="outputDir" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>Optional output directory</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="errorDir" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>Optional error directory</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="filter" use="optional">
            <xs:annotation>
              <xs:documentation>A filter to apply to the files being watched</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="20" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="3" name="stableOpen" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>The number of stable file checks to do for each task file</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:ms" default="500" name="stableDelay" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>The delay between stable file checks (in miliseconds)</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:dataSrcFilesExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="dataSrcEMail">
    <xs:annotation>
      <xs:documentation>E-mail data source</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type41">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:dataSrc">
          <xs:sequence>
            <xs:group ref="gn4:dataSrcEMailExtra" />
          </xs:sequence>
          <xs:attribute gs:dimension="time:s" name="interval" type="gn4:tPositiveInt" use="required">
            <xs:annotation>
              <xs:documentation>Polling interval in seconds</xs:documentation>
              <xs:appinfo>
                <gs:ui instruction="hhmmss">
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="disableOnLoginError" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>If set to true the poller will be automatically disabled if a login error occurs</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="mailServerType" use="required">
            <xs:annotation>
              <xs:documentation>Specifies the mail server type</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="pop3">
                  <xs:annotation>
                    <xs:documentation>POP3 server</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="imap">
                  <xs:annotation>
                    <xs:documentation>IMAP server</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="pop3Server" type="gn4:tPath" use="required">
            <xs:annotation>
              <xs:documentation>Address or URL of the mail server to contact</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="110" name="pop3ServerPort" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>Port of the mail server to contact</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="pop3UseSSL" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Defines if SSL authentication will be used</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="pop3UserName" use="optional">
            <xs:annotation>
              <xs:documentation>User name used to connect to the mail server</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="80" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="pop3Password" use="optional">
            <xs:annotation>
              <xs:documentation>Password used to connect to the mail server</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="gn4:password">
                <xs:maxLength value="80" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="smtpServer" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>Address or URL of the SMTP server used to send e-mails</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="25" name="smtpServerPort" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>Port of the SMTP server</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="smtpUseSSL" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Defines if SSL authentication will be used for SMTP</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="smtpUserName" use="optional">
            <xs:annotation>
              <xs:documentation>User name used to connect to the SMTP server</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="80" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="smtpPassword" use="optional">
            <xs:annotation>
              <xs:documentation>Password used to connect to the SMTP server</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="gn4:password">
                <xs:maxLength value="80" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="teraback4service@teradp.com" name="fromAddressForReply" use="optional">
            <xs:annotation>
              <xs:documentation>The address used in the "From" field when sending reply by email</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="80" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="outputDir" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>Optional output directory</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="errorDir" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>Optional error directory</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:dataSrcEMailExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="dataSrcFeed">
    <xs:annotation>
      <xs:documentation>Feed (RSS) data source</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type42">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:dataSrc">
          <xs:sequence>
            <xs:group ref="gn4:dataSrcFeedExtra" />
          </xs:sequence>
          <xs:attribute gs:dimension="time:s" name="interval" type="gn4:tPositiveInt" use="required">
            <xs:annotation>
              <xs:documentation>Polling interval in seconds</xs:documentation>
              <xs:appinfo>
                <gs:ui instruction="hhmmss">
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="url" use="required">
            <xs:annotation>
              <xs:documentation>Feed URL</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="2000" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="userName" use="optional">
            <xs:annotation>
              <xs:documentation>User name used to connect to the URL</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="80" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="password" use="optional">
            <xs:annotation>
              <xs:documentation>Password used to connect to the URL</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="gn4:password">
                <xs:maxLength value="80" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute gs:access="Special" name="lastReadTime" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>Last feed url read date and time: it is automatically updated by Back4 after reading the feed url</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Special" name="minDateTime" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>The date and time after which the requested content was released (used for AP feeds)</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Special" name="sequenceNumber" type="gn4:tPositiveInt" use="optional">
            <xs:annotation>
              <xs:documentation>A unique sequential number that identifies each feed entry and must be used in conjunction with the minDateTime parameter (used for AP feeds)</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:dataSrcFeedExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="dataSrcCustom">
    <xs:annotation>
      <xs:documentation>Custom data source</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type43">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:dataSrc">
          <xs:sequence>
            <xs:group ref="gn4:dataSrcCustomExtra" />
          </xs:sequence>
          <xs:attribute gs:dimension="time:s" name="interval" type="gn4:tPositiveInt" use="required">
            <xs:annotation>
              <xs:documentation>Polling interval in seconds</xs:documentation>
              <xs:appinfo>
                <gs:ui instruction="hhmmss">
                  <gs:template kind="SimpleString" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                    <objectUI>
                      <web maxCharsPerLine="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Special" name="lastPollingTime" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>Last custom source polling date and time: it is automatically updated by Back4 after polling the custom source without errors</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:dataSrcCustomExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="calendar">
    <xs:annotation>
      <xs:documentation>Calendar: a container for events, tasks and other calendars</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type44" gs:key="path" gs:descName="@path" gs:shortName="@name" gs:access="Protected">
      <xs:annotation>
        <xs:appinfo>
          <gs:index attrs="path" />
          <gs:compute inherit="true">
            <!-- Semplified XSL transformation to compute the path from the parent's one -->
            <calendar xmlns="">
              <xsl:attribute name="path">
                <xsl:value-of select="concat(gn4:calendarParent/nav:refObject/gn4:calendar/@path,'/',@name)" />
              </xsl:attribute>
            </calendar>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions to the calendar and to the tasks and events contained in the calendar</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="calendar" minOccurs="0" name="calendarParent" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the parent of this calendar. Not specified if this calendar is a root one.</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" refAttributes="calendarParent" />
                  </gs:ui>
                  <gs:searchUi>
                    <gs:template kind="Tree" refAttributes="calendarParent" />
                  </gs:searchUi>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="partition" gs:access="Protected" name="partitionRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the parition this calendar (and all the calendar objects it contains) belongs to. It is optional - a folder can belong to no partition. The access class is 'Protected' because the partition controls the quota, that is a potentially sensitive setting (we would not want unprivileged users to be able to modify their quota).</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="workstate" minOccurs="0" name="workstateRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the workstate associated with this calendar - that is the workstate of all the tasks contained in the calendar.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:calendarExtra" />
          </xs:sequence>
          <xs:attribute gs:compute="true" name="path" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically generated path</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:calendarExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type45" gs:key="uid" gs:stateAttr="calendarRef" name="calendarObject" abstract="true">
    <xs:annotation>
      <xs:documentation>Common ancestor for all the object belonging to a calendar.</xs:documentation>
      <xs:appinfo>
        <gs:init attrs="uid">
          <calendarObject id="{@id}" uid="{@name}" xmlns="" />
        </gs:init>
        <gs:compute inherit="true">
          <!--
            Semplified XSL transformation to compute creation date/time, creator,
            last modification date/time, last modifier
          -->
          <calendarObject xmlns="">
            <xsl:if test="not(@id)">
              <xsl:attribute name="creationDate">
                <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
              </xsl:attribute>
            </xsl:if>
            <xsl:if test="@nav:originalStateId">
              <xsl:attribute name="sentDate">
                <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
              </xsl:attribute>
            </xsl:if>
            <xsl:attribute name="autoEndDate">
              <xsl:choose>
                <xsl:when test="(@endMode = 'endAsDate') and @endDate">
                  <xsl:value-of select="@endDate" />
                </xsl:when>
                <xsl:when test="(@endMode = 'endAsDate') and @dueDate">
                  <xsl:value-of select="@dueDate" />
                </xsl:when>
                <xsl:when test="(@endMode = 'endAsDuration') and @startDate and @duration">
                  <xsl:value-of select="fn:addDuration(@startDate,@duration)" />
                </xsl:when>
              </xsl:choose>
            </xsl:attribute>
            <xsl:if test="not(@id)">
              <creatorRef>
                <xsl:attribute name="idref">
                  <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                </xsl:attribute>
              </creatorRef>
            </xsl:if>
            <xsl:if test="$context/oc:OperationContext/@Kind!='Upgrade'">
              <modifierRef>
                <xsl:attribute name="idref">
                  <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                </xsl:attribute>
              </modifierRef>
            </xsl:if>
            <xsl:if test="@nav:originalStateId">
              <xsl:element name="senderRef">
                <xsl:attribute name="idref">
                  <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                </xsl:attribute>
              </xsl:element>
            </xsl:if>
          </calendarObject>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:object">
        <xs:sequence>
          <xs:element gs:refer="calendar" name="calendarRef" type="gn4:reference">
            <xs:annotation>
              <xs:documentation>Reference to the calendar this object belongs to</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="Tree" refAttributes="calendarParent" homeFolderOnly="false" displayCompletePath="false" />
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="senderRef" type="gn4:reference">
            <xs:annotation>
              <xs:documentation>User that sent this object as part of the workflow. Automatically computed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="creatorRef" type="gn4:reference">
            <xs:annotation>
              <xs:documentation>User that created this object. Automatically computed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="modifierRef" type="gn4:reference">
            <xs:annotation>
              <xs:documentation>User that last modified this object. Automatically computed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="title" type="gn4:tTitle">
            <xs:annotation>
              <xs:documentation>Title of the task. Corresponds to the iCalendar 'summary' property.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="description" type="gn4:tText">
            <xs:annotation>
              <xs:documentation>Description of the task. Corresponds to the iCalendar 'description' property.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="notes" type="gn4:tText">
            <xs:annotation>
              <xs:documentation>Notes about the object. Corresponds to the iCalendar 'comment' property.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="location" type="gn4:tDescription">
            <xs:annotation>
              <xs:documentation>Location for the object. Corresponds to the iCalendar 'location' property.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="position" type="gn4:position">
            <xs:annotation>
              <xs:documentation>Geomgraphical coordinates for the object. Corresponds to the iCalendar 'geo' property.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="contact" type="gn4:tDescription">
            <xs:annotation>
              <xs:documentation>Contact information for the object: people names, addresses, phone numbers etc. Corresponds to the iCalendar 'contact' property.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="url" type="gn4:tPath">
            <xs:annotation>
              <xs:documentation>URL associated with the object. Corresponds to the iCalendar 'url' property.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:refer="CalendarKeywords" minOccurs="0" name="keywords" type="gn4:keywords">
            <xs:annotation>
              <xs:documentation>Object keywords. Corresponds to the iCalendar 'categories' property (as the 'cats' attribute - it is up to import/export processes to map to one or the other)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:refer="calendarCategory" minOccurs="0" name="cats" type="gn4:categoryRefs">
            <xs:annotation>
              <xs:documentation>Object categories. Corresponds to the iCalendar 'categories' property (as the 'keywords' attribute - it is up to import/export processes to map to one or the other).</xs:documentation>
              <xs:appinfo>
                <gs:ui>
                  <gs:template kind="Tree" displayCompletePath="false" showWeights="false">
                    <objectUI xmlns="">
                      <web maxRows="5" />
                    </objectUI>
                  </gs:template>
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element name="attachs">
            <xs:annotation>
              <xs:documentation>Binary data attached to the calendar object - e.g a PDF or Word documents with details on an event. Corresponds to the iCalendar 'attach' property. It is an ordered list so that it is possible to place 'more important' attachments first.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="item">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element gs:volume="attachments" minOccurs="1" name="data" type="gn4:dataContent" />
                    </xs:sequence>
                    <xs:attribute name="name" use="optional">
                      <xs:annotation>
                        <xs:documentation>Original file name of the file stored in calendarObject.attachs.item.data.</xs:documentation>
                      </xs:annotation>
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:whiteSpace value="collapse" />
                          <xs:maxLength value="256" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:group ref="gn4:calendarObjectExtra" />
        </xs:sequence>
        <xs:attribute name="uid" use="required">
          <xs:annotation>
            <xs:documentation>The unique identifier of the calendar object. Corresponds to the iCalendar 'UID' property.</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:maxLength value="255" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute gs:compute="true" name="sentDate" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:appinfo>
              <xs:documentation xmlns:xs="http://www.w3.org/2001/XMLSchema">The date and time the object was sent. Automatically computed.</xs:documentation>
            </xs:appinfo>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:compute="true" name="creationDate" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:documentation>When the object was created. Automatically computed. Corresponds to the iCalendar 'created' property.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:compute="true" name="autoEndDate" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:documentation>End date/time for the object. Automatically computed from the start date/time and the duration or explicit end/due date/time.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="startDate" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:documentation>Object starting date and time. Corresponds to the iCalendar 'dtstart' property.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="endMode" use="optional">
          <xs:annotation>
            <xs:documentation>Specifies how the end date/time of the object is specified</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="endAsDuration">
                <xs:annotation>
                  <xs:documentation>The end date/time is specified as a duration from the start date/time</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="endAsDate">
                <xs:annotation>
                  <xs:documentation>The end date/time is specified directly</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute gs:dimension="time:s" name="duration" use="optional">
          <xs:annotation>
            <xs:documentation>Duration of the object. Corresponds to the iCalendar 'DURATION' property. Ignored if endMode is not endAsDuration.</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:int">
              <xs:minInclusive value="0" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="priority" use="optional">
          <xs:annotation>
            <xs:documentation>Object priority. Corresponds to the iCalendar 'priority' property with 'low' mapped to 6, 'medium' mapped to 5 and 'high' mapped to 4</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="low" />
              <xs:enumeration value="medium" />
              <xs:enumeration value="high" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attributeGroup ref="gn4:calendarObjectExtra" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="task">
    <xs:annotation>
      <xs:documentation>Task: description of something to be done. Corresponds to the 'to-do' component in the iCalendar specifications (RFC 2445)</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type46" gs:descName="gn4:title">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <!-- Semplified XSL transformation to compute the status -->
            <task xmlns="">
              <xsl:attribute name="status">
                <xsl:variable name="calendar" select="gn4:calendarRef/*/gn4:calendar" />
                <xsl:variable name="workstate" select="$calendar/gn4:workstateRef/*/gn4:workstate" />
                <xsl:choose>
                  <xsl:when test="string($calendar/gn4:workstateRef/@idref) and string($workstate/@status)">
                    <xsl:value-of select="$workstate/@status" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>needsAction</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
            </task>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:calendarObject">
          <xs:sequence>
            <xs:element gs:refer="user" minOccurs="0" name="userRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>User in charge of the task. No direct correspondence in the iCalendar specifications (RFC 2445), it can be rendered using the 'resources' property.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:access="Normal" name="users">
              <xs:annotation>
                <xs:documentation>Users working or that will work on the task.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="false" gs:refer="user" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence>
                            <xs:element minOccurs="0" name="notes" type="gn4:tDescription">
                              <xs:annotation>
                                <xs:documentation>Notes on what the user is supposed to do or did for this task.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element gs:refer="TaskRoles" minOccurs="0" name="role" nillable="true" type="gn4:categoryRef">
                              <xs:annotation>
                                <xs:documentation>&gt;Role played by the user in working on this task</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                          </xs:sequence>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="products">
              <xs:annotation>
                <xs:documentation>Stories, videos, images etc. produced working on this task. The first object in the list is the 'main' product of the task. No direct correspondence in the iCalendar specifications (RFC 2445), it can be rendered using the 'attachment' property.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" gs:refer="folderObject" minOccurs="0" maxOccurs="unbounded" name="ref" type="gn4:reference" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:taskExtra" />
          </xs:sequence>
          <xs:attribute name="dueDate" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>Task due date and time (deadline). Corresponds to the iCalendar 'DUE'. Ignored if endMode is not endAsDate.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="completedDate" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>Task actual completion date and time. Corresponds to the iCalendar 'completed' property.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="percentComplete" use="optional">
            <xs:annotation>
              <xs:documentation>Task completion percentage - from 0 = nothing done, to 100 = completed. Corresponds to the iCalendar 'percent-complete' property.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:short">
                <xs:minInclusive value="0" />
                <xs:maxInclusive value="100" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="status" type="gn4:tTaskStatus" use="required">
            <xs:annotation>
              <xs:documentation>Current status of the task. It is automatically computed based on the associated workstate. Corresponds to the iCalendar 'status' property.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:taskExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="event">
    <xs:annotation>
      <xs:documentation>Event: description of something that is going to happen. Corresponds to the 'event' component in the iCalendar specifications (RFC 2445)</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type47" gs:descName="gn4:title">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:calendarObject">
          <xs:sequence>
            <xs:group ref="gn4:eventExtra" />
          </xs:sequence>
          <xs:attribute name="endDate" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>Event ending date and time. Corresponds to the iCalendar 'DTEND' property. Ignored if endMode is not endAsDate.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="status" use="required">
            <xs:annotation>
              <xs:documentation>Current status of the event. Corresponds to the iCalendar 'status' property.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="tentative" />
                <xs:enumeration value="confirmed" />
                <xs:enumeration value="cancelled" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:eventExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="budget">
    <xs:annotation>
      <xs:documentation>Groups of tasks for a specific product</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type48" gs:key="publicationRef date name" gs:descName="@descName" gs:shortName="@shortName">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <!--
              Semplified XSL transformation to compute descriptive names, creation date/time, creator,
              last modifier, tasks end date
            -->
            <budget xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns="">
              <!--
                Compute the descritive names
              -->
              <xsl:variable name="publication" select="gn4:publicationRef/*/gn4:*" />
              <!-- Create the XML nodes containing the variables that can be used in the name (in $vars) -->
              <xsl:variable name="varsFragment">
                <var name="publicationName" value="{$publication/@name}" />
                <var name="date" value="{@date}" />
                <var name="name" value="{substring(@name,1,string-length(@name)*number(@name!='-'))}" />
              </xsl:variable>
              <xsl:variable name="vars" select="msxsl:node-set($varsFragment)" />
              <!-- Create the XML nodes containing the templates for descriptive and short names (in $namesTemplate) -->
              <xsl:variable name="namesTemplateFragment">
                <!-- Template for descriptive name  -->
                <template name="descName">
                  <xsl:variable name="publicationTemplate" select="$publication/gn4:budgetDescName" />
                  <xsl:choose>
                    <xsl:when test="$publicationTemplate/*">
                      <xsl:copy-of select="$publicationTemplate/*" />
                    </xsl:when>
                    <xsl:otherwise>
                      <var name="publicationName" />
                      <text value=" " />
                      <var-date name="date" format="d" />
                      <text value=" " />
                      <var name="name" />
                    </xsl:otherwise>
                  </xsl:choose>
                </template>
                <!-- Template for short name  -->
                <template name="shortName">
                  <xsl:variable name="publicationTemplate" select="$publication/gn4:budgetShortName" />
                  <xsl:choose>
                    <xsl:when test="$publicationTemplate/*">
                      <xsl:copy-of select="$publicationTemplate/*" />
                    </xsl:when>
                    <xsl:otherwise>
                      <var-date name="date" format="d" />
                      <text value=" " />
                      <var name="name" />
                    </xsl:otherwise>
                  </xsl:choose>
                </template>
              </xsl:variable>
              <xsl:variable name="namesTemplate" select="msxsl:node-set($namesTemplateFragment)" />
              <!-- Create the names replacing the variable part in the templates  -->
              <xsl:variable name="clientTimeZoneId" select="$context/lc:LoginContext/@ClientTimeZoneId" />
              <xsl:for-each select="$namesTemplate/*">
                <xsl:attribute name="{@name}">
                  <xsl:for-each select="*">
                    <xsl:choose>
                      <xsl:when test="local-name()='text'">
                        <xsl:value-of select="@value" />
                      </xsl:when>
                      <xsl:when test="local-name()='var'">
                        <xsl:variable name="name" select="@name" />
                        <xsl:value-of select="$vars/var[@name=$name]/@value" />
                      </xsl:when>
                      <xsl:when test="local-name()='var-date'">
                        <xsl:variable name="name" select="@name" />
                        <xsl:value-of select="fn:formatDateTime(fn:fromUTCToClientLocalTime($vars/var[@name=$name]/@value,$clientTimeZoneId),@format)" />
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:attribute>
              </xsl:for-each>
              <!--
                Compute creation date-time
              -->
              <xsl:if test="not(@id)">
                <xsl:attribute name="creationDate">
                  <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
                </xsl:attribute>
              </xsl:if>
              <!--
                Compute tasks end date
              -->
              <xsl:attribute name="tasksEndDate">
                <xsl:if test="string(@date) and @setTasksEndDate='true'">
                  <xsl:value-of select="fn:addDuration(@date,@tasksEndDateGap*60)" />
                </xsl:if>
              </xsl:attribute>
              <!--
                Compute creator and last modifier
              -->
              <xsl:if test="not(@id)">
                <creatorRef idref="{$context/lc:LoginContext/@UserId}" />
              </xsl:if>
              <xsl:if test="$context/oc:OperationContext/@Kind!='Upgrade'">
                <modifierRef idref="{$context/lc:LoginContext/@UserId}" />
              </xsl:if>
            </budget>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="calendar" name="calendarRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the calendar this budget belongs to</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" refAttributes="calendarParent" homeFolderOnly="false" displayCompletePath="false" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="creatorRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the user that created this budget. Automatically computed.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="modifierRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the user that last modified this budget. Automatically computed.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General budget description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="publicationBase" minOccurs="1" name="publicationRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the publication this budget belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="tasks">
              <xs:annotation>
                <xs:documentation>The tasks belonging to this budget</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" gs:refer="task" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence>
                            <xs:group ref="gn4:budgetTasksExtra" />
                          </xs:sequence>
                          <xs:attributeGroup ref="gn4:budgetTasksExtra" />
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:budgetExtra" />
          </xs:sequence>
          <xs:attribute gs:compute="true" name="creationDate" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>When this budget was created. Automatically computed.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="descName" type="gn4:tTitle" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically computed descriptive name</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="shortName" type="gn4:tTitle" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically computed short descriptive name</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="date" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>Budget's date (and time)</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="setTasksEndDate" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>If true the budget's task end date is computed based on the budget's date time.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:min" default="0" name="tasksEndDateGap" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Number of minutes to add to the budget date-time to obtain the end date-time of the budget's tasks. Used only if setTasksEndDate is true</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="tasksEndDate" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>Computed tasks end date = budget date plus tasks end date gap. Empty if the budget does not have a date or setTasksEndDate is false</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:budgetExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:group name="baseObjects">
    <xs:annotation>
      <xs:documentation>List of the base non-abstract object types - to be used inside the 'object' complex type declaration</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:securityScope" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:group" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:user" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:userGap" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:configScope" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:config" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:icon" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:category" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:categorySet" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:keywordSet" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:pubMode" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:pubTemplate" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:pubDest" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:quota" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:expirationRule" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:versioningRule" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:partition" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:counter" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:workstate" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:variantType" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:folder" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:clientTemplate" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:clientSpec" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:addInSolution" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:addInProject" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:addIn" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:back4Config" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:dataSrcTemplate" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:dataSrcFiles" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:dataSrcEMail" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:dataSrcFeed" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:dataSrcCustom" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:calendar" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:task" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:event" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:budget" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:externalSystem" />
    </xs:sequence>
  </xs:group>
  <xs:annotation>
    <xs:documentation>Archiving-specific base object types</xs:documentation>
  </xs:annotation>
  <xs:complexType name="_objectTypeArchive">
    <xs:annotation>
      <xs:documentation>Object type archive attributes</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:_objectTypeBase">
        <xs:attribute default="None" name="mediaType" type="gn4:tMediaType" use="optional">
          <xs:annotation>
            <xs:documentation>Media type of objects of this type.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="tColorUsage">
    <xs:annotation>
      <xs:documentation>Possible color usages (color spaces). It corresponds to the CVariantBinary::cuXXXX constants</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="cuNone">
        <xs:annotation>
          <xs:documentation>None: error or unknown</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="cuMono">
        <xs:annotation>
          <xs:documentation>Black and white (aka line art = 1 bit/pixel)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="cuGray">
        <xs:annotation>
          <xs:documentation>Grayscale</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="cuCMYK">
        <xs:annotation>
          <xs:documentation>Color (CMYK)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="cuVector">
        <xs:annotation>
          <xs:documentation>Vectorial, i.e. not a bitmap</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="cuRGB">
        <xs:annotation>
          <xs:documentation>RGB color</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tSourceId">
    <xs:annotation>
      <xs:documentation>The unique identifier of an object within a source system</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="80" />
      <xs:whiteSpace value="collapse" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tMediaType">
    <xs:annotation>
      <xs:documentation>Possible object media types</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="None">
        <xs:annotation>
          <xs:documentation>No media type</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Text">
        <xs:annotation>
          <xs:documentation>Text</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Image">
        <xs:annotation>
          <xs:documentation>Images (e.g. photos)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Video">
        <xs:annotation>
          <xs:documentation>Videos</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Audio">
        <xs:annotation>
          <xs:documentation>Audios</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Graphic">
        <xs:annotation>
          <xs:documentation>Graphics (e.g. Flash animation, Illustrator diagrams)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Complex">
        <xs:annotation>
          <xs:documentation>Complex media (e.g. composite documents or projects containing different elements)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tXmlType">
    <xs:annotation>
      <xs:documentation>Possible XML types</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="t">
        <xs:annotation>
          <xs:documentation>GN4-specific XML markup</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="html">
        <xs:annotation>
          <xs:documentation>HTML</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="nitf">
        <xs:annotation>
          <xs:documentation>IPTC NITF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tShortLine">
    <xs:annotation>
      <xs:documentation>A short line of text (single line string), useful for names</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="80" />
      <xs:whiteSpace value="collapse" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tShortText">
    <xs:annotation>
      <xs:documentation>A free-form short text: multi-line string</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="500" />
      <xs:whiteSpace value="preserve" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="source">
    <xs:annotation>
      <xs:documentation>External sources of content (wire feeds, other systems etc.)</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type49" gs:key="name" gs:descName="substring(concat(@name,gn4:title),string-length(substring(gn4:title,1,1))*string-length(@name)+1)">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the source belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="title" type="gn4:tTitle">
              <xs:annotation>
                <xs:documentation>Human-readable name of the source. The source descriptive name is the title if non-empty, otherwise it is the name</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General source description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="mediaTypes">
              <xs:annotation>
                <xs:documentation>Media types provided by the source. It is an enumeration set: each source can provide multiple media types</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="in" type="gn4:tMediaType" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:sourceExtra" />
          </xs:sequence>
          <xs:attribute default="Other" name="type" use="optional">
            <xs:annotation>
              <xs:documentation>Type of the source</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Other">
                  <xs:annotation>
                    <xs:documentation>The source is of an unknown or not covered type</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="WireFeed">
                  <xs:annotation>
                    <xs:documentation>The source is a wire feed</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="WebCMS">
                  <xs:annotation>
                    <xs:documentation>The source is a Web CMS (e.g. a Drupal system)</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="Editorial">
                  <xs:annotation>
                    <xs:documentation>The source is of an editorial system</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="Archive">
                  <xs:annotation>
                    <xs:documentation>The source is an archiving system</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="false" name="categorize" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Indicates whether items referencing this source are to be automatically categorized by the system.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:sourceExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="archive">
    <xs:annotation>
      <xs:documentation>Archives used to organize objects</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type50" gs:key="path" gs:descName="@path" gs:shortName="@name">
      <xs:annotation>
        <xs:appinfo>
          <gs:index attrs="path" xmlns:gs="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd" />
          <gs:index attrs="archiveParent" />
          <gs:compute inherit="true">
            <!-- 
              Semplified XSL transformation to compute the path from the parent's 
              one and creation date and creator
            -->
            <archive xmlns="">
              <xsl:attribute name="path" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:value-of select="concat(gn4:archiveParent/nav:refObject/gn4:archive/@path,'/',@name)" />
              </xsl:attribute>
              <xsl:if test="not(@id)">
                <xsl:attribute name="creationDate">
                  <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
                </xsl:attribute>
              </xsl:if>
              <xsl:if test="not(@id)">
                <creatorRef>
                  <xsl:attribute name="idref">
                    <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                  </xsl:attribute>
                </creatorRef>
              </xsl:if>
            </archive>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General archive description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="archive" minOccurs="0" name="archiveParent" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" refAttributes="archiveParent" />
                  </gs:ui>
                  <gs:searchUi>
                    <gs:template kind="Tree" refAttributes="archiveParent" />
                  </gs:searchUi>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="mediaTypes">
              <xs:annotation>
                <xs:documentation>Media types of the objects that can reference this archive</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="in" type="gn4:tMediaType" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="creatorRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>User that created the archive. Automatically computed.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:archiveExtra" />
          </xs:sequence>
          <xs:attribute gs:compute="true" name="path" type="gn4:tPath" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically generated path</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="creationDate" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>When the archive was created. Automatically computed.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="limit" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Maximum number of objects referencing this archive. 0 = no limit.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:archiveExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="copyright">
    <xs:annotation>
      <xs:documentation>Description of a copyright - i.e. usage terms and restrictions on an asset</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type51" gs:key="name" gs:descName="substring(concat(@name,gn4:title),string-length(substring(gn4:title,1,1))*string-length(@name)+1)">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the copyright belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="title" type="gn4:tTitle">
              <xs:annotation>
                <xs:documentation>One-line copyright description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tText">
              <xs:annotation>
                <xs:documentation>General copyright description. It can be long to detail what are the restrictions associated with this copyright.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="image/gif image/jpeg image/png" gs:maxSize="64000" gs:access="Normal" minOccurs="0" name="image" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>Specifies a GIF, JPEG or PNG image visually representing this copyright - like the Creative Commons icons for example.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="url" type="gn4:tPath">
              <xs:annotation>
                <xs:documentation>URL of a Web page or Web site containing details about the copyright.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="attachs">
              <xs:annotation>
                <xs:documentation>Binary data attached to the copyright - e.g a PDF or Word documents containing the relevant contracts or other such documents.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element minOccurs="1" name="data" type="gn4:dataContent">
                          <xs:annotation>
                            <xs:documentation>The data of the attachment</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element minOccurs="0" name="title" type="gn4:tTitle">
                          <xs:annotation>
                            <xs:documentation>Optional title (e.g. the file name) identifying the attachment</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="pubs">
              <xs:complexType>
                <xs:annotation>
                  <xs:documentation>The publications where object with this copyright can be used (or not used - depending on the attribute)</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                  <xs:element gs:refer="publicationBase" gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="ref" type="gn4:reference" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:copyrightExtra" />
          </xs:sequence>
          <xs:attribute name="expirationMode" use="optional">
            <xs:annotation>
              <xs:documentation>Specifies how the expiration date of the copyright is specified</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="expirationAsDays">
                  <xs:annotation>
                    <xs:documentation>The expiration date is specified as a duration from the object creation date/time</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="expirationAsDate">
                  <xs:annotation>
                    <xs:documentation>The expiration date is specified directly</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute gs:dimension="time:d" name="expirationDays" use="optional">
            <xs:annotation>
              <xs:documentation>Number of days this copyright lasts from the object creation date/time. Ignored if expirationMode is not expirationAsDays.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="expirationDate" type="xs:date" use="optional">
            <xs:annotation>
              <xs:documentation>Expiration date of this copyright. Ignored if expirationMode is not expirationAsDate.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="onlyInPubs" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if objects with this copyright can be used only in the publications listed in the pubs attribute, false if they can be used only in publications NOT listed in the pubs attribute.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:copyrightExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="xmlMode">
    <xs:annotation>
      <xs:documentation>Rendering mode of an XML text</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type52" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the rendering mode belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General rendering mode description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:xmlModeExtra" />
          </xs:sequence>
          <xs:attribute name="xmlType" type="gn4:tXmlType" use="optional">
            <xs:annotation>
              <xs:documentation>The general type of the XML generated by this rendering</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:xmlModeExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="xmlFormat">
    <xs:annotation>
      <xs:documentation>Description of the XML formats used for the archived (and wire) texts</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type53" gs:key="name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the XML format belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General XML format description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="renders">
              <xs:annotation>
                <xs:documentation>Different ways to render XML text of this format</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="false" gs:refer="xmlMode" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence>
                            <xs:element minOccurs="0" name="xslt" type="gn4:tXml">
                              <xs:annotation>
                                <xs:documentation>XSL transformation rendering XML text of this format into the referenced mode</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                          </xs:sequence>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:xmlFormatExtra" />
          </xs:sequence>
          <xs:attribute name="namespaceUri" use="optional">
            <xs:annotation>
              <xs:documentation>The URI identifying the namespace used by the XML</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:whiteSpace value="collapse" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="false" name="isHtml" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if the XML format is HTML. Used to compute the number of words in the text - see fn:countText().</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="wordBreakTags" use="optional">
            <xs:annotation>
              <xs:documentation>Space-separated list of tags (XML element names) to consider word separators. Used to compute the number of words in the text - see fn:countText(). Leave empty if isHtml is true.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:whiteSpace value="collapse" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="xmlType" type="gn4:tXmlType" use="optional">
            <xs:annotation>
              <xs:documentation>The general type of this XML format</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:xmlFormatExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="extractDest">
    <xs:annotation>
      <xs:documentation>Extraction (crop) destinations</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type54" gs:key="name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General extraction destination description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions to the extraction destination</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="url" type="gn4:tPath">
              <xs:annotation>
                <xs:documentation>FTP or file URL of the destination directory for the extracted/cropped image.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="aliasUrl" type="gn4:tPath">
              <xs:annotation>
                <xs:documentation>alias FTP or file URL of the destination directory for the extracted/cropped image.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="folder" minOccurs="0" name="folderRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Destination folder for the extracted/cropped image.</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" refAttributes="folderParent" displayCompletePath="true" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element name="varTypes">
              <xs:annotation>
                <xs:documentation>List of binary tranformations (variant types) to generate.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:annotation>
                      <xs:documentation>
                        The variant type to apply or the attribute to export when extracting the specific object type.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element gs:refer="variantType" minOccurs="0" name="variant" nillable="true" type="gn4:reference">
                          <xs:annotation>
                            <xs:documentation>Reference to a variant type with the transformation steps.</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element gs:refer="archiveObject" minOccurs="1" name="objectType" type="gn4:objectType">
                          <xs:annotation>
                            <xs:documentation>
                              Reference to the object type this extract destination refers to. It can be only a descendant type
                              of 'archiveObject'
                            </xs:documentation>
                          </xs:annotation>
                        </xs:element>
                      </xs:sequence>
                      <xs:attribute name="attribute" use="optional">
                        <xs:annotation>
                          <xs:documentation>Name of the attribute containing the data to get when using this extract destination.
                          It is used only if there is not a variant type to apply. If empty or not specified the entire XML of the object is used.</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:maxLength value="30" />
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="presets">
              <xs:annotation>
                <xs:documentation>
                  List of crop presets.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:attribute name="name" type="gn4:tName">
                        <xs:annotation>
                          <xs:documentation>The name of the preset.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="width">
                        <xs:annotation>
                          <xs:documentation>Preset width (unit is decided with kind attribute)</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                          <xs:restriction base="xs:decimal">
                            <xs:fractionDigits value="3" />
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                      <xs:attribute name="height">
                        <xs:annotation>
                          <xs:documentation>Preset height (unit is decided with kind attribute)</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                          <xs:restriction base="xs:decimal">
                            <xs:fractionDigits value="3" />
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                      <xs:attribute name="kind">
                        <xs:annotation>
                          <xs:documentation>Unit used by preset</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:enumeration value="Cm">
                              <xs:annotation>
                                <xs:documentation>Unit expressed in centimetres</xs:documentation>
                              </xs:annotation>
                            </xs:enumeration>
                            <xs:enumeration value="Inch">
                              <xs:annotation>
                                <xs:documentation>Unit expressed in inches</xs:documentation>
                              </xs:annotation>
                            </xs:enumeration>
                            <xs:enumeration value="Pixel">
                              <xs:annotation>
                                <xs:documentation>Unit expressed in pixels</xs:documentation>
                              </xs:annotation>
                            </xs:enumeration>
                            <xs:enumeration value="Ratio">
                              <xs:annotation>
                                <xs:documentation>Unit expressed in aspect ratio</xs:documentation>
                              </xs:annotation>
                            </xs:enumeration>
                            <xs:enumeration value="Point">
                              <xs:annotation>
                                <xs:documentation>Unit expressed in points</xs:documentation>
                              </xs:annotation>
                            </xs:enumeration>
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:extractDestExtra" />
          </xs:sequence>
          <xs:attribute name="format">
            <xs:annotation>
              <xs:documentation>Format of the extracted/cropped image</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="MaskedTiff">
                  <xs:annotation>
                    <xs:documentation>TIFF file with a mask indicating the cropped area</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="CroppedTiff">
                  <xs:annotation>
                    <xs:documentation>TIFF file physically cropped</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
                <xs:enumeration value="CroppedJpeg">
                  <xs:annotation>
                    <xs:documentation>JPEG file physically cropped</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="0" name="resolution" use="optional">
            <xs:annotation>
              <xs:documentation>Destination resolution in DPI. 0 = keep the original resolution.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:short">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="50" name="minScale" use="optional">
            <xs:annotation>
              <xs:documentation>Minimum percentage scaling that can be applied when extracting/cropping</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:short">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="150" name="maxScale" use="optional">
            <xs:annotation>
              <xs:documentation>Maximum percentage scaling that can be applied when extracting/cropping</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:short">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="100" name="jpegQuality" use="optional">
            <xs:annotation>
              <xs:documentation>JPEG quality of the extracted/cropped image</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:short">
                <xs:minInclusive value="0" />
                <xs:maxInclusive value="100" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="false" name="scaleCroppedImg" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if the extracted/cropped image should be scaled changing its resolution.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="allowFreeCrop" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if image cropping can be done without keeping its aspect ratio.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="overwrite" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if cropped image will overwrite existing object/file.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="useResolution" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>
                True if the output image must keep the resolution specified in the 'resolution' attribute.
                False if the output image can have a different resolution (like in GN3).
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:extractDestExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="docType">
    <xs:annotation>
      <xs:documentation>Description of the possible archived document types (InDesign, XPress, GN3 pages etc)</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type55" gs:key="name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the document type belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General document type description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:docTypeExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:docTypeExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type57" name="publication">
    <xs:annotation>
      <xs:documentation>Publications and titles</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:publicationBase">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="gn4:tDescription">
            <xs:annotation>
              <xs:documentation>General publication description</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="access" type="gn4:access">
            <xs:annotation>
              <xs:documentation>Access permissions to the publication (or title) and the objects referencing it</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:group ref="gn4:publicationExtra" />
        </xs:sequence>
        <xs:attributeGroup ref="gn4:publicationExtra" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="publication" type="gn4:publication">
    <xs:annotation>
      <xs:documentation>Publications</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="media">
    <xs:annotation>
      <xs:documentation>Possible media types: Web, print etc.</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type58" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the media type belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General media type description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:mediaExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:mediaExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type59" name="zoneBase">
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:object" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="zone">
    <xs:annotation>
      <xs:documentation>Pages' zones</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type60" gs:key="titleRef name" gs:shortName="substring(@name,1,string-length(@name)*number(@name!='-'))" gs:descName="concat(gn4:titleRef/*/gn4:*/@name,':',@name)">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:zoneBase">
          <xs:sequence>
            <xs:element name="pageAccess" type="gn4:accessIndirect">
              <xs:annotation>
                <xs:documentation>Referencing access permissions</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General zone description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="publication" minOccurs="1" name="titleRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the publication or title this zone belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="media" minOccurs="1" name="mediaRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the media type of this zone</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:zoneExtra" />
          </xs:sequence>
          <xs:attribute default="false" name="isArchive" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if object can not be listed in Edt panels</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:zoneExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type61" name="sectionBase">
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:object" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="section">
    <xs:annotation>
      <xs:documentation>Pages' sections</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type62" gs:key="titleRef name" gs:shortName="substring(@name,1,string-length(@name)*number(@name!='-'))" gs:descName="concat(gn4:titleRef/*/gn4:*/@name,':',@name)">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:sectionBase">
          <xs:sequence>
            <xs:element name="pageAccess" type="gn4:accessIndirect">
              <xs:annotation>
                <xs:documentation>Referencing access permissions</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General section description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="publication" minOccurs="1" name="titleRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the publication or title this section belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:sectionExtra" />
          </xs:sequence>
          <xs:attribute default="All" name="sectionType" use="optional">
            <xs:annotation>
              <xs:documentation>Type of section, indicating to which kind of pages they can be associated with</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Physical" />
                <xs:enumeration value="Logical" />
                <xs:enumeration value="All" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="false" name="isArchive" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if object can not be listed in Edt panels</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:sectionExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type63" name="bookBase">
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:object" />
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="book">
    <xs:annotation>
      <xs:documentation>Pages' books</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type64" gs:key="titleRef name" gs:shortName="substring(@name,1,string-length(@name)*number(@name!='-'))" gs:descName="concat(gn4:titleRef/*/gn4:title/@name,':',@name)">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:bookBase">
          <xs:sequence>
            <xs:element name="pageAccess" type="gn4:accessIndirect">
              <xs:annotation>
                <xs:documentation>Referencing access permissions</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General book description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="publication" minOccurs="1" name="titleRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the publication or title this book belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:bookExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:bookExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="editionNumber">
    <xs:annotation>
      <xs:documentation>Editions' numbers</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type65" gs:key="titleRef name" gs:shortName="substring(@name,1,string-length(@name)*number(@name!='-'))" gs:descName="concat(gn4:titleRef/*/gn4:title/@name,':',@name)">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General edition number description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="publication" minOccurs="1" name="titleRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the publication or title this edition number belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:editionNumberExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:editionNumberExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type125" gs:descName="substring(concat(@name,gn4:title),string-length(substring(gn4:title,1,1))*string-length(@name)+1)" name="archiveObject">
    <xs:annotation>
      <xs:documentation>Folder object that can be placed in an archive</xs:documentation>
      <xs:appinfo>
        <gs:index attrs="sourceRef" />
        <gs:compute inherit="true">
          <!--
            Semplified XSL transformation to compute size (always 0) and copyrights expiration
          -->
          <archiveObject size="0" xmlns="">
            <!-- Useful variables -->
            <xsl:variable name="now" select="$context/oc:OperationContext/@UtcNow" />
            <!-- Copyrights status and expiration date -->
            <xsl:variable name="copyrights" select="gn4:rights/gn4:ref/nav:refObject/gn4:copyright" />
            <xsl:choose>
              <xsl:when test="not($copyrights)">
                <xsl:attribute name="rightsStatus">None</xsl:attribute>
                <xsl:attribute name="rightsExpiration" />
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="copyrightsWithDays" select="$copyrights[@expirationMode='expirationAsDays']" />
                <xsl:variable name="copyrightsWithDate" select="$copyrights[@expirationMode='expirationAsDate']" />
                <xsl:variable name="minExpirationDatesTree">
                  <xsl:if test="$copyrightsWithDays">
                    <fromDays>
                      <xsl:variable name="minExpirationSeconds" select="fn:minNumber($copyrightsWithDays/@expirationDays)*86400" />
                      <xsl:choose>
                        <xsl:when test="not(@id)">
                          <xsl:value-of select="fn:addDuration($now,$minExpirationSeconds)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="fn:addDuration(@creationDate,$minExpirationSeconds)" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </fromDays>
                  </xsl:if>
                  <xsl:if test="$copyrightsWithDate">
                    <fromDate>
                      <xsl:value-of select="fn:minDateTime($copyrightsWithDate/@expirationDate)" />
                    </fromDate>
                  </xsl:if>
                </xsl:variable>
                <xsl:variable xmlns:msxsl="urn:schemas-microsoft-com:xslt" name="minExpirationDates" select="msxsl:node-set($minExpirationDatesTree)" />
                <xsl:choose>
                  <xsl:when test="$minExpirationDates/*">
                    <xsl:attribute name="rightsStatus">Expiration</xsl:attribute>
                    <xsl:attribute name="rightsExpiration">
                      <xsl:value-of select="fn:minDateTime($minExpirationDates/*)" />
                    </xsl:attribute>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:attribute name="rightsStatus">NoExpiration</xsl:attribute>
                    <xsl:attribute name="rightsExpiration" />
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:otherwise>
            </xsl:choose>
          </archiveObject>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:folderObject">
        <xs:sequence>
          <xs:element gs:access="Special" minOccurs="0" name="archives">
            <xs:annotation>
              <xs:documentation>List of archives containing this object. Use access class 'Special' to be modifiable indipendently from the metadata.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:refer="archive" minOccurs="0" maxOccurs="unbounded" name="ref" type="gn4:reference" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element gs:refer="source" minOccurs="0" name="sourceRef" nillable="true" type="gn4:reference">
            <xs:annotation>
              <xs:appinfo>
                <gs:fullTextAttr exaMetaName="sourceRef" />
              </xs:appinfo>
              <xs:documentation>The external source of the object</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="sourceId" type="gn4:tSourceId">
            <xs:annotation>
              <xs:appinfo>
                <gs:fullTextAttr exaMetaName="sourceInfo" />
              </xs:appinfo>
              <xs:documentation>The unique identifier of the object in the source system</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="sourceFileName" type="gn4:tPath">
            <xs:annotation>
              <xs:documentation>The name of the file this object has been created from - either the original name of an uploaded file or the name of a file processed in a spool folder.</xs:documentation>
              <xs:appinfo>
                <gs:fullTextAttr exaMetaName="sourceInfo" />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="rights">
            <xs:annotation>
              <xs:documentation>The copyrights of the object</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="false" gs:refer="copyright" minOccurs="0" maxOccurs="unbounded" name="ref">
                  <xs:complexType>
                    <xs:complexContent mixed="false">
                      <xs:extension base="gn4:reference">
                        <xs:sequence>
                          <xs:element minOccurs="0" name="notes" type="gn4:tDescription">
                            <xs:annotation>
                              <xs:documentation>Optional notes describing why this copyright applies to this object and/or to which part of the object it applies</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                      </xs:extension>
                    </xs:complexContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element gs:access="Protected" minOccurs="0" name="libelTags">
            <xs:annotation>
              <xs:documentation>Tags the object as libellious: it is a list of entries, each one describing why the content is libellious. 'Protected' access content because only privileged users can mark/unmark content as libellious.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="item">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element minOccurs="0" name="description" type="gn4:tDescription">
                        <xs:annotation>
                          <xs:documentation>Description of why this object is considered libellious</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element gs:refer="user" name="creatorRef" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>Who created this libellious content descriptions.</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                    <xs:attribute name="creationDate" type="xs:dateTime">
                      <xs:annotation>
                        <xs:documentation>When this libellious content description was created</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:group ref="gn4:archiveObjectExtra" />
        </xs:sequence>
        <xs:attribute gs:access="Content" gs:compute="true" gs:size="Main" gs:dimension="datasize:byte" name="size" type="gn4:tNonNegativeLong">
          <xs:annotation>
            <xs:appinfo>
              <gs:ui mode="Hidden" />
            </xs:appinfo>
            <xs:documentation>Object 'main' size: the size in bytes of the object data</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:compute="true" default="None" name="rightsStatus" type="gn4:rightsStatus">
          <xs:annotation>
            <xs:documentation>Automatically computed copyrights status</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:compute="true" name="rightsExpiration" type="xs:dateTime">
          <xs:annotation>
            <xs:documentation>Automatically computed copyrights expiration date/time. It is the minimum of the expiration date/times of all the copy-rights associated with this object. Empty if there are no copyrights or none has an expiration. </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="gn4:archiveObjectExtra" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="crops">
    <xs:complexType id="type605" gs:key="containerRef" gs:descName="@name">
      <xs:annotation>
        <xs:documentation>List of croppping sagomas of images - used to publish collections of cropped photos</xs:documentation>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions to this object</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>The description to display</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="folderObject" minOccurs="0" name="containerRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The reference to the container object (article, mediaGallery...)</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:access="Content" name="data">
              <xs:complexType>
                <xs:annotation>
                  <xs:documentation>List of binaries</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                  <xs:element gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element gs:refer="extractDest" minOccurs="0" name="extractRef" nillable="true" type="gn4:reference">
                          <xs:annotation>
                            <xs:documentation>The extraction/cropping destination</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element gs:refer="user" minOccurs="0" name="userRef" nillable="true" type="gn4:reference">
                          <xs:annotation>
                            <xs:documentation>The user that extracted/cropped the image</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element minOccurs="0" name="name" nillable="true">
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation>Name assigned to the extracted/cropped image</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:maxLength value="80" />
                              <xs:whiteSpace value="collapse" />
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:element>
                        <xs:element minOccurs="0" name="description" nillable="true" type="gn4:tDescription">
                          <xs:annotation>
                            <xs:documentation>Description of the extracted/cropped image</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element gs:refer="variantType" minOccurs="0" name="variantTypeRef" nillable="true" type="gn4:reference">
                          <xs:annotation>
                            <xs:documentation>The type of this crop variant.</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                      </xs:sequence>
                      <xs:attribute default="0" name="sourceId" type="xs:int" use="optional">
                        <xs:annotation>
                          <xs:documentation>
                            The id of the picture from which this crop has been generated.
                            It is not a reference, so it is possible delete the source object without having to un-reference this item.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="time" type="xs:dateTime" use="optional">
                        <xs:annotation>
                          <xs:documentation>When the extraction/cropping was executed</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="0" name="rotation" type="xs:short" use="optional">
                        <xs:annotation>
                          <xs:documentation>Rotation of the extracted/cropped image in tenth of degrees counterclockwise</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="-1" name="x1" type="xs:int" use="optional">
                        <xs:annotation>
                          <xs:documentation>Crop rectangle top left X. -1 if the image has not been cropped</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="-1" name="y1" type="xs:int" use="optional">
                        <xs:annotation>
                          <xs:documentation>Crop rectangle top left Y. -1 if the image has not been cropped</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="-1" name="x2" type="xs:int" use="optional">
                        <xs:annotation>
                          <xs:documentation>Crop rectangle bottom right X. -1 if the image has not been cropped</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="-1" name="y2" type="xs:int" use="optional">
                        <xs:annotation>
                          <xs:documentation>Crop rectangle bottom right Y. -1 if the image has not been cropped</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="false" name="flip" type="xs:boolean" use="optional">
                        <xs:annotation>
                          <xs:documentation>True if the image has been flipped</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="1000" name="scale" type="xs:int" use="optional">
                        <xs:annotation>
                          <xs:documentation>Extracted/cropped image scaling in per-thousandths (1000 = original scale)</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:group name="archiveObjects">
    <xs:annotation>
      <xs:documentation>List of the archive non-abstract object types - to be used inside the 'objects' complex type declaration</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:source" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:archive" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:copyright" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:xmlMode" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:xmlFormat" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:extractDest" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:docType" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:publication" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:media" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:zone" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:section" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:book" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:editionNumber" />
    </xs:sequence>
  </xs:group>
  <xs:complexType name="SpotColorInfo">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="spot" type="gn4:ColorDescExt" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ColorDescExt">
    <xs:annotation>
      <xs:documentation>Extension of colordesc contains also native RGB information (if exists, from imported document)</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:ColorDesc">
        <xs:attribute default="0" name="r" type="xs:unsignedShort">
          <xs:annotation>
            <xs:documentation>Red value (0-255)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="g" type="xs:unsignedShort">
          <xs:annotation>
            <xs:documentation>Green value (0-255)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="b" type="xs:unsignedShort">
          <xs:annotation>
            <xs:documentation>Blue value (0-255)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="true" name="isCmyk" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>true if it is a cmyk color</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ColorDesc">
    <xs:annotation>
      <xs:documentation>A single color description</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="over" type="xs:string">
        <xs:annotation>
          <xs:documentation>Colors to oveprint on rendered as a string for serialization</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="hole" type="xs:string">
        <xs:annotation>
          <xs:documentation>Colors to trap on rendered as a string for serialization</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string">
      <xs:annotation>
        <xs:documentation>The color name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="code" type="xs:unsignedShort" use="required">
      <xs:annotation>
        <xs:documentation>Unique color code</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="c" type="xs:unsignedByte" use="required">
      <xs:annotation>
        <xs:documentation>Cyan percentage</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="m" type="xs:unsignedByte" use="required">
      <xs:annotation>
        <xs:documentation>Magenta percentage</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="y" type="xs:unsignedByte" use="required">
      <xs:annotation>
        <xs:documentation>Yellow percentage</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="k" type="xs:unsignedByte" use="required">
      <xs:annotation>
        <xs:documentation>Black percentage</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="spot" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>true if it is a spot color</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="Hole" name="mode" type="gn4:OverMode">
      <xs:annotation>
        <xs:documentation>Default overprint/trap mode</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="OverMode">
    <xs:annotation>
      <xs:documentation>Overprint/trap mode for a color</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Over">
        <xs:annotation>
          <xs:documentation>Overprint</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Hole">
        <xs:annotation>
          <xs:documentation>Trap</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="CharMeasures">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="c" type="gn4:CharWidth" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CharWidth">
    <xs:annotation>
      <xs:documentation>Character widths description</xs:documentation>
    </xs:annotation>
    <xs:attribute name="c" type="xs:string">
      <xs:annotation>
        <xs:documentation>The character code as a string for XML serialization</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="w" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>The character width in 1/1000 of the point size</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="h" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>The character height above the baseline - in 1/1000 of the 
            point size</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="d" type="xs:short">
      <xs:annotation>
        <xs:documentation>The character depth below the baseline - in 1/1000 of the 
            point size</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="uH" type="xs:short" />
    <xs:attribute default="0" name="oH" type="xs:short" />
  </xs:complexType>
  <xs:complexType name="Kerning">
    <xs:annotation>
      <xs:documentation>Complete kerning table of a font</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="pair" type="gn4:PairDesc">
        <xs:annotation>
          <xs:documentation>The kerning pairs</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PairDesc">
    <xs:annotation>
      <xs:documentation>Kerning pair description</xs:documentation>
    </xs:annotation>
    <xs:attribute name="c1" type="xs:string">
      <xs:annotation>
        <xs:documentation>First character code as a string for XML serialization</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="c2" type="xs:string">
      <xs:annotation>
        <xs:documentation>Second character code as a string for XML serialization</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="v" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>Kerning values in 1/1000 of the point size</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="LayoutChars">
    <xs:annotation>
      <xs:documentation>Characters of a font layout</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="c" type="gn4:LayoutChar">
        <xs:annotation>
          <xs:documentation>Layout characters</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LayoutChar">
    <xs:annotation>
      <xs:documentation>Description of an individual character in a font layout</xs:documentation>
    </xs:annotation>
    <xs:attribute name="c" type="xs:string">
      <xs:annotation>
        <xs:documentation>The character code as a string for XML serialization</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="gn4:CharType" use="required">
      <xs:annotation>
        <xs:documentation>The type of the character</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="des" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>true if the character has descenders</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string">
      <xs:annotation>
        <xs:documentation>Optional character PostScript name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml" type="xs:string">
      <xs:annotation>
        <xs:documentation>Optional string to be used when generating HTML or XML</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="CharType">
    <xs:annotation>
      <xs:documentation>Possible character types</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="-">
        <xs:annotation>
          <xs:documentation>Not defined character</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="u">
        <xs:annotation>
          <xs:documentation>Upper case</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="l">
        <xs:annotation>
          <xs:documentation>Lower case</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="a">
        <xs:annotation>
          <xs:documentation>Accent above</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ad">
        <xs:annotation>
          <xs:documentation>Accent below</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Colors">
    <xs:annotation>
      <xs:documentation>Complete color table</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="color" type="gn4:ColorDesc">
        <xs:annotation>
          <xs:documentation>The individual color descriptions</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="profile" type="xs:string">
      <xs:annotation>
        <xs:documentation>Name of the ICC profile associated with the (CMYK) colors</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="ignoreSpot" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Ignore spot colors in EPS pictures</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="ignoreSpotWarn" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Ignore spot selected warning</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="Dashes">
    <xs:annotation>
      <xs:documentation>Complete set of dashing definitions</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="dash" type="gn4:DashDesc">
        <xs:annotation>
          <xs:documentation>The individual dashing descriptions</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DashDesc">
    <xs:annotation>
      <xs:documentation>Complete description of a dashing style</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="rule" type="gn4:RuleDesc">
        <xs:annotation>
          <xs:documentation>The rules composing the dashing definition</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Unique numeric id identifying the dashing style internally</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string">
      <xs:annotation>
        <xs:documentation>'Human readable' name of the dashing - used in the user interface
            when selecting a dashing style</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="RuleDesc">
    <xs:annotation>
      <xs:documentation>Complete description of a single rule composing a deshing description</xs:documentation>
    </xs:annotation>
    <xs:attribute default="Butt" name="endCap" type="gn4:RuleCap">
      <xs:annotation>
        <xs:documentation>The end line style</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="offset" type="xs:short">
      <xs:annotation>
        <xs:documentation>Initial offset for the dashing steps</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="steps" type="xs:string">
      <xs:annotation>
        <xs:documentation>The dashing steps as a string for XML serialization</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="1" name="weight" type="xs:short">
      <xs:annotation>
        <xs:documentation>Weight (i.e. thickness) of the rule</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="space" type="xs:short">
      <xs:annotation>
        <xs:documentation>Distance between this rule and the next one in a 
            multi-rule dashing description</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="RuleCap">
    <xs:annotation>
      <xs:documentation>Possible end line styles for the rules composing a dashing 
            description</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Butt">
        <xs:annotation>
          <xs:documentation>Square non-extending ending</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Round">
        <xs:annotation>
          <xs:documentation>Rounded extending ending</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Square">
        <xs:annotation>
          <xs:documentation>Square extending ending</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="CopyFits">
    <xs:annotation>
      <xs:documentation>Complete set of copyfits definitions</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="copyFit" type="gn4:CopyFitDesc">
        <xs:annotation>
          <xs:documentation>The individual copyfit descriptions</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CopyFitDesc">
    <xs:annotation>
      <xs:documentation>Description of a single copyfit</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="stretch" type="gn4:ArrayOfStepRule">
        <xs:annotation>
          <xs:documentation>Set of stretch definitions</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="shrink" type="gn4:ArrayOfStepRule">
        <xs:annotation>
          <xs:documentation>Set of shrink definitions</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string">
      <xs:annotation>
        <xs:documentation>The copyfit name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="track" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>The variation track value</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="base" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>The variation base value</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="space" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>The variation space value</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pitch" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>The type size modification flag</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="multiDim" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>The multi-dimensional flag</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ArrayOfStepRule">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="step" nillable="true" type="gn4:StepRule" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="StepRule">
    <xs:annotation>
      <xs:documentation>Description of a single step</xs:documentation>
    </xs:annotation>
    <xs:attribute name="track" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>The track value</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="base" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>The base value</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="space" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>The space value</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="WordEstimate">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="estDataArray" type="gn4:ArrayOfWordEstData">
        <xs:annotation>
          <xs:documentation>list of estimate data</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string">
      <xs:annotation>
        <xs:documentation>format string to use to display the estimates</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ArrayOfWordEstData">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="estData" nillable="true" type="gn4:WordEstData" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WordEstData">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="pairArray" type="gn4:ArrayOfWordEstDataPair">
        <xs:annotation>
          <xs:documentation>List of Items data</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="width" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>items Width</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ArrayOfWordEstDataPair">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="pair" nillable="true" type="gn4:WordEstDataPair" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WordEstDataPair">
    <xs:attribute name="height" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>items height</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="items" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>number of items</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="NamedCmds">
    <xs:annotation>
      <xs:documentation>List of macros (i.e. styles)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="cmd" type="gn4:NamedCmdM">
        <xs:annotation>
          <xs:documentation>The macros (styles)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NamedCmdM">
    <xs:annotation>
      <xs:documentation>Macro commands description</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:NamedCmd">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="mTxt">
            <xs:annotation>
              <xs:documentation>Replacement text = definition of the macro, style etc.</xs:documentation>
            </xs:annotation>
            <xs:complexType mixed="true">
              <xs:sequence>
                <xs:any maxOccurs="unbounded" />
              </xs:sequence>
              <xs:anyAttribute />
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="xmlTxt">
            <xs:annotation>
              <xs:documentation>XML replacement text</xs:documentation>
            </xs:annotation>
            <xs:complexType mixed="true">
              <xs:sequence>
                <xs:any maxOccurs="unbounded" />
              </xs:sequence>
              <xs:anyAttribute />
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="desc" type="xs:string">
          <xs:annotation>
            <xs:documentation>Descrizione della macro (o stile etc.)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="Macro" name="cmdType" type="gn4:NamedCmdMType">
          <xs:annotation>
            <xs:documentation>Tipo: macro, stile di paragrafo, stile del testo.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="nextSt" type="xs:string">
          <xs:annotation>
            <xs:documentation>Nome dello stile del prossimo paragrafo (only for paragraph 
            styles)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="paraFit" type="xs:string">
          <xs:annotation>
            <xs:documentation>Paragraph stretch/shrink parameters (only for paragraph 
            styles)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="minLines" type="xs:short">
          <xs:annotation>
            <xs:documentation>Minimum number of lines. 0 = no minimum (only for paragraph 
            styles)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="maxLines" type="xs:short">
          <xs:annotation>
            <xs:documentation>Maximum number of lines. 0 = no maximum (only for paragraph 
            styles)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="false" name="fillPara" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>True if the paragraph last line should be filled (only for 
            paragraph styles)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="true" name="promptNew" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>True if the parameteres dialog should be opened when the  
            paragraph style is inserted (only for paragraph styles)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NamedCmd" abstract="true">
    <xs:annotation>
      <xs:documentation>Base class for typographical commands and macro</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="par" type="gn4:ParDesc">
        <xs:annotation>
          <xs:documentation>Command parameter descriptions</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string">
      <xs:annotation>
        <xs:documentation>Command name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ParDesc">
    <xs:annotation>
      <xs:documentation>Macro or typographical command parameter description</xs:documentation>
    </xs:annotation>
    <xs:attribute name="desc" type="xs:string">
      <xs:annotation>
        <xs:documentation>Description of the parameter</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="gn4:ParType" use="required">
      <xs:annotation>
        <xs:documentation>Parameter's type</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="def" type="xs:string">
      <xs:annotation>
        <xs:documentation>Default value. Always stored as a string, actual type depends 
            on m_Type</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="-2147483648" name="min" type="xs:int">
      <xs:annotation>
        <xs:documentation>Minimum value</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="2147483647" name="max" type="xs:int">
      <xs:annotation>
        <xs:documentation>Maximum value or length</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="s" type="xs:short">
      <xs:annotation>
        <xs:documentation>Parameter's sub type</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="ParType">
    <xs:annotation>
      <xs:documentation>Possible marco or typographical command parameter types</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="None">
        <xs:annotation>
          <xs:documentation>undefined</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Int">
        <xs:annotation>
          <xs:documentation>integer</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Mis">
        <xs:annotation>
          <xs:documentation>measure</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="String">
        <xs:annotation>
          <xs:documentation>string</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Color">
        <xs:annotation>
          <xs:documentation>color (as a color code)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Tint">
        <xs:annotation>
          <xs:documentation>gray percentage (from 0 to 100)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Font">
        <xs:annotation>
          <xs:documentation>font code</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Flag">
        <xs:annotation>
          <xs:documentation>flag true or false</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Hyp">
        <xs:annotation>
          <xs:documentation>hyphenation</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="App">
        <xs:annotation>
          <xs:documentation>quad left, center, right or justified</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NamedCmdMType">
    <xs:annotation>
      <xs:documentation>Macro commands types</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Macro">
        <xs:annotation>
          <xs:documentation>A general-purpose macro - i.e. 'hidden style'</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ParStyle">
        <xs:annotation>
          <xs:documentation>Paragraph style</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TextStyle">
        <xs:annotation>
          <xs:documentation>Text style</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ContextStatus">
    <xs:annotation>
      <xs:documentation>Complete justification context typographical status</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="ets" type="gn4:ExtTextStatus">
        <xs:annotation>
          <xs:documentation>Default text typographical status</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="ps" type="gn4:ExtParaStatus">
        <xs:annotation>
          <xs:documentation>Default paragraph typographical status</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="justPars" type="gn4:JustPars">
        <xs:annotation>
          <xs:documentation>Global justification parameters</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ExtTextStatus">
    <xs:annotation>
      <xs:documentation>Typographical status of text to be justified</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:TextStatus">
        <xs:attribute name="kerning" type="xs:int" use="required" />
        <xs:attribute name="hyp" type="xs:string" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TextStatus">
    <xs:annotation>
      <xs:documentation>Typographical status of justified text</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:MaterialStatus">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="supColor" type="gn4:ColorVar" />
        </xs:sequence>
        <xs:attribute name="flags" type="xs:unsignedShort" use="required" />
        <xs:attribute name="fontCode" type="xs:short" use="required" />
        <xs:attribute name="slant" type="xs:short" use="required" />
        <xs:attribute name="charH" type="xs:int" use="required" />
        <xs:attribute name="charW" type="xs:int" use="required" />
        <xs:attribute name="shEnlarge" type="xs:short" use="required" />
        <xs:attribute name="shX" type="xs:short" use="required" />
        <xs:attribute name="shY" type="xs:short" use="required" />
        <xs:attribute name="httpLink" type="xs:string" />
        <xs:attribute name="charOutline" type="xs:int" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MaterialStatus">
    <xs:annotation>
      <xs:documentation>Typographical status of material: text, rules</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="color" type="gn4:ColorVar" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="underDescs" type="gn4:UnderDesc" />
    </xs:sequence>
    <xs:attribute name="mode" type="gn4:MSMode" use="required" />
    <xs:attribute name="modeData" type="xs:int" use="required" />
    <xs:attribute name="YOfs" type="xs:int" use="required" />
  </xs:complexType>
  <xs:simpleType name="MSMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None">
        <xs:annotation>
          <xs:documentation>No special mode = standard text</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Rem" />
      <xs:enumeration value="Region">
        <xs:annotation>
          <xs:documentation>Text specific to a certain region - m_ModeData contains the region id</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NotRegion">
        <xs:annotation>
          <xs:documentation>Text not for a certain region - m_ModeData contains the region id</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Insert">
        <xs:annotation>
          <xs:documentation>Text inserted in edit-check mode - m_ModeData contains the text version number</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Delete">
        <xs:annotation>
          <xs:documentation>Text deleted in edit-check mode - m_ModeData contains the text version number</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="First" />
      <xs:enumeration value="Last" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ColorVar">
    <xs:annotation>
      <xs:documentation>Color variables</xs:documentation>
    </xs:annotation>
    <xs:attribute name="isCode" type="xs:boolean" use="required" />
    <xs:attribute name="cmyk" type="xs:unsignedInt" use="required" />
    <xs:attribute name="code" type="xs:unsignedShort" use="required" />
    <xs:attribute name="gray" type="xs:unsignedByte" use="required" />
  </xs:complexType>
  <xs:complexType name="UnderDesc">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="uColor" type="gn4:ColorVar" />
    </xs:sequence>
    <xs:attribute name="uY" type="xs:int" use="required" />
    <xs:attribute name="uH" type="xs:int" use="required" />
    <xs:attribute name="uFlags" type="xs:unsignedShort" use="required" />
    <xs:attribute name="dashName" type="xs:string" />
  </xs:complexType>
  <xs:complexType name="ExtParaStatus">
    <xs:annotation>
      <xs:documentation>Extended paragraph typographical status (with abs rules)</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:ParaStatus" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ParaStatus">
    <xs:annotation>
      <xs:documentation>Paragraph typographical status</xs:documentation>
    </xs:annotation>
    <xs:attribute name="hyp" type="xs:boolean" use="required" />
    <xs:attribute name="app" type="xs:short" use="required" />
    <xs:attribute name="lastApp" type="xs:short" use="required" />
    <xs:attribute name="useLastApp" type="xs:boolean" use="required" />
    <xs:attribute name="standardIndent" type="xs:int" use="required" />
    <xs:attribute name="nStandardIndent" type="xs:short" use="required" />
    <xs:attribute name="leftIndent" type="xs:int" use="required" />
    <xs:attribute name="nLeftIndent" type="xs:short" use="required" />
    <xs:attribute name="rightIndent" type="xs:int" use="required" />
    <xs:attribute name="nRightIndent" type="xs:short" use="required" />
    <xs:attribute name="leading" type="xs:int" use="required" />
    <xs:attribute name="leadingPerc" type="xs:int" use="required" />
    <xs:attribute name="spaceBefore" type="xs:int" use="required" />
    <xs:attribute name="spaceAfter" type="xs:int" use="required" />
    <xs:attribute name="areaBreak" type="xs:boolean" use="required" />
    <xs:attribute name="leadingCol" type="xs:int" use="required" />
    <xs:attribute name="leadingColOn" type="xs:boolean" use="required" />
    <xs:attribute name="lineWidth" type="xs:int" use="required" />
    <xs:attribute name="topVAdd" type="xs:unsignedShort" use="required" />
    <xs:attribute name="topVSub" type="xs:unsignedShort" use="required" />
    <xs:attribute name="vAdd" type="xs:unsignedShort" use="required" />
    <xs:attribute name="vSub" type="xs:unsignedShort" use="required" />
    <xs:attribute name="keepTop" type="xs:short" use="required" />
    <xs:attribute name="keepBot" type="xs:short" use="required" />
    <xs:attribute name="keepNext" type="xs:boolean" use="required" />
    <xs:attribute name="spaceW" type="xs:short" use="required" />
    <xs:attribute name="minSpaceW" type="xs:short" use="required" />
    <xs:attribute name="maxSpaceW" type="xs:short" use="required" />
    <xs:attribute name="gridH" type="xs:int" use="required" />
    <xs:attribute name="gridOfs" type="xs:int" use="required" />
  </xs:complexType>
  <xs:complexType name="JustPars">
    <xs:annotation>
      <xs:documentation>Global justification parameters</xs:documentation>
    </xs:annotation>
    <xs:attribute default="" name="breakChars" type="xs:string">
      <xs:annotation>
        <xs:documentation>Breakable characters</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="2" name="hLen" type="xs:short">
      <xs:annotation>
        <xs:documentation>Minimum number of characters before an hyphenation</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="2" name="tLen" type="xs:short">
      <xs:annotation>
        <xs:documentation>Minimum number of characters after an hyphenation</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="4" name="minLen" type="xs:short">
      <xs:annotation>
        <xs:documentation>Lunghezza minima delle parole divisibili.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="letterSpacing" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Abilita l'uso del lettera spacing.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="32767" name="nHyphens" type="xs:short">
      <xs:annotation>
        <xs:documentation>Numero massimo di divisioni consecutive.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="Compat" name="spacing" type="gn4:SpaceOption">
      <xs:annotation>
        <xs:documentation>Kind of line spacing wanted</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="true" name="autoSmall" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Automatic switch-off of small cap at font/point size change</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="true" name="useCharCmd" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Consider the lines containing only 'character commands' (e.g. 
            font changes) as non-empty - compatibility with the old justification</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="Yes" name="overfull" type="gn4:OverOption">
      <xs:annotation>
        <xs:documentation>Overfull lines handling</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SpaceOption">
    <xs:annotation>
      <xs:documentation>Spacing options</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Tight">
        <xs:annotation>
          <xs:documentation>Minimum possible space width</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Loose">
        <xs:annotation>
          <xs:documentation>Maximum possible space width</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Optimal">
        <xs:annotation>
          <xs:documentation>Optimal space width</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Compat">
        <xs:annotation>
          <xs:documentation>Compatibilty with old 16 bit justification, i.e. optimal space 
            except for hyphenations - that are loose.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="First">
        <xs:annotation>
          <xs:documentation>First valid option</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Last">
        <xs:annotation>
          <xs:documentation>Last valid option</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="OverOption">
    <xs:annotation>
      <xs:documentation>Overfull handling options</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Yes">
        <xs:annotation>
          <xs:documentation>Allow overfull lines</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Shape">
        <xs:annotation>
          <xs:documentation>Avoid overfull lines 'skipping' to the next line when 
            justifying in a shaped area</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="No">
        <xs:annotation>
          <xs:documentation>Avoid always overfull lines 'skipping' to the next line when 
            justifying in a shaped area</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="First">
        <xs:annotation>
          <xs:documentation>First valid option</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Last">
        <xs:annotation>
          <xs:documentation>Last valid option</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="LayerContent">
    <xs:annotation>
      <xs:documentation>Content of a layer: boxes, frames, rules, guides etc.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="hRif" type="gn4:Rif">
        <xs:annotation>
          <xs:documentation>Horizontal guides</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="vRif" type="gn4:Rif">
        <xs:annotation>
          <xs:documentation>Vertical guides</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="e" type="gn4:ElementDesc">
        <xs:annotation>
          <xs:documentation>Layer elements</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Rif" mixed="true">
    <xs:annotation>
      <xs:documentation>Horizontal or vertical guides on a layer</xs:documentation>
    </xs:annotation>
    <xs:attribute name="grid" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Grid interval (0 = no grid)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ElementDesc" abstract="true">
    <xs:annotation>
      <xs:documentation>Base class for descriptions of any element within a layer</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="Tool" type="gn4:Tool">
        <xs:annotation>
          <xs:documentation>The tool parameters</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="FX" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Horizontal position of the element bounding box</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="FY" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Vertical position of the element bounding box</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="FW" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Width of the element bounding box</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="FH" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Height of the element bounding box</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="a" type="xs:short">
      <xs:annotation>
        <xs:documentation>Rotation of the element</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="HSX" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Horizontal position of the Hot-Spot</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="HSY" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Vertical position of the Hot-Spot</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="true" name="prn" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Printable object flag</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="Group" type="xs:int">
      <xs:annotation>
        <xs:documentation>Group</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="" name="GroupLib" type="xs:string">
      <xs:annotation>
        <xs:documentation>Library Group</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="lockLevel" type="xs:short">
      <xs:annotation>
        <xs:documentation>Lock level: only user with a lock level greater or equal can modify this element</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="FrameDesc">
    <xs:annotation>
      <xs:documentation>Description of a frame (a text area) within a layer</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:BoxDesc">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="Gfx" type="gn4:GfxFrame">
            <xs:annotation>
              <xs:documentation>Graphics text frame information</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute default="false" name="isLocal" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>true if this frame contains local text</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="txtLI" type="xs:int" use="required">
          <xs:annotation>
            <xs:documentation>Local identifier of the text linked to this frame - it must 
            match the 'li' value associated with one of the text geometries 
            referencing the layer (if IsLocal is false) or with one of the local 
            texts of the layers (if IsLocal is true). 0 if there is no text in this frame.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="seqN" type="xs:int" use="required">
          <xs:annotation>
            <xs:documentation>Layer seq number (upper 8 bits) and frame seq number (lower 8 bits)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="textH" type="xs:int" use="required">
          <xs:annotation>
            <xs:documentation>Height of the justified text linked to the frame</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="prevPageNum" type="xs:int">
          <xs:annotation>
            <xs:documentation>Number of the previous page special-linked to this frame</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="nextPageNum" type="xs:int">
          <xs:annotation>
            <xs:documentation>Number of the next page special-linked to this frame</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="specialTxtLI" type="xs:int">
          <xs:annotation>
            <xs:documentation>Local identifier of the text special linked to this frame</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="false" name="TextInside" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>
            Gets or sets a value indicating whether [text inside border].
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="TextOffset" type="xs:int">
          <xs:annotation>
            <xs:documentation>
            Gets or sets the text offset from the border.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="TopAdd" type="xs:int">
          <xs:annotation>
            <xs:documentation>
            Gets or sets the top vertical alignment for text.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="BotAdd" type="xs:int">
          <xs:annotation>
            <xs:documentation>
            Gets or sets the bottom vertical alignment for text.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="TypeId" type="xs:long">
          <xs:annotation>
            <xs:documentation>Gets or sets the TypeId for text. No longer used - still in the code for backward compatibility.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Type" type="xs:string">
          <xs:annotation>
            <xs:documentation>Gets or sets the Type name for text.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="objLockLevel" type="xs:short">
          <xs:annotation>
            <xs:documentation>Lock level of the associated text: if greater than 0 the text cannot be modified 
            (and it can be un-locked only by user with a greater or equal lock level)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BoxDesc" abstract="true">
    <xs:annotation>
      <xs:documentation>Base class for box and frame descriptions</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:ClosedSagomaDesc">
        <xs:attribute default="0" name="rx" type="xs:int">
          <xs:annotation>
            <xs:documentation>Rounded corners horizontal radius</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="ry" type="xs:int">
          <xs:annotation>
            <xs:documentation>Rounded corners vertical radius</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ClosedSagomaDesc" abstract="true">
    <xs:annotation>
      <xs:documentation>Base class for all the closed elements (boxes, circles, etc.)</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:SagomaDesc">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="Fill" type="gn4:Fill" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SagomaDesc" abstract="true">
    <xs:annotation>
      <xs:documentation>Base class for descriptions of layer elements with multiple polygon 
            shapes</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:ElementDesc">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="Rule" type="gn4:Rule" />
          <xs:element minOccurs="0" maxOccurs="1" name="Shp" type="gn4:Shape" />
          <xs:element minOccurs="0" maxOccurs="1" name="ShpOrig" type="gn4:Shape" />
          <xs:element minOccurs="0" maxOccurs="1" name="ShpInit" type="gn4:Shape" />
          <xs:element minOccurs="0" maxOccurs="1" name="DynEng" type="gn4:DynamicEngrave" />
          <xs:element minOccurs="0" maxOccurs="1" name="Opa" type="gn4:OpacityInfo" />
          <xs:element minOccurs="0" maxOccurs="1" name="Sha" type="gn4:ShadowInfo" />
        </xs:sequence>
        <xs:attribute default="0" name="OrigCropShapeX" type="xs:int">
          <xs:annotation>
            <xs:documentation>Horizontal position of the original elemnt shape</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="OrigCropShapeY" type="xs:int">
          <xs:annotation>
            <xs:documentation>Vertical position of the original elemnt shape</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="-1" name="ExclFrom" type="xs:int" />
        <xs:attribute default="-1" name="ExclTo" type="xs:int" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Rule">
    <xs:annotation>
      <xs:documentation>Rule data</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="C" type="gn4:ColorVar" />
    </xs:sequence>
    <xs:attribute name="W" type="xs:int" use="required" />
    <xs:attribute name="D" type="xs:short" use="required" />
    <xs:attribute name="P" type="xs:short" use="required" />
  </xs:complexType>
  <xs:complexType name="Shape" mixed="true">
    <xs:annotation>
      <xs:documentation>Shape of an object</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="DynamicEngrave">
    <xs:annotation>
      <xs:documentation>Dynamic engrave data</xs:documentation>
    </xs:annotation>
    <xs:attribute name="M" type="xs:short" use="required" />
    <xs:attribute name="S" type="xs:short" use="required" />
    <xs:attribute name="L" type="xs:int" use="required" />
    <xs:attribute name="T" type="xs:int" use="required" />
    <xs:attribute name="R" type="xs:int" use="required" />
    <xs:attribute name="B" type="xs:int" use="required" />
  </xs:complexType>
  <xs:complexType name="OpacityInfo">
    <xs:annotation>
      <xs:documentation>Transparency data</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Mode" type="xs:short" use="required" />
    <xs:attribute name="Alpha" type="xs:short" use="required" />
    <xs:attribute name="Opt" type="xs:short" use="required" />
    <xs:attribute name="GrdS" type="xs:short" use="required" />
    <xs:attribute name="GrdE" type="xs:short" use="required" />
    <xs:attribute name="GrdX" type="xs:short" use="required" />
    <xs:attribute name="GrdY" type="xs:short" use="required" />
    <xs:attribute name="GrdA" type="xs:short" use="required" />
    <xs:attribute name="GrdD" type="xs:short" use="required" />
    <xs:attribute name="GrdR" type="xs:boolean" use="required" />
    <xs:attribute name="GrdRadius" type="xs:short" use="required" />
    <xs:attribute name="GrdAR" type="xs:double" use="required" />
  </xs:complexType>
  <xs:complexType name="ShadowInfo">
    <xs:annotation>
      <xs:documentation>Shadow data</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="Opa" type="gn4:OpacityInfo" />
      <xs:element minOccurs="0" maxOccurs="1" name="C" type="gn4:ColorVar" />
      <xs:element minOccurs="0" maxOccurs="1" name="CTo" type="gn4:ColorVar" />
    </xs:sequence>
    <xs:attribute name="OX" type="xs:int" use="required" />
    <xs:attribute name="OY" type="xs:int" use="required" />
    <xs:attribute name="Blur" type="xs:int" use="required" />
    <xs:attribute name="Sprd" type="xs:short" use="required" />
    <xs:attribute name="ShAlpha" type="xs:short" use="required" />
  </xs:complexType>
  <xs:complexType name="Fill">
    <xs:annotation>
      <xs:documentation>Fill data</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="C" type="gn4:ColorVar" />
      <xs:element minOccurs="0" maxOccurs="1" name="CTo" type="gn4:ColorVar" />
    </xs:sequence>
    <xs:attribute name="SK" type="xs:int" use="required" />
    <xs:attribute name="SA" type="xs:int" use="required" />
    <xs:attribute name="SS" type="xs:short" use="required" />
    <xs:attribute name="FW" type="xs:int" use="required" />
  </xs:complexType>
  <xs:complexType name="GfxFrame">
    <xs:annotation>
      <xs:documentation>Graphics frame data</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="Rule" type="gn4:Rule" />
      <xs:element minOccurs="0" maxOccurs="1" name="Fill" type="gn4:Fill" />
      <xs:element minOccurs="0" maxOccurs="1" name="Opa" type="gn4:OpacityInfo" />
      <xs:element minOccurs="0" maxOccurs="1" name="Sha" type="gn4:ShadowInfo" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NoteDesc">
    <xs:annotation>
      <xs:documentation>Description of a frame (a text area) within a layer</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:FrameDesc" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BRuleDesc">
    <xs:annotation>
      <xs:documentation>Class for box descriptions</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:BoxDesc" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ElliDesc">
    <xs:annotation>
      <xs:documentation>Class for ellipses descriptions</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:ClosedSagomaDesc" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SegmentDesc">
    <xs:annotation>
      <xs:documentation>Class for segment descriptions</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:SagomaDesc">
        <xs:attribute default="0" name="es" type="xs:unsignedShort">
          <xs:annotation>
            <xs:documentation>Ends start ID</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="ef" type="xs:unsignedShort">
          <xs:annotation>
            <xs:documentation>Ends finish ID</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BitmapDesc">
    <xs:annotation>
      <xs:documentation>Description of an image within a layer</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:SagomaDesc">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="CopyShp" type="gn4:Shape">
            <xs:annotation>
              <xs:documentation>Saved shape (when the user toggle the shape path)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute default="" name="lastMod" type="xs:string">
          <xs:annotation>
            <xs:documentation>Last modified date of image in this element.
            Used to check for image update on page open.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="colCorrect" type="xs:string" />
        <xs:attribute default="false" name="glEna" type="xs:boolean" />
        <xs:attribute default="0" name="glBlr" type="xs:int" />
        <xs:attribute default="0" name="glSpr" type="xs:int" />
        <xs:attribute default="0" name="glOp1" type="xs:int" />
        <xs:attribute default="0" name="glOp2" type="xs:int" />
        <xs:attribute default="0" name="glCoC" type="xs:int" />
        <xs:attribute default="0" name="glCoG" type="xs:int" />
        <xs:attribute name="imgLI" type="xs:int" use="required">
          <xs:annotation>
            <xs:documentation>Local identifier of the image used by this element - it must 
            match the 'li' value associated with one of the images listed in the 
            'imgs' attribute of the layer</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="e" type="xs:int" use="required">
          <xs:annotation>
            <xs:documentation>Bitmap effects
             effNone        = 0,
             effWhitePrints = 0x01,
             effFlipX       = 0x02,
             effFlipY       = 0x04,
             effSrcCopy     = 0x08,
             effToGray      = 0x10,
             effUseAlpha    = 0x20,
             effDontClip    = 0x4000
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="ba" type="xs:short">
          <xs:annotation>
            <xs:documentation>Rotation of the bitmap</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="CX" type="xs:int" use="required">
          <xs:annotation>
            <xs:documentation>Crop X</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="CY" type="xs:int" use="required">
          <xs:annotation>
            <xs:documentation>Crop Y</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="CW" type="xs:int" use="required">
          <xs:annotation>
            <xs:documentation>Crop W</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="CH" type="xs:int" use="required">
          <xs:annotation>
            <xs:documentation>Crop H</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="ImgW" type="xs:int">
          <xs:annotation>
            <xs:documentation>The width of the image in millipoints</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="ImgH" type="xs:int">
          <xs:annotation>
            <xs:documentation>The height of the image in millipoints</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="ImgPixW" type="xs:int">
          <xs:annotation>
            <xs:documentation>The pixel width of the image</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="ImgPixH" type="xs:int">
          <xs:annotation>
            <xs:documentation>The pixel height of the image</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="false" name="WasDummy" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>True if the image was a dummy last time it has been loaded; false otherwise.
            Used to keep the crop only if the image wasn't a dummy at page opening.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="CopyCoords" type="xs:string">
          <xs:annotation>
            <xs:documentation>Saved shape coordiantes (this is the order: CX CY CW CH X Y)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Col" type="xs:unsignedShort" use="required">
          <xs:annotation>
            <xs:documentation>Mono image color</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="TypeId" type="xs:long">
          <xs:annotation>
            <xs:documentation>Gets or sets the TypeId for the image. No longer used - still in the code for backward compatibility.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Type" type="xs:string">
          <xs:annotation>
            <xs:documentation>Gets or sets the Type name for the image.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="objLockLevel" type="xs:short">
          <xs:annotation>
            <xs:documentation>Lock level of the associated image: if greater than 0 the image cannot 
            be modified (and it can be un-locked only by user with a greater or equal lock level)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Tool">
    <xs:annotation>
      <xs:documentation>Tool data</xs:documentation>
    </xs:annotation>
    <xs:attribute default="0" name="ModeHor" type="xs:int">
      <xs:annotation>
        <xs:documentation>Mode to be used to scale horizontally a shape</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="ModeVert" type="xs:int">
      <xs:annotation>
        <xs:documentation>Mode to be used to scale vertically a shape</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="XPar" type="xs:short">
      <xs:annotation>
        <xs:documentation>Handling of the four coordinates, constants toXXXXX</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="YPar" type="xs:short">
      <xs:annotation>
        <xs:documentation>Handling of the four coordinates, constants toXXXXX</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="WPar" type="xs:short">
      <xs:annotation>
        <xs:documentation>Handling of the four coordinates, constants toXXXXX</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="HPar" type="xs:short">
      <xs:annotation>
        <xs:documentation>Handling of the four coordinates, constants toXXXXX</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="Flags" type="xs:long">
      <xs:annotation>
        <xs:documentation>Bit-set with various flags, constants tfXXXXX </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="ContextId" type="xs:int">
      <xs:annotation>
        <xs:documentation>Justification context to assign to the created text</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="0" name="TypeId" type="xs:int">
      <xs:annotation>
        <xs:documentation>Type to assign to the text or image created by this element</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="" name="ArtName" type="xs:string">
      <xs:annotation>
        <xs:documentation>Pattern for new article name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="LocalGeometry">
    <xs:annotation>
      <xs:documentation>Complete description of the local geometry of a text - i.e. a 
            geometry associated directly with a text instead than coming from layers.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="a" type="gn4:AreaDesc">
        <xs:annotation>
          <xs:documentation>Areas composing the text geometry</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="imageGeo" type="gn4:ImageGeometry">
        <xs:annotation>
          <xs:documentation>Local geometry of the associated picture (if any)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AreaDesc">
    <xs:annotation>
      <xs:documentation>Description of an area that is part of a text local geometry</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="verts" type="gn4:Shape">
        <xs:annotation>
          <xs:documentation>Vertexes of the shape (empty if the shape is simply a rectangle)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="inflVerts" type="gn4:Shape">
        <xs:annotation>
          <xs:documentation>Vertexes of the shape inflated by RuleWeight (optionally)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="rule" type="gn4:Rule">
        <xs:annotation>
          <xs:documentation>AreaDesc Rule data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="fill" type="gn4:Fill">
        <xs:annotation>
          <xs:documentation>AreaDesc Fill data</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="angle" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>Rotation angle - tenth of degree counterclockwise</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="textInside" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>true if area has text</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="textOffset" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>if exist, text offset</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hSX" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Horizontal position of the Hot-Spot</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hSY" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Vertical position of the Hot-Spot</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="id" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Id of the frame in ElementTable</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="x" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Horizontal position of the area</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="y" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Vertical position of the area</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="w" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Width of the area</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="h" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Height of the area</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="yOfs" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Y offset</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="topAdd" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>Vertical justification parameters at the top of the area</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="botAdd" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>Vertical justification parameters at the bottom of the area</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="seqN" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>Layer seq number</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="layerId" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Id of the layer the frame belongs to</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="objLockLevel" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>Lock level for the text flowing in this area</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="zOrder" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>Z-order in the layer</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ImageGeometry">
    <xs:annotation>
      <xs:documentation>Geometry of an image - used in the local geometry of a caption</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="shape" type="gn4:Shape">
        <xs:annotation>
          <xs:documentation>Clipping path</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="rule" type="gn4:Rule">
        <xs:annotation>
          <xs:documentation>Border</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="elementId" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Id of the geometry into the database</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="layerId" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Id of the layer holding the picture geometry</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="zOrder" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>Z-order in the layer</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="x" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Horizontal position of the picture</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="y" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Vertical position of the picture</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="w" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Width of the picture</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="h" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Height of the picture</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="cropX" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Cropping rectangle of the picture in page: coor. X </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="cropY" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Cropping rectangle of the picture in page: coor. Y</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="cropW" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Cropping rectangle of the picture in page: Width</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="cropH" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Cropping rectangle of the picture in page: height</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="angle" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>Rotation angle</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="bmAngle" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>Bitmap angle</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="color" type="xs:unsignedShort" use="required">
      <xs:annotation>
        <xs:documentation>Color to apply to the picture, valid only if the picture is a line artr</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="effects" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Special effects to apply to the picture (flipping)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="GeometryData">
    <xs:annotation>
      <xs:documentation>Extra data associated with a geometry (local or not)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="fitDesc" type="gn4:FitDesc">
        <xs:annotation>
          <xs:documentation>Combined copy fitting parameters</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="FitDesc">
    <xs:annotation>
      <xs:documentation>Combined (line and character) copy-fit parameters</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="lineFit" type="gn4:LineFit">
        <xs:annotation>
          <xs:documentation>Line copy-fit parameters</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="charFit" type="gn4:CharFit">
        <xs:annotation>
          <xs:documentation>Character copy-fit parameters</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LineFit">
    <xs:annotation>
      <xs:documentation>Line copy-fit parameters</xs:documentation>
    </xs:annotation>
    <xs:attribute name="infLevel" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Livello di infinito da allargare. 0 se niente infiniti</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pml" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>Permille di modifica delle interlinee</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Absolute base value to be used when handling infinites</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="CharFit">
    <xs:annotation>
      <xs:documentation>Character copy-fit parameters</xs:documentation>
    </xs:annotation>
    <xs:attribute name="charSpacing" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation>Additional space between characters for fitting - in thousadths 
            of the current character width</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="charW" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation> Variation of characters width - perthousandths</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="spaceW" type="xs:short" use="required">
      <xs:annotation>
        <xs:documentation> Variation of inter-word spacing - perthousandths</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="usePitch" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation> True to modify also the character height</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="VideoFont">
    <xs:annotation>
      <xs:documentation>Windows font description</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="videoFont" type="gn4:VideoFontDesc">
        <xs:annotation>
          <xs:documentation>The video font description</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="VideoFontDesc">
    <xs:annotation>
      <xs:documentation>Windows font description</xs:documentation>
    </xs:annotation>
    <xs:attribute name="family" type="xs:string">
      <xs:annotation>
        <xs:documentation>Font Family</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="size" type="xs:float" use="required">
      <xs:annotation>
        <xs:documentation>Font Size</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="bold" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>true if bold</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="italic" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>true if italic</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="TracyLayout">
    <xs:annotation>
      <xs:documentation>Production tracking layouts - list of edition/pages with associated parameters</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="Edition" type="gn4:EditionRef">
        <xs:annotation>
          <xs:documentation>List of editions reference</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="Options">
        <xs:annotation>
          <xs:documentation>Tracy Layout options</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
          <xs:sequence>
            <xs:any />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute default="0" name="NumPages" type="xs:int">
      <xs:annotation>
        <xs:documentation>Total number of pages (hint for loading progress bar)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EditionRef">
    <xs:annotation>
      <xs:documentation>Reference to an edition to track</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="Page" type="gn4:PageRef">
        <xs:annotation>
          <xs:documentation>Pages to track within the edition. If empty track ALL the pages in the edition</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Date" type="xs:dateTime" use="required">
      <xs:annotation>
        <xs:documentation>Edition date. DateTime.MinValue for edition templates</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="EditionNumberName" type="xs:string">
      <xs:annotation>
        <xs:documentation>Name of the edition's number</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Name" type="xs:string">
      <xs:annotation>
        <xs:documentation>Edition name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PageRef">
    <xs:annotation>
      <xs:documentation>Reference to a page to track</xs:documentation>
    </xs:annotation>
    <xs:attribute name="SectionName" type="xs:string">
      <xs:annotation>
        <xs:documentation>Name of the page's section.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ZoneName" type="xs:string">
      <xs:annotation>
        <xs:documentation>Name of the page's zone.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="BookName" type="xs:string">
      <xs:annotation>
        <xs:documentation>Name of the page's book.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Number" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Page number</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="LogicalPage" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Logical or physical page</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:annotation>
    <xs:documentation>Editorial-specific object types</xs:documentation>
  </xs:annotation>
  <xs:complexType name="_objectTypeEditorial">
    <xs:annotation>
      <xs:documentation>Object type editorial attributes</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:_objectTypeArchive">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="gn4:tDescription">
            <xs:annotation>
              <xs:documentation>General object type description</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute gs:dimension="time:min" default="0" name="deadlineGap" type="xs:int" use="optional">
          <xs:annotation>
            <xs:documentation>Number of minutes to add to the deadline of a container (e.g. a page) to obtain the deadline of objects of this type.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="" name="textElement" use="optional">
          <xs:annotation>
            <xs:documentation>Standard text element corresponding to the object type</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="">
                <xs:annotation>
                  <xs:documentation>No corresponding element (default)</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="para">
                <xs:annotation>
                  <xs:documentation>Paragraph</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="table">
                <xs:annotation>
                  <xs:documentation>Table</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="row">
                <xs:annotation>
                  <xs:documentation>Table row</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="cell">
                <xs:annotation>
                  <xs:documentation>Table cell</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="bell">
                <xs:annotation>
                  <xs:documentation>Isolated bell (ie not used in a multi-part paragraph style)</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="line">
                <xs:annotation>
                  <xs:documentation>Forced end line</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="text">
                <xs:annotation>
                  <xs:documentation>Text status change</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="img">
                <xs:annotation>
                  <xs:documentation>Picture</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="rule">
                <xs:annotation>
                  <xs:documentation>Rule</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute default="" name="textAttrib" use="optional">
          <xs:annotation>
            <xs:documentation>Standard text attribute corresponding to the object type</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="tableName">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="nCols">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="nRows">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="colN">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="rowN">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="f">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="fontName">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="fontFamily">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="it">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="bd">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="small">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="h">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="w">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="co">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="gray">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="jmp">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="mode">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="modeData">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="imgId">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="imgName">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="imgPath">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="imgDummy">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="imgLinkedTo">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="refRef">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="refId">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="refName">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="refMIME">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="refURL">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="refWidth">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="refHeight">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="refPixWidth">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="refPixHeight">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="refColorUsage">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="refResolution">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="refVarId">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="thumbMIME">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="thumbURL">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="thumbPixWidth">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="thumbPixHeight">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="thumbSize">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artId">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artName">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artTitleId">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artDeskId">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artWorkstateId">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artAssignedTo">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artLinkedTo">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artDeadlineAuto">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artNNoFitParas">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artNOverfullLines">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artTextH">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artOverH">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artOverN">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artNParas">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artNLines">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artNWords">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="artNChars">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="linkedPages">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="linkedEditions">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="linkedRegions">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="linkedLayers">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="assignedPages">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="assignedEditions">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="assignedRegions">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="assignedLayers">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="embeddedImages">
                <xs:annotation>
                  <xs:documentation />
                </xs:annotation>
              </xs:enumeration>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="nameptt" use="optional">
          <xs:annotation>
            <xs:documentation>Pattern used to automatically generate names for object of this type based on the name of the object they belong to</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:maxLength value="256" />
              <xs:whiteSpace value="collapse" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute default="" name="typeKind" use="optional">
          <xs:annotation>
            <xs:documentation>Broad subdivisions of the text object types</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="">
                <xs:annotation>
                  <xs:documentation>No specific kind</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="body">
                <xs:annotation>
                  <xs:documentation>Body text</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="headline">
                <xs:annotation>
                  <xs:documentation>Headline</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="extra">
                <xs:annotation>
                  <xs:documentation>Extra element type: not used in the article editing/display</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="metadata">
                <xs:annotation>
                  <xs:documentation>Metadata</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute default="" name="typeLink" use="optional">
          <xs:annotation>
            <xs:documentation>Relations between types and geometries</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="">
                <xs:annotation>
                  <xs:documentation>Link to multiple frames</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="single">
                <xs:annotation>
                  <xs:documentation>Link to only one frame</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="no">
                <xs:annotation>
                  <xs:documentation>Not linkable</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="justScope">
    <xs:annotation>
      <xs:documentation>
        Justification scope: data needed for justification and
        rendering - either direct (colors, hyphenations) or stored in other objects
        referencing the scope (styles, fonts). It does not correspond to any GN3 table.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType id="type66" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:access="Normal" minOccurs="0" name="colorProfile" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The binary data of the color profile set in the colors</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="colors" type="gn4:Colors">
              <xs:annotation>
                <xs:documentation>The color table - stored as XML</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="dashes" type="gn4:Dashes">
              <xs:annotation>
                <xs:documentation>The custom dashing definitions - stored as XML</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="copyFits" type="gn4:CopyFits">
              <xs:annotation>
                <xs:documentation>The CopyFit - stored as XML</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="wordEstimate" type="gn4:WordEstimate">
              <xs:annotation>
                <xs:documentation>The WordEstimate parameters - stored as XML</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="ends">
              <xs:annotation>
                <xs:documentation>Ends shapes</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:justScopeExtra" />
          </xs:sequence>
          <xs:attribute default="0" name="imgRefreshTolerance" type="gn4:tPercentage">
            <xs:annotation>
              <xs:documentation>Image ResizeLimit (in %) when automatically updating</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="true" name="imgRefreshIsotropic" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>When updating automatically choose if isotropic or not</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="imgRefreshSize" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>if true ResizeLimit refers to image size</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:justScopeExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="fontLayout">
    <xs:annotation>
      <xs:documentation>Font layout</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type67" gs:key="scopeRef name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="justScope" gs:access="Protected" minOccurs="1" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the justification scope this font layout belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" name="chars" type="gn4:LayoutChars">
              <xs:annotation>
                <xs:documentation>Layout characters data - stored as XML</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:fontLayoutExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:fontLayoutExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="font">
    <xs:annotation>
      <xs:documentation>Font</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type68" gs:key="scopeRef code" gs:descName="concat(@name,' (',@code,')')">
      <xs:annotation>
        <xs:appinfo>
          <gs:index attrs="scopeRef" xmlns:gs="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd" />
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="justScope" gs:access="Protected" minOccurs="1" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the justification scope this font belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="fontLayout" minOccurs="1" name="layoutRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the layout used by this font</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" name="measures" type="gn4:CharMeasures">
              <xs:annotation>
                <xs:documentation>Font characters data - stored as XML</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" name="kerning" type="gn4:Kerning">
              <xs:annotation>
                <xs:documentation>Kerning table - stored as XML</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" name="videoFont" type="gn4:VideoFont">
              <xs:annotation>
                <xs:documentation>Video font - stored as XML</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="fonts" minOccurs="0" name="fontFile" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>Font binary data</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="fonts" minOccurs="0" name="pfbFile" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>PFB binary data</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="postscriptFontName" type="xs:string">
              <xs:annotation>
                <xs:documentation>Postscript font name</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:fontExtra" />
          </xs:sequence>
          <xs:attribute name="code" use="required">
            <xs:annotation>
              <xs:documentation>The font identification code</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:short">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="family" type="gn4:tName">
            <xs:annotation>
              <xs:documentation>Name of the font's family</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="italic" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>True if the font is an italic member of its family</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="bold" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>True if the font is a bold member of its family</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="pfbName" use="optional">
            <xs:annotation>
              <xs:documentation>Name of the associated PFB (Type1 font) file. It can be empty or missing for TrueType or system fonts</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="32" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="emW" type="xs:short">
            <xs:annotation>
              <xs:documentation>Larghezza del quadratone in millesimi.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="enW" type="xs:short">
            <xs:annotation>
              <xs:documentation>Larghezza del quadratino in millesimi.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="thinW" type="xs:short">
            <xs:annotation>
              <xs:documentation>Larghezza dello spazio fino in millesimi.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="capH" type="xs:short">
            <xs:annotation>
              <xs:documentation>Altezza delle maiuscole in millesimi.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="xH" type="xs:short">
            <xs:annotation>
              <xs:documentation>Altezza delle minuscole in millesimi.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="desD" type="xs:short">
            <xs:annotation>
              <xs:documentation>Profondità dei discendenti in millesimi.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="asseH" type="xs:short">
            <xs:annotation>
              <xs:documentation>Altezza dell'asse ottico in millesimi.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="slant" type="xs:short">
            <xs:annotation>
              <xs:documentation>Inclinazione in millesimi (1000 corrisponde a 45 gradi).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="smallH" type="xs:short">
            <xs:annotation>
              <xs:documentation>Altezza del maiuscoletto in millesimi.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="smallW" type="xs:short">
            <xs:annotation>
              <xs:documentation>Larghezza del maiuscoletto in millesimi."</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:fontExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="justDef">
    <xs:annotation>
      <xs:documentation>Style library</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type69" gs:key="scopeRef name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="justScope" gs:access="Protected" minOccurs="1" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the justification scope this style library belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="cmds" type="gn4:NamedCmds">
              <xs:annotation>
                <xs:documentation>The styles definitions - stored as XML</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:justDefExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:justDefExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="hyphenation">
    <xs:annotation>
      <xs:documentation>Hyphenation rules</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type70" gs:key="scopeRef name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="justScope" gs:access="Protected" minOccurs="1" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the justification scope this hyphenation belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="application/octet-stream" name="data" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>Rules</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="dicts" gs:mimeTypes="text/plain" minOccurs="0" name="excDict" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>Exceptions</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="application/octet-stream" minOccurs="0" name="binExcDict" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>Compiled exceptions</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="dicts" gs:mimeTypes="text/plain" name="patterns" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The original ASCII patterns</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="text/plain" minOccurs="0" name="wordEstimation" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>Language data to apply into word estimation</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:hyphenationExtra" />
          </xs:sequence>
          <xs:attribute name="type" use="required">
            <xs:annotation>
              <xs:documentation>Rule type (All, Liang, DLL)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="All" />
                <xs:enumeration value="Liang" />
                <xs:enumeration value="DLL" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="92" name="estimateFactor" type="xs:short" use="optional">
            <xs:annotation>
              <xs:documentation>Percentage value: 100% use the exact extimation value, less than 100 reduce the estimation value, more than 100 increase the estimation value</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:hyphenationExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="justContext">
    <xs:annotation>
      <xs:documentation>Format</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type71" gs:key="scopeRef name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="justScope" gs:access="Protected" minOccurs="1" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the justification scope this format belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="status" type="gn4:ContextStatus">
              <xs:annotation>
                <xs:documentation>Default typographical status and global justification parameters - stored as XML</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="xmlTxt">
              <xs:annotation>
                <xs:documentation>Default xml output string</xs:documentation>
              </xs:annotation>
              <xs:complexType mixed="true">
                <xs:sequence>
                  <xs:any minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="defs">
              <xs:annotation>
                <xs:documentation>Ordered list of associated style libraries</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" gs:refer="justDef" minOccurs="0" maxOccurs="unbounded" name="ref" type="gn4:reference" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:refer="txt" minOccurs="0" name="typeRef" nillable="true" type="gn4:objectType">
              <xs:annotation>
                <xs:documentation>Optional associated (text) object type.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="MainCategories" minOccurs="0" name="categoryRef" nillable="true" type="gn4:categoryRef">
              <xs:annotation>
                <xs:documentation>Optional associated category</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:justContextExtra" />
          </xs:sequence>
          <xs:attribute name="textFit" use="optional">
            <xs:annotation>
              <xs:documentation>Name of the copy-fit parameters to use to copy-fit a text using this format</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="80" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="defaultParaFit" use="optional">
            <xs:annotation>
              <xs:documentation>Name of the default copy-fit parameters to be used to stretch/shrink paragraphs of texts using this format</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="80" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" default="0" name="minDepth" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Minimum depth of the geometry of a text using this format (0 = no minimum depth)</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" default="0" name="maxDepth" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Maximum depth of the geometry of a text using this format (0 = no maximum depth)</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" default="0" name="minWidth" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Minimum width of the geometry of a text using this format (0 = no minimum width)</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" default="0" name="maxWidth" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Maximum width of the geometry of a text using this format (0 = no maximum width)</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:justContextExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="geometry">
    <xs:annotation>
      <xs:documentation>Geometry rule</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type72" gs:key="scopeRef name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="justScope" gs:access="Protected" minOccurs="1" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the justification scope this geometry rule belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:geometryExtra" />
          </xs:sequence>
          <xs:attribute name="description" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>The geometry description</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="isDefault" type="xs:boolean" use="required">
            <xs:annotation>
              <xs:documentation>True if it's a default geometry</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="formCode" type="xs:short" use="required">
            <xs:annotation>
              <xs:documentation>The formCode of paper used for this geometry</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" name="pageWidth" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The page width</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" name="pageHeight" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The page height</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" name="colW" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The column width</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" name="interCol" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The column gutter</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" name="modH" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The module height&gt;</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" name="leftM" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The measure of left margin</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" name="rightM" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The measure of right margin</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" name="topM" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The measure of top margin</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" name="bottomM" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The measure of bottom margin</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" name="interMod" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The module gutter</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="twoSides" type="xs:boolean" use="required">
            <xs:annotation>
              <xs:documentation>True if it's a double page</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:geometryExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="printTemplate">
    <xs:annotation>
      <xs:documentation>Print queue template: specify the workflow and the associated parameters to be used to print in all the associated queues</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type73" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the print template belongs to - used to set access rights</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="description" nillable="true" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>Multi-line description of the print template</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="parsDef" type="gn4:tParamsDef">
              <xs:annotation>
                <xs:documentation>Definition of the parameters of the print queues using this template</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="printWF" nillable="true" type="gn4:tXml">
              <xs:annotation>
                <xs:documentation>Printing workflow.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:printTemplateExtra" />
          </xs:sequence>
          <xs:attribute default="false" name="audit" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>If set to true print operations to queues using this template are recorded in the audit trail</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:printTemplateExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="printQueue">
    <xs:annotation>
      <xs:documentation>Print queue</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type74" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="printTemplate" minOccurs="1" name="templateRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Print template associated with the queue</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>Multi-line description of the queue</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions to the print queue.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="params" type="gn4:tParams">
              <xs:annotation>
                <xs:documentation>Parameters that are passed to the print workflow.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:printQueueExtra" />
          </xs:sequence>
          <xs:attribute default="false" name="scheduleTask" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>If set to true, the print operation is performed by a scheduled task of Back4.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="priority">
            <xs:annotation>
              <xs:documentation>Priority of the scheduled task.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:short">
                <xs:minInclusive value="0" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:printQueueExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="printParams">
    <xs:annotation>
      <xs:documentation>Class for Print parameters</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="printConfig">
    <xs:annotation>
      <xs:documentation>Printer configuration object</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type75" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="description" nillable="true" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>The object description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="params" type="gn4:printParams">
              <xs:annotation>
                <xs:documentation>The printer params xml</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="printQueue" minOccurs="0" name="printQueueRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the printQueue</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:printConfigExtra" />
          </xs:sequence>
          <xs:attribute name="type">
            <xs:annotation>
              <xs:documentation>Config type (ps, pdf, draft, printer)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="ps" />
                <xs:enumeration value="pdf" />
                <xs:enumeration value="draft" />
                <xs:enumeration value="printer" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:printConfigExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="tT">
    <xs:annotation>
      <xs:documentation>Text with typographical markup</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="http://www.teradp.com/schemas/GN3/t.xsd" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType id="type76" name="linkObject">
    <xs:annotation>
      <xs:documentation>Abstract base object type for 'linkable' folder objects - i.e. objects that can be linked to pages</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:folderObject">
        <xs:sequence>
          <xs:element gs:compute="true" minOccurs="0" name="pageLayers">
            <xs:annotation>
              <xs:documentation>Automatically computed list of page's layers where this object is used (i.e. linked to)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="item">
                  <xs:complexType>
                    <xs:annotation>
                      <xs:appinfo>
                        <gs:index attrs="layerRef" />
                        <gs:index attrs="pageRef gn_ParentId" />
                      </xs:appinfo>
                    </xs:annotation>
                    <xs:sequence>
                      <xs:element gs:refer="region" minOccurs="0" name="regionRef" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>The region of the object's geometry - i.e. the region of the linked layer</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element gs:refer="pageLayer" minOccurs="0" name="layerRef" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>The page layer containing the object</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element gs:refer="page" minOccurs="0" name="pageRef" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>The page containing the object (via the layer)</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element gs:refer="extDoc" minOccurs="0" name="extDocRef" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>The document containing the object</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element gs:refer="section" minOccurs="0" name="sectionRef" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>The page's section</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element gs:refer="zone" minOccurs="0" name="zoneRef" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>The page's zone</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element gs:refer="book" minOccurs="0" name="bookRef" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>The page's book</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element gs:refer="edition" minOccurs="0" name="editionRef" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>The page's (and layer's) edition</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element name="description" type="gn4:tDescription">
                        <xs:annotation>
                          <xs:documentation>The page's textual description</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                    <xs:attribute name="key" type="gn4:tName">
                      <xs:annotation>
                        <xs:documentation>Key uniquely identifying each item in the list. It is computed concatenating the layer and page ids, or it is just the document id for objects linked to a document instead than a layer/page.</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="0" name="number" type="xs:short" use="optional">
                      <xs:annotation>
                        <xs:documentation>The page number. Not used if the link is to a document.</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="0" name="lockLevel" type="gn4:tLockLevel" use="optional">
                      <xs:annotation>
                        <xs:documentation>Maximum object lock level of all image elements (for images) or frames (for texts) in the layer - used to lock the image or text to prevent its modifications once the page has been completed.</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="0" name="seqN" type="xs:short" use="optional">
                      <xs:annotation>
                        <xs:documentation>Sequence number of the linking (starting from 1)- used to order the linked layers or pages of jump texts. 0 = not defined.</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element gs:compute="true" minOccurs="0" name="linked" type="gn4:tDescription">
            <xs:annotation>
              <xs:documentation>Description of the first page or document this article is linked to</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:compute="true" minOccurs="0" name="lockLevel" type="gn4:tLockLevel">
            <xs:annotation>
              <xs:documentation>Maximum of the lock levels of all the liked layers. If greater than 0 means that the image or text cannot be modified</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:access="Special" minOccurs="0" name="assigns">
            <xs:annotation>
              <xs:documentation>Assignments to pages/documents/zones/sections/editions. Use access class 'Special' so that assigment has separate permissions and can be done independently from object editing. Note also that the access class of this attribute MUST be the same of all the attributes in txtGeometry used to store the object justification parameters (format/jumps/depth etc.)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:refer="edition" gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="ref">
                  <xs:complexType>
                    <xs:complexContent mixed="false">
                      <xs:extension base="gn4:reference">
                        <xs:sequence>
                          <xs:element gs:refer="page" minOccurs="0" name="pageRef" nillable="true" type="gn4:reference">
                            <xs:annotation>
                              <xs:documentation>Object's assigned page</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element gs:refer="extDoc" minOccurs="0" name="extDocRef" nillable="true" type="gn4:reference">
                            <xs:annotation>
                              <xs:documentation>Object's assigned document</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element gs:refer="section" minOccurs="0" name="sectionRef" nillable="true" type="gn4:reference">
                            <xs:annotation>
                              <xs:documentation>Object's assigned section. Must be the page or document section if pageRef or extDocRef have a value.</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element gs:refer="zone" minOccurs="0" name="zoneRef" nillable="true" type="gn4:reference">
                            <xs:annotation>
                              <xs:documentation>Object's assigned zone. Must be the page or document zone if pageRef or extDocRef have a value.</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element gs:refer="book" minOccurs="0" name="bookRef" nillable="true" type="gn4:reference">
                            <xs:annotation>
                              <xs:documentation>Object's assigned book. Must be the page or document book if pageRef or extDocRef have a value.</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element gs:compute="true" minOccurs="0" name="description" nillable="true" type="gn4:tDescription">
                            <xs:annotation>
                              <xs:documentation>Automatically computed description of the assignment</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                      </xs:extension>
                    </xs:complexContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element gs:compute="true" minOccurs="0" name="assigned" type="gn4:tDescription">
            <xs:annotation>
              <xs:documentation>Description of the first page or document this article is assigned to</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:group ref="gn4:linkObjectExtra" />
        </xs:sequence>
        <xs:attribute gs:compute="true" name="autoDeadline" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:documentation>Automatically computed deadline date-time for this object</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="deadline" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:documentation>Manually set deadline date-time for this object</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="gn4:linkObjectExtra" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType id="type77" gs:key="folderRef name" name="img">
    <xs:annotation>
      <xs:documentation>Base type for editorial images</xs:documentation>
      <xs:appinfo>
        <gs:_objectType deadlineGap="0" mediaType="Image">
          <description xmlns="">Base type for editorial images</description>
        </gs:_objectType>
        <gs:fullTextObj exaSourceName="img">
          <gs:meta name="gn4Title" field="true" isUsedForSorting="true" />
          <gs:meta name="modifiedDate" field="true" isUsedForSorting="true" />
          <gs:meta name="creationDate" field="true" isUsedForSorting="true" />
          <gs:meta name="authors" field="true" />
          <gs:meta name="location" field="true" />
          <gs:meta name="keywords" field="true" />
          <gs:meta name="cats" field="true" />
          <gs:meta name="publicationDate" field="true" isUsedForSorting="true" />
          <gs:meta name="publicationRef" field="true" isUsedForSorting="true" />
          <gs:meta name="folderRef" field="true" />
          <gs:meta name="folderKind" field="true" />
        </gs:fullTextObj>
        <gs:compute inherit="true">
          <!--
            Semplified XSL transformation to compute size, referencing page list, linked&assigned, deadline
          -->
          <img xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns="">
            <!-- All the layers referencing this img -->
            <xsl:variable name="layerImgs" select="nav:referencing/nav:referencingBy[@attrName='layer.imgs']/nav:refs" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            <!-- All the documents referencing this img -->
            <xsl:variable name="extDocImgs" select="nav:referencing/nav:referencingBy[@attrName='extDoc.imgs']/nav:refs" />
            <!-- Compute size -->
            <xsl:attribute name="size">
              <xsl:choose>
                <xsl:when test="gn4:low/@size and gn4:high/@size">
                  <xsl:value-of select="gn4:low/@size + gn4:high/@size" />
                </xsl:when>
                <xsl:when test="gn4:low/@size">
                  <xsl:value-of select="gn4:low/@size" />
                </xsl:when>
                <xsl:when test="gn4:high/@size">
                  <xsl:value-of select="gn4:high/@size" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="'0'" />
                </xsl:otherwise>
              </xsl:choose>
            </xsl:attribute>
            <!-- Compute the deadline -->
            <xsl:choose>
              <xsl:when test="string(@deadline)">
                <!-- There is a deadline set manually -->
                <xsl:attribute name="autoDeadline">
                  <xsl:value-of select="@deadline" />
                </xsl:attribute>
              </xsl:when>
              <xsl:otherwise>
                <!-- No manually set deadline: compute the minimum of all the linked pages and documents deadlines -->
                <!-- 'Fake' test of the handle attributes to generate dependencies -->
                <xsl:if test="string($layerImgs/@handle) and string($extDocImgs/@handle)">
                  <xsl:variable name="pagesAndExtDocsDeadline" select="fn:minDateTime($layerImgs/nav:refObject/gn4:pageLayer/gn4:pages/gn4:ref/@autoDeadline|$extDocImgs/nav:refObject/gn4:extDoc/@autoDeadline)" />
                  <xsl:choose>
                    <xsl:when test="string($pagesAndExtDocsDeadline)">
                      <xsl:attribute name="autoDeadline">
                        <xsl:value-of select="fn:addDuration($pagesAndExtDocsDeadline,nav:objectTypeAttrs/@deadlineGap*60)" />
                      </xsl:attribute>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:attribute name="autoDeadline" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:if>
              </xsl:otherwise>
            </xsl:choose>
            <!-- Compute list of linked layers, pages and documents -->
            <xsl:variable name="imgId" select="@id" />
            <xsl:variable name="pageLayersFragment">
              <!-- 'Fake' test of the handle attributes to generate dependencies -->
              <xsl:if test="string($layerImgs/@handle) and string($extDocImgs/@handle)">
                <!-- Linked layers and pages -->
                <xsl:for-each select="$layerImgs/nav:refObject/gn4:pageLayer">
                  <xsl:variable name="layerId" select="@id" />
                  <xsl:variable name="regionId" select="gn4:regionRef/@idref" />
                  <xsl:variable name="lockLevel" select="gn4:imgs/gn4:ref[@idref=$imgId]/@lockLevel" />
                  <!-- 'Fake' test of the handle attributes to generate dependencies -->
                  <xsl:if test="string(gn4:pages/@nav:handle)">
                    <xsl:choose>
                      <xsl:when test="gn4:pages/gn4:ref">
                        <xsl:for-each select="gn4:pages/gn4:ref">
                          <item key="{concat(fn:objectIdFromString($layerId),'-',fn:objectIdFromString(@idref))}" number="{@number}" lockLevel="{$lockLevel}">
                            <regionRef idref="{$regionId}" />
                            <layerRef idref="{$layerId}" />
                            <pageRef idref="{@idref}" />
                            <xsl:if test="string(gn4:sectionRef/@idref)">
                              <sectionRef idref="{gn4:sectionRef/@idref}" />
                            </xsl:if>
                            <xsl:if test="string(gn4:zoneRef/@idref)">
                              <zoneRef idref="{gn4:zoneRef/@idref}" />
                            </xsl:if>
                            <xsl:if test="string(gn4:bookRef/@idref)">
                              <bookRef idref="{gn4:bookRef/@idref}" />
                            </xsl:if>
                            <xsl:if test="string(gn4:editionRef/@idref)">
                              <editionRef idref="{gn4:editionRef/@idref}" />
                            </xsl:if>
                            <description>
                              <xsl:value-of select="gn4:description" />
                            </description>
                          </item>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <item key="{fn:objectIdFromString($layerId)}" lockLevel="{$lockLevel}">
                          <regionRef idref="{$regionId}" />
                          <layerRef idref="{$layerId}" />
                          <description>ONLY LAYER</description>
                        </item>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:if>
                </xsl:for-each>
                <!-- Linked documents -->
                <xsl:for-each select="$extDocImgs/nav:refObject/gn4:extDoc">
                  <item key="{fn:objectIdFromString(@id)}">
                    <extDocRef idref="{@id}" />
                    <xsl:if test="string(gn4:sectionRef/@idref)">
                      <sectionRef idref="{gn4:sectionRef/@idref}" />
                    </xsl:if>
                    <xsl:if test="string(gn4:zoneRef/@idref)">
                      <zoneRef idref="{gn4:zoneRef/@idref}" />
                    </xsl:if>
                    <xsl:if test="string(gn4:bookRef/@idref)">
                      <bookRef idref="{gn4:bookRef/@idref}" />
                    </xsl:if>
                    <xsl:if test="string(gn4:editionRef/@idref)">
                      <editionRef idref="{gn4:editionRef/@idref}" />
                    </xsl:if>
                    <description>
                      <xsl:value-of select="@descName" />
                    </description>
                  </item>
                </xsl:for-each>
              </xsl:if>
            </xsl:variable>
            <xsl:variable name="pageLayers" select="msxsl:node-set($pageLayersFragment)" />
            <pageLayers>
              <xsl:copy-of select="$pageLayers" />
            </pageLayers>
            <linked>
              <xsl:value-of select="$pageLayers/item/description" />
            </linked>
            <lockLevel>
              <xsl:choose>
                <xsl:when test="$pageLayers/item[@lockLevel]">
                  <xsl:value-of select="fn:maxNumber($pageLayers/item/@lockLevel)" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>0</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </lockLevel>
            <!-- Compute assigment descriptions -->
            <xsl:variable name="assignsFragment">
              <xsl:for-each select="gn4:assigns/gn4:ref">
                <ref idref="{@idref}">
                  <xsl:variable name="editionDescName" select="nav:refObject/gn4:edition/@descName" />
                  <description>
                    <xsl:choose>
                      <xsl:when test="string(gn4:pageRef/@idref)">
                        <xsl:value-of select="gn4:pageRef/nav:refObject/gn4:page/@descName" />
                      </xsl:when>
                      <xsl:when test="string(gn4:extDocRef/@idref)">
                        <xsl:value-of select="gn4:extDocRef/nav:refObject/gn4:extDoc/@descName" />
                      </xsl:when>
                      <xsl:when test="string(gn4:sectionRef/@idref)">
                        <xsl:value-of select="concat($editionDescName,' ',gn4:sectionRef/nav:refObject/gn4:section/@name)" />
                      </xsl:when>
                      <xsl:when test="string(gn4:zoneRef/@idref)">
                        <xsl:value-of select="concat($editionDescName,' ',gn4:zoneRef/nav:refObject/gn4:zone/@name)" />
                      </xsl:when>
                      <xsl:when test="string(gn4:bookRef/@idref)">
                        <xsl:value-of select="concat($editionDescName,' ',gn4:bookRef/nav:refObject/gn4:book/@name)" />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$editionDescName" />
                      </xsl:otherwise>
                    </xsl:choose>
                  </description>
                </ref>
              </xsl:for-each>
            </xsl:variable>
            <xsl:variable name="assigns" select="msxsl:node-set($assignsFragment)" />
            <assigns>
              <xsl:copy-of select="$assigns" />
            </assigns>
            <assigned>
              <xsl:value-of select="$assigns/ref/description" />
            </assigned>
          </img>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:linkObject">
        <xs:sequence>
          <xs:element gs:volume="imgLowRes" gs:mimeTypes="image application/postscript" gs:access="Content" minOccurs="0" name="low" nillable="true" type="gn4:dataContent">
            <xs:annotation>
              <xs:documentation>The low-res image, that is the only one in case of direct images (no OPI). It is optional, if missing the picture is a dummy one</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly">
                  <gs:template kind="Image" />
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element gs:volume="imgHighRes" gs:access="Content" minOccurs="0" name="high" nillable="true" type="gn4:dataContent">
            <xs:annotation>
              <xs:documentation>The high-res image. It is optional, present only when using the OPI and the picture is not dummy.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly">
                  <gs:template kind="Image" />
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element gs:mimeTypes="image/jpeg image/gif image/png" gs:access="Content" minOccurs="0" name="thumbnail" nillable="true" type="gn4:dataContent">
            <xs:annotation>
              <xs:documentation>The image thumbnail. Generated by the import process.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly">
                  <gs:template kind="Image" />
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element gs:volume="imgPreviews" gs:mimeTypes="image/jpeg image/gif image/png" gs:access="Content" minOccurs="0" name="preview" nillable="true" type="gn4:dataContent">
            <xs:annotation>
              <xs:documentation>The image preview. Generated by the import process.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly">
                  <gs:template kind="Image" />
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element gs:access="Content" minOccurs="0" name="clipPath" nillable="true" type="gn4:dataContent">
            <xs:annotation>
              <xs:documentation>Image clip path data information exracted from the image file if any exists</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="description" type="gn4:tDescription">
            <xs:annotation>
              <xs:documentation>General image description</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:storage="XmlText" gs:access="Content" minOccurs="0" name="spotColors" type="gn4:SpotColorInfo">
            <xs:annotation>
              <xs:documentation>Spot colors info stored as XML</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="faces" type="gn4:faces">
            <xs:annotation>
              <xs:documentation>List of faces coordinates into image</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:group ref="gn4:imgExtra" />
        </xs:sequence>
        <xs:attribute gs:compute="true" gs:size="Main" gs:dimension="datasize:byte" default="0" name="size" type="gn4:tNonNegativeLong" use="optional">
          <xs:annotation>
            <xs:appinfo>
              <gs:ui mode="Hidden" />
            </xs:appinfo>
            <xs:documentation>Image 'main' size: the size in bytes of the object data - low and high-res pictures</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Content" default="cuNone" name="colorUsage" type="gn4:tColorUsage" use="optional">
          <xs:annotation>
            <xs:documentation>Image color space</xs:documentation>
            <xs:appinfo>
              <gs:ui mode="ReadOnly" />
            </xs:appinfo>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Content" default="0" name="pixWidth" type="gn4:tNonNegativeInt" use="optional">
          <xs:annotation>
            <xs:documentation>Width in pixel of the image</xs:documentation>
            <xs:appinfo>
              <gs:ui mode="ReadOnly" />
            </xs:appinfo>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Content" default="0" name="pixHeight" type="gn4:tNonNegativeInt" use="optional">
          <xs:annotation>
            <xs:documentation>Height in pixel of the image</xs:documentation>
            <xs:appinfo>
              <gs:ui mode="ReadOnly" />
            </xs:appinfo>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="width" type="gn4:tNonNegativeInt" use="optional">
          <xs:annotation>
            <xs:documentation>Width in millipoints of the image</xs:documentation>
            <xs:appinfo>
              <gs:ui mode="ReadOnly" />
            </xs:appinfo>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="height" type="gn4:tNonNegativeInt" use="optional">
          <xs:annotation>
            <xs:documentation>Height in millipoints of the image</xs:documentation>
            <xs:appinfo>
              <gs:ui mode="ReadOnly" />
            </xs:appinfo>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Content" default="cuNone" name="lowColorUsage" type="gn4:tColorUsage" use="optional">
          <xs:annotation>
            <xs:documentation>Low-resolutiuon image color space</xs:documentation>
            <xs:appinfo>
              <gs:ui mode="ReadOnly" />
            </xs:appinfo>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="" name="source" use="optional">
          <xs:annotation>
            <xs:documentation>Source of the image (e.g. a queue name)</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:maxLength value="32" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="facesPixBBox" use="optional">
          <xs:annotation>
            <xs:documentation>The coordinates that include all face coordinates (x,y,w,h)</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:maxLength value="255" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute default="" name="iccProfile" use="optional">
          <xs:annotation>
            <xs:documentation>Optional name of the ICC color profile of the image</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:maxLength value="255" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attributeGroup ref="gn4:imgExtra" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="img" type="gn4:img">
    <xs:annotation>
      <xs:documentation>Generic editorial image.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType id="type78" gs:key="folderRef name" gs:stateAttr="folderRef" name="txt">
    <xs:annotation>
      <xs:documentation>Base type for editorial texts.</xs:documentation>
      <xs:appinfo>
        <gs:_objectType deadlineGap="0" mediaType="Text">
          <description xmlns="">Base type for editorial texts</description>
        </gs:_objectType>
        <gs:compute inherit="true">
          <!--
            Semplified XSL transformation to compute size, height, format, referencing page list, linked&assigned, deadline
          -->
          <txt xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
            <!-- All the geometries referencing this text -->
            <xsl:variable name="txtGeometryTxt" select="nav:referencing/nav:referencingBy[@attrName='txtGeometry.txtRef']/nav:refs" />
            <!-- Compute size -->
            <xsl:choose>
              <xsl:when test="gn4:tText">
                <xsl:attribute name="size">
                  <xsl:value-of select="fn:xmlLength(gn4:tText)" />
                </xsl:attribute>
              </xsl:when>
              <xsl:otherwise>
                <xsl:attribute name="size">
                  <xsl:value-of select="'0'" />
                </xsl:attribute>
              </xsl:otherwise>
            </xsl:choose>
            <!-- Compute height -->
            <xsl:variable name="justifiedTxtGeometry" select="$txtGeometryTxt/nav:refObject/gn4:txtGeometry[@justified='true']" />
            <xsl:choose>
              <xsl:when test="$justifiedTxtGeometry">
                <xsl:attribute name="textH">
                  <xsl:value-of select="$justifiedTxtGeometry/@textH" />
                </xsl:attribute>
              </xsl:when>
              <xsl:otherwise>
                <xsl:attribute name="textH">
                  <xsl:value-of select="'0'" />
                </xsl:attribute>
              </xsl:otherwise>
            </xsl:choose>
            <!-- Compute the deadline -->
            <xsl:choose>
              <xsl:when test="string(@deadline)">
                <!-- There is a deadline set manually -->
                <xsl:attribute name="autoDeadline">
                  <xsl:value-of select="@deadline" />
                </xsl:attribute>
              </xsl:when>
              <xsl:otherwise>
                <!-- No manually set deadline: compute the minimum of all the linked pages deadlines -->
                <!-- 'Fake' test of the handle attributes to generate a dependency from the referencing geometries and their jumps -->
                <xsl:if test="string($txtGeometryTxt/@handle) and string($txtGeometryTxt/nav:refObject/gn4:txtGeometry/gn4:jumps/@nav:handle)">
                  <xsl:variable name="pagesDeadline" select="fn:minDateTime($txtGeometryTxt/nav:refObject/gn4:txtGeometry/gn4:jumps/gn4:ref[@hasFrames='true']/nav:refObject/gn4:pageLayer/gn4:pages/gn4:ref/@autoDeadline)" />
                  <xsl:choose>
                    <xsl:when test="string($pagesDeadline)">
                      <xsl:attribute name="autoDeadline">
                        <xsl:value-of select="fn:addDuration($pagesDeadline,nav:objectTypeAttrs/@deadlineGap*60)" />
                      </xsl:attribute>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:attribute name="autoDeadline" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:if>
              </xsl:otherwise>
            </xsl:choose>
            <!-- Compute list of linked layers and pages -->
            <xsl:variable name="txtId" select="@id" />
            <xsl:variable name="pageLayersFragment">
              <!-- 'Fake' test of the handle attribute to generate a dependency from the referencing geometries -->
              <xsl:if test="string($txtGeometryTxt/@handle)">
                <!-- Loop on all the geometris referencing this text -->
                <xsl:for-each select="$txtGeometryTxt/nav:refObject/gn4:txtGeometry">
                  <xsl:variable name="regionId" select="gn4:regionRef/@idref" />
                  <!-- 'Fake' test of the handle attribute to generate a dependency from the jumps of the referencing geometries -->
                  <xsl:if test="string(gn4:jumps/@nav:handle)">
                    <!-- Loop on all the jumps in the geometry, skipping those that do not reference actual frames - i.e. those that are not links-->
                    <xsl:for-each select="gn4:jumps/gn4:ref[@hasFrames='true']">
                      <xsl:variable name="lockLevel" select="@lockLevel" />
                      <xsl:variable name="seqN" select="position()" />
                      <xsl:variable name="layerId" select="@idref" />
                      <xsl:variable name="layer" select="nav:refObject/gn4:pageLayer" />
                      <xsl:for-each select="$layer/gn4:pages/gn4:ref">
                        <item key="{concat(fn:objectIdFromString($layerId),'-',fn:objectIdFromString(@idref))}" number="{@number}" lockLevel="{$lockLevel}" seqN="{$seqN}">
                          <regionRef idref="{$regionId}" />
                          <layerRef idref="{$layerId}" />
                          <pageRef idref="{@idref}" />
                          <xsl:if test="string(gn4:sectionRef/@idref)">
                            <sectionRef idref="{gn4:sectionRef/@idref}" />
                          </xsl:if>
                          <xsl:if test="string(gn4:zoneRef/@idref)">
                            <zoneRef idref="{gn4:zoneRef/@idref}" />
                          </xsl:if>
                          <xsl:if test="string(gn4:bookRef/@idref)">
                            <bookRef idref="{gn4:bookRef/@idref}" />
                          </xsl:if>
                          <xsl:if test="string(gn4:editionRef/@idref)">
                            <editionRef idref="{gn4:editionRef/@idref}" />
                          </xsl:if>
                          <description>
                            <xsl:value-of select="gn4:description" />
                          </description>
                        </item>
                      </xsl:for-each>
                    </xsl:for-each>
                  </xsl:if>
                </xsl:for-each>
              </xsl:if>
            </xsl:variable>
            <xsl:variable name="pageLayers" select="msxsl:node-set($pageLayersFragment)" />
            <pageLayers>
              <xsl:copy-of select="$pageLayers" />
            </pageLayers>
            <linked>
              <xsl:value-of select="$pageLayers/item/description" />
            </linked>
            <lockLevel>
              <xsl:choose>
                <xsl:when test="$pageLayers/item[@lockLevel]">
                  <xsl:value-of select="fn:maxNumber($pageLayers/item/@lockLevel)" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>0</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </lockLevel>
            <!-- Compute assigment descriptions -->
            <xsl:variable name="assignsFragment">
              <xsl:for-each select="gn4:assigns/gn4:ref">
                <ref idref="{@idref}">
                  <xsl:variable name="editionDescName" select="nav:refObject/gn4:edition/@descName" />
                  <description>
                    <xsl:choose>
                      <xsl:when test="string(gn4:pageRef/@idref)">
                        <xsl:value-of select="gn4:pageRef/nav:refObject/gn4:page/@descName" />
                      </xsl:when>
                      <xsl:when test="string(gn4:extDocRef/@idref)">
                        <xsl:value-of select="gn4:extDocRef/nav:refObject/gn4:extDoc/@descName" />
                      </xsl:when>
                      <xsl:when test="string(gn4:sectionRef/@idref)">
                        <xsl:value-of select="concat($editionDescName,' ',gn4:sectionRef/nav:refObject/gn4:section/@name)" />
                      </xsl:when>
                      <xsl:when test="string(gn4:zoneRef/@idref)">
                        <xsl:value-of select="concat($editionDescName,' ',gn4:zoneRef/nav:refObject/gn4:zone/@name)" />
                      </xsl:when>
                      <xsl:when test="string(gn4:bookRef/@idref)">
                        <xsl:value-of select="concat($editionDescName,' ',gn4:bookRef/nav:refObject/gn4:book/@name)" />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$editionDescName" />
                      </xsl:otherwise>
                    </xsl:choose>
                  </description>
                </ref>
              </xsl:for-each>
            </xsl:variable>
            <xsl:variable name="assigns" select="msxsl:node-set($assignsFragment)" />
            <assigns>
              <xsl:copy-of select="$assigns" />
            </assigns>
            <assigned>
              <xsl:value-of select="$assigns/ref/description" />
            </assigned>
            <!-- Compute format (just context) -->
            <xsl:variable name="firstTxtGeometry" select="$txtGeometryTxt/nav:refObject/gn4:txtGeometry" />
            <xsl:choose>
              <xsl:when test="$firstTxtGeometry/gn4:contextRef/@idref">
                <contextRef idref="{$firstTxtGeometry/gn4:contextRef/@idref}" />
              </xsl:when>
              <xsl:otherwise>
                <contextRef xsi:nil="true" />
              </xsl:otherwise>
            </xsl:choose>
          </txt>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:linkObject">
        <xs:sequence>
          <xs:element gs:access="Content" name="tText" type="gn4:tT">
            <xs:annotation>
              <xs:documentation>The actual text with typographical markup</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:refer="justContext" gs:compute="true" minOccurs="0" name="contextRef" nillable="true" type="gn4:reference">
            <xs:annotation>
              <xs:documentation>Associated format (justification context). It is automatically computed based on the geometries associated with this text. It is empty if there are no associated geometries.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:access="Content" name="inlineObjs">
            <xs:annotation>
              <xs:documentation>The inline pictures</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="false" gs:refer="folderObject" minOccurs="0" maxOccurs="unbounded" name="ref" type="gn4:reference" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:group ref="gn4:txtExtra" />
        </xs:sequence>
        <xs:attribute gs:access="Content" gs:compute="true" gs:size="Main" gs:dimension="datasize:byte" default="0" name="size" type="gn4:tNonNegativeLong" use="optional">
          <xs:annotation>
            <xs:appinfo>
              <gs:ui mode="Hidden" />
            </xs:appinfo>
            <xs:documentation>Text 'main' size: automatically computed size in bytes of the text</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:dimension="length:m" gs:access="Content" gs:compute="true" default="0" name="textH" type="xs:int" use="optional">
          <xs:annotation>
            <xs:documentation>Automatically computed text justified height - it is copied from the first available geometry the text has been justified in</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Content" default="false" name="counted" type="xs:boolean" use="optional">
          <xs:annotation>
            <xs:documentation>Set to true if the text content has been 'counted' and so the nParas, nLines etc. attributes have valid values. Note that it has the same 'Content' access class of the text itself, because it is modified together with the text.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Content" default="0" name="nParas" type="gn4:tNonNegativeInt" use="optional">
          <xs:annotation>
            <xs:documentation>Number of paragraphs in the text. It contain a valid value only if counted is true. Note that it has the same 'Content' access class of the text itself, because it is modified together with the text.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Content" default="0" name="nLines" type="gn4:tNonNegativeInt" use="optional">
          <xs:annotation>
            <xs:documentation>Number of lines in the text. It contain a valid value only if counted is true. Note that it has the same 'Content' access class of the text itself, because it is modified together with the text.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Content" default="0" name="nWords" type="gn4:tNonNegativeInt" use="optional">
          <xs:annotation>
            <xs:documentation>Number of words in the text. It contain a valid value only if counted is true. Note that it has the same 'Content' access class of the text itself, because it is modified together with the text.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:access="Content" default="0" name="nChars" type="gn4:tNonNegativeInt" use="optional">
          <xs:annotation>
            <xs:documentation>Number of characters in the text. It contain a valid value only if counted is true. Note that it has the same 'Content' access class of the text itself, because it is modified together with the text.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="gn4:txtExtra" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="txt" type="gn4:txt">
    <xs:annotation>
      <xs:documentation>Generic editorial text.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType id="type79" gs:key="folderRef name" name="url">
    <xs:annotation>
      <xs:documentation>URLs</xs:documentation>
      <xs:appinfo>
        <gs:_objectType deadlineGap="0">
          <description xmlns="">URLs</description>
        </gs:_objectType>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:folderObject">
        <xs:sequence>
          <xs:element gs:mimeTypes="image/jpeg image/gif image/png" gs:access="Content" minOccurs="0" name="thumbnail" nillable="true" type="gn4:dataContent">
            <xs:annotation>
              <xs:documentation>The thumbnail associated with the URL.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly">
                  <gs:template kind="Image" />
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:group ref="gn4:urlExtra" />
        </xs:sequence>
        <xs:attribute name="path" type="gn4:tPath">
          <xs:annotation>
            <xs:documentation>The actual URL value (e.g. http://server/dir/filename.ext)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="gn4:urlExtra" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="url" type="gn4:url">
    <xs:annotation>
      <xs:documentation>Generic URL.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType id="type80" gs:key="name folderRef" gs:descName="gn4:title" name="audience">
    <xs:annotation>
      <xs:documentation>Contacts: list of email address</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:folderObject">
        <xs:sequence>
          <xs:element minOccurs="0" name="contacts">
            <xs:annotation>
              <xs:documentation>Contacts for the audience.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="item">
                  <xs:complexType>
                    <xs:attribute name="email" type="xs:string" use="required" />
                    <xs:attribute name="name" type="xs:string" use="optional" />
                    <xs:attribute name="externalId" type="xs:string" use="optional" />
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="audience" type="gn4:audience">
    <xs:annotation>
      <xs:documentation>Contacts: list of email address</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType id="type81" gs:key="name folderRef" gs:descName="gn4:title" name="cxenseAudience">
    <xs:annotation>
      <xs:documentation>Audience generated from cxense</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:audience">
        <xs:sequence>
          <xs:element minOccurs="0" name="conditions" type="gn4:tText">
            <xs:annotation>
              <xs:documentation>The search conditions that generated the audience</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="settings" type="gn4:tText">
            <xs:annotation>
              <xs:documentation>The search settings for the dialog</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="command" use="optional">
          <xs:annotation>
            <xs:documentation />
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:maxLength value="512" />
              <xs:whiteSpace value="collapse" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="cxenseAudience" type="gn4:cxenseAudience">
    <xs:annotation>
      <xs:documentation>Audience generated from cxense</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType id="type82" gs:key="name folderRef" gs:descName="gn4:title" name="gemstoneAudience">
    <xs:annotation>
      <xs:documentation>Audience generated from gemstone advanced searches</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:audience">
        <xs:sequence>
          <xs:element minOccurs="0" name="conditions" type="gn4:tText">
            <xs:annotation />
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="gemstoneAudience" type="gn4:gemstoneAudience">
    <xs:annotation>
      <xs:documentation>Audience generated from gemstone</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="mailshot">
    <xs:annotation>
      <xs:documentation>Contacts: details about persons and organizations and other miscellaneous information useful to the newsroom</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type83" gs:key="name folderRef" gs:descName="gn4:title">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:folderObject">
          <xs:sequence>
            <xs:element gs:refer="audience" name="audienceRef" type="gn4:reference" />
            <xs:element minOccurs="0" name="htmlBody" type="gn4:tText">
              <xs:annotation />
            </xs:element>
            <xs:element minOccurs="0" name="plainBody" type="gn4:tText">
              <xs:annotation />
            </xs:element>
          </xs:sequence>
          <xs:attribute name="externalId" use="optional">
            <xs:annotation>
              <xs:documentation />
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="128" />
                <xs:whiteSpace value="collapse" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="subject" type="xs:string" />
          <xs:attribute name="from" type="xs:string" />
          <xs:attribute name="replyAddress" type="xs:string" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="article">
    <xs:annotation>
      <xs:documentation>Articles</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type84" gs:key="folderRef name">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType mediaType="Complex" />
          <gs:fullTextObj exaSourceName="article">
            <gs:meta name="gn4Title" field="true" isUsedForSorting="true" />
            <gs:meta name="modifiedDate" field="true" isUsedForSorting="true" />
            <gs:meta name="creationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="keywords" field="true" />
            <gs:meta name="cats" field="true" />
            <gs:meta name="authors" field="true" />
            <gs:meta name="location" field="true" />
            <gs:meta name="publicationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="publicationRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderRef" field="true" />
            <gs:meta name="folderKind" field="true" />
          </gs:fullTextObj>
          <gs:categorize target="cats" when="@folderKind='otherContent'">
            <gs:field name="plainText" />
          </gs:categorize>
          <gs:compute inherit="true">
            <!--
              Semplified XSL transformation to compute referencing pages and documents list,
              deadline, linked&assigned, plain text, body counters
            -->
            <article xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns="">
              <!-- All the documents referencing this article -->
              <xsl:variable name="extDocArticles" select="nav:referencing/nav:referencingBy[@attrName='extDoc.articles']/nav:refs" />
              <!-- Compute the deadline -->
              <xsl:choose>
                <xsl:when test="string(@deadline)">
                  <!-- There is a deadline set manually -->
                  <xsl:attribute name="autoDeadline">
                    <xsl:value-of select="@deadline" />
                  </xsl:attribute>
                </xsl:when>
                <xsl:otherwise>
                  <!-- No manually set deadline: compute the deadline from the article's text and the linked documents -->
                  <!-- 'Fake' test of the handle attribute to generate a dependency -->
                  <xsl:if test="string($extDocArticles/@handle)">
                    <!-- Texts deadline: the max. of all texts auto deadlines. An article is composed by its text, hence the max. instead than min. -->
                    <xsl:variable name="txtsDeadline" select="fn:maxDateTime(gn4:txts/*/@autoDeadline)" />
                    <!-- Linked documents deadline: the min. of all linked documents auto-deadlines -->
                    <xsl:variable name="extDocsDeadline" select="fn:minDateTime($extDocArticles/nav:refObject/gn4:extDoc/@autoDeadline)" />
                    <xsl:choose>
                      <xsl:when test="string($extDocsDeadline)">
                        <!-- There are linked documents deadlines: compute the minimum between the texts and documents deadlines -->
                        <xsl:variable name="deadlinesFragment">
                          <xsl:if test="string($txtsDeadline)">
                            <deadline>
                              <xsl:value-of select="$txtsDeadline" />
                            </deadline>
                          </xsl:if>
                          <deadline>
                            <xsl:value-of select="fn:addDuration($extDocsDeadline,nav:objectTypeAttrs/@deadlineGap*60)" />
                          </deadline>
                        </xsl:variable>
                        <xsl:attribute name="autoDeadline">
                          <xsl:value-of select="fn:minDateTime(msxsl:node-set($deadlinesFragment)/*)" />
                        </xsl:attribute>
                      </xsl:when>
                      <xsl:otherwise>
                        <!-- No linked documents deadline: use just the text's deadline -->
                        <xsl:attribute name="autoDeadline">
                          <xsl:value-of select="$txtsDeadline" />
                        </xsl:attribute>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:if>
                </xsl:otherwise>
              </xsl:choose>
              <!-- Compute the body text height -->
              <xsl:variable name="bodyTxt" select="gn4:txts/*[nav:objectTypeAttrs/@typeKind='body']" />
              <xsl:choose>
                <xsl:when test="$bodyTxt">
                  <xsl:attribute name="bodyTextH">
                    <xsl:value-of select="$bodyTxt/@textH" />
                  </xsl:attribute>
                  <xsl:attribute name="bodyNParas">
                    <xsl:value-of select="$bodyTxt/@nParas" />
                  </xsl:attribute>
                  <xsl:attribute name="bodyNLines">
                    <xsl:value-of select="$bodyTxt/@nLines" />
                  </xsl:attribute>
                  <xsl:attribute name="bodyNWords">
                    <xsl:value-of select="$bodyTxt/@nWords" />
                  </xsl:attribute>
                  <xsl:attribute name="bodyNChars">
                    <xsl:value-of select="$bodyTxt/@nChars" />
                  </xsl:attribute>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:attribute name="bodyTextH">
                    <xsl:value-of select="'0'" />
                  </xsl:attribute>
                  <xsl:attribute name="bodyNParas">
                    <xsl:value-of select="'0'" />
                  </xsl:attribute>
                  <xsl:attribute name="bodyNLines">
                    <xsl:value-of select="'0'" />
                  </xsl:attribute>
                  <xsl:attribute name="bodyNWords">
                    <xsl:value-of select="'0'" />
                  </xsl:attribute>
                  <xsl:attribute name="bodyNChars">
                    <xsl:value-of select="'0'" />
                  </xsl:attribute>
                </xsl:otherwise>
              </xsl:choose>
              <!-- Compute list of layers and page this article is linked to (via its texts) -->
              <xsl:variable name="pageLayersFragment">
                <!--
                  Force the access to the pageLayers element of all the texts - so that
                  the article will be re-computed when the pageLayers attribute of any of
                  its texts changes
                -->
                <xsl:for-each select="gn4:txts/*">
                  <xsl:if test="gn4:pageLayers and not(string(gn4:pageLayers/@nav:handle))">
                    <dummy />
                  </xsl:if>
                </xsl:for-each>
                <!--
                  Multiple texts in the article can reference the same layer+page pair (identified
                  by @key) - we want only one, so we extract the distinct @key values
                -->
                <xsl:variable name="pageLayers" select="gn4:txts/*/gn4:pageLayers/gn4:item" />
                <xsl:for-each select="fn:distinct($pageLayers/@key,'Ordinal')/*">
                  <!--
                    For each @key value generate a link entry - computing @lockLevel as the maximum
                    of all lock level values.
                    We skip entries with no layer - thay can be caused by un-referencing during a spike
                  -->
                  <xsl:variable name="key" select="." />
                  <xsl:variable name="sameKeyPageLayers" select="$pageLayers[@key=$key]" />
                  <xsl:variable name="firstPageLayer" select="$sameKeyPageLayers[1]" />
                  <xsl:if test="string($firstPageLayer/gn4:layerRef/@idref) and string($firstPageLayer/gn4:pageRef/@idref)">
                    <item key="{$key}" number="{$firstPageLayer/@number}" lockLevel="{fn:maxNumber($sameKeyPageLayers/@lockLevel)}">
                      <xsl:if test="string($firstPageLayer/gn4:regionRef/@idref)">
                        <regionRef idref="{$firstPageLayer/gn4:regionRef/@idref}" />
                      </xsl:if>
                      <layerRef idref="{$firstPageLayer/gn4:layerRef/@idref}" />
                      <pageRef idref="{$firstPageLayer/gn4:pageRef/@idref}" />
                      <xsl:if test="string($firstPageLayer/gn4:sectionRef/@idref)">
                        <sectionRef idref="{$firstPageLayer/gn4:sectionRef/@idref}" />
                      </xsl:if>
                      <xsl:if test="string($firstPageLayer/gn4:zoneRef/@idref)">
                        <zoneRef idref="{$firstPageLayer/gn4:zoneRef/@idref}" />
                      </xsl:if>
                      <xsl:if test="string($firstPageLayer/gn4:bookRef/@idref)">
                        <bookRef idref="{$firstPageLayer/gn4:bookRef/@idref}" />
                      </xsl:if>
                      <xsl:if test="string($firstPageLayer/gn4:editionRef/@idref)">
                        <editionRef idref="{$firstPageLayer/gn4:editionRef/@idref}" />
                      </xsl:if>
                      <description>
                        <xsl:value-of select="$firstPageLayer/gn4:description" />
                      </description>
                    </item>
                  </xsl:if>
                </xsl:for-each>
                <!-- Linked documents -->
                <!-- 'Fake' test of the handle attribute to generate a dependency -->
                <xsl:if test="string($extDocArticles/@handle)">
                  <xsl:for-each select="$extDocArticles/nav:refObject/gn4:extDoc">
                    <item key="{fn:objectIdFromString(@id)}">
                      <extDocRef idref="{@id}" />
                      <xsl:if test="string(gn4:sectionRef/@idref)">
                        <sectionRef idref="{gn4:sectionRef/@idref}" />
                      </xsl:if>
                      <xsl:if test="string(gn4:zoneRef/@idref)">
                        <zoneRef idref="{gn4:zoneRef/@idref}" />
                      </xsl:if>
                      <xsl:if test="string(gn4:bookRef/@idref)">
                        <bookRef idref="{gn4:bookRef/@idref}" />
                      </xsl:if>
                      <xsl:if test="string(gn4:editionRef/@idref)">
                        <editionRef idref="{gn4:editionRef/@idref}" />
                      </xsl:if>
                      <description>
                        <xsl:value-of select="@descName" />
                      </description>
                    </item>
                  </xsl:for-each>
                </xsl:if>
              </xsl:variable>
              <xsl:variable name="pageLayers" select="msxsl:node-set($pageLayersFragment)" />
              <pageLayers>
                <xsl:copy-of select="$pageLayers" />
              </pageLayers>
              <linked>
                <xsl:value-of select="$pageLayers/item/description" />
              </linked>
              <!-- Extract the texts textual content -->
              <xsl:variable name="plainText" xmlns:t="http://www.teradp.com/schemas/GN3/t.xsd">
                <xsl:for-each select="gn4:txts/*/gn4:tText/t:t/t:p|gn4:txts/*/gn4:tText/t:t/t:tr/t:td">
                  <xsl:value-of select="concat(.,'&#xD;&#xA;')" />
                </xsl:for-each>
              </xsl:variable>
              <plainText>
                <xsl:value-of select="fn:trimText($plainText,fn:maxAttrLen('tText'),' ','...')" />
              </plainText>
              <!-- Compute assigment descriptions -->
              <xsl:variable name="assignsFragment">
                <xsl:for-each select="gn4:assigns/gn4:ref">
                  <ref idref="{@idref}">
                    <xsl:variable name="editionDescName" select="nav:refObject/gn4:edition/@descName" />
                    <description>
                      <xsl:choose>
                        <xsl:when test="string(gn4:pageRef/@idref)">
                          <xsl:value-of select="gn4:pageRef/nav:refObject/gn4:page/@descName" />
                        </xsl:when>
                        <xsl:when test="string(gn4:extDocRef/@idref)">
                          <xsl:value-of select="gn4:extDocRef/nav:refObject/gn4:extDoc/@descName" />
                        </xsl:when>
                        <xsl:when test="string(gn4:sectionRef/@idref)">
                          <xsl:value-of select="concat($editionDescName,' ',gn4:sectionRef/nav:refObject/gn4:section/@name)" />
                        </xsl:when>
                        <xsl:when test="string(gn4:zoneRef/@idref)">
                          <xsl:value-of select="concat($editionDescName,' ',gn4:zoneRef/nav:refObject/gn4:zone/@name)" />
                        </xsl:when>
                        <xsl:when test="string(gn4:bookRef/@idref)">
                          <xsl:value-of select="concat($editionDescName,' ',gn4:bookRef/nav:refObject/gn4:book/@name)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="$editionDescName" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </description>
                  </ref>
                </xsl:for-each>
              </xsl:variable>
              <xsl:variable name="assigns" select="msxsl:node-set($assignsFragment)" />
              <assigns>
                <xsl:copy-of select="$assigns" />
              </assigns>
              <assigned>
                <xsl:value-of select="$assigns/ref/description" />
              </assigned>
            </article>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:linkObject">
          <xs:sequence>
            <xs:element gs:storage="Children" minOccurs="0" maxOccurs="1" name="txts" type="gn4:_articleTxts">
              <xs:annotation>
                <xs:documentation>The texts contained in the article: headline, body, photo captions etc.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:compute="true" name="plainText" type="gn4:tText">
              <xs:annotation>
                <xs:documentation>Automatically compute attribute containing the plain text of all the texts in the article.</xs:documentation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="plainText" />
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="related">
              <xs:annotation>
                <xs:documentation>Objects related to the article - as references. Note that this can include groups - creating hierarchies.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" gs:refer="folderObject" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence>
                            <xs:element gs:refer="PackageRelationships" minOccurs="0" name="rel" nillable="true" type="gn4:categoryRef">
                              <xs:annotation>
                                <xs:documentation>Relationship between the article and the referenced object</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="title" type="gn4:tShortLine">
                              <xs:annotation>
                                <xs:documentation>Short natural language description of the relationship</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="caption" type="gn4:tShortText">
                              <xs:annotation>
                                <xs:documentation>Descriptive text associated with the referenced object.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                          </xs:sequence>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:refer="contentPositions" minOccurs="0" name="contentPosition" type="gn4:categoryRefs">
              <xs:annotation>
                <xs:documentation>Content position categories (leading story, side story, ...)</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" displayCompletePath="false" showWeights="false">
                      <objectUI xmlns="">
                        <web maxRows="5" />
                      </objectUI>
                    </gs:template>
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:articleExtra" />
          </xs:sequence>
          <xs:attribute gs:dimension="length:m" gs:compute="true" default="0" name="bodyTextH" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically computed body text justified height - it is copied from the text height of the first text with typeKind='body'</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" default="0" name="bodyNParas" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Number of paragraphs in the body text. </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" default="0" name="bodyNLines" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Number of lines in body the text.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" default="0" name="bodyNWords" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Number of words in the body text.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" default="0" name="bodyNChars" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Number of characters in the body text.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:articleExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="title">
    <xs:annotation>
      <xs:documentation>Titles</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type105">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:publication">
          <xs:sequence>
            <xs:element gs:refer="justScope" gs:access="Protected" minOccurs="1" name="justScopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the associated justification scope: color table, fonts, style libraries etc.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="zone" minOccurs="0" name="defPairZoneRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>It is the default zone used when generating pairs automatically. It must be optional to avoid circular references: to create a title you need a zone to reference, but to create the zone you need the title.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="section" minOccurs="0" name="defSectionRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>It is the default section used when creating new pages.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="zone" minOccurs="0" name="defZoneRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>It is the default zone used when creating new pages.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="book" minOccurs="0" name="defBookRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>It is the default booklet used when creating new pages.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="editionDescName" type="gn4:tNameTemplate">
              <xs:annotation>
                <xs:documentation>Template used to compose the descriptive name of editions belonging to this title</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="editionShortName" type="gn4:tNameTemplate">
              <xs:annotation>
                <xs:documentation>Template used to compose the descriptive name of editions belonging to this title</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="editionTemplateDescName" type="gn4:tNameTemplate">
              <xs:annotation>
                <xs:documentation>Template used to compose the descriptive name of edition templates belonging to this title</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="editionTemplateShortName" type="gn4:tNameTemplate">
              <xs:annotation>
                <xs:documentation>Template used to compose the descriptive name of edition templates belonging to this title</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="pageDescName" type="gn4:tNameTemplate">
              <xs:annotation>
                <xs:documentation>Template used to compose the descriptive name of pages belonging to this title</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="pageShortName" type="gn4:tNameTemplate">
              <xs:annotation>
                <xs:documentation>Template used to compose the descriptive name of pages belonging to this title</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="doublePageDescName" type="gn4:tNameTemplate">
              <xs:annotation>
                <xs:documentation>Template used to compose the descriptive name of double pages belonging to this title</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="doublePageShortName" type="gn4:tNameTemplate">
              <xs:annotation>
                <xs:documentation>Template used to compose the descriptive name of double pages belonging to this title</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="extDocDescName" type="gn4:tNameTemplate">
              <xs:annotation>
                <xs:documentation>Template used to compose the descriptive name of external documents belonging to this title</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="extDocShortName" type="gn4:tNameTemplate">
              <xs:annotation>
                <xs:documentation>Template used to compose the short descriptive name of external documents belonging to this title</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:titleExtra" />
          </xs:sequence>
          <xs:attribute gs:dimension="time:min" default="0" name="pageToPlateGap" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Number of minutes to subtract to the deadline of a plate to obtain the deadline of a page on that plate.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:titleExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="milestone">
    <xs:annotation>
      <xs:documentation>Milestones used to track production</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type106" gs:key="titleRef name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="title" minOccurs="1" name="titleRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the title this milestone belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="linkObject" minOccurs="0" name="typeRef" nillable="true" type="gn4:objectType">
              <xs:annotation>
                <xs:documentation>Optional associated (text or image) object type this milestone refers to.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="condition">
              <xs:annotation>
                <xs:documentation>Conditions that trigger the milestone</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="in">
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:enumeration value="workstate">
                          <xs:annotation>
                            <xs:documentation>The object is in the specified workstate</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="printedSome">
                          <xs:annotation>
                            <xs:documentation>The object (usually a page) has been printed to the specified queues</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="printed">
                          <xs:annotation>
                            <xs:documentation>The object (usually a page) has been printed</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="fitDummy">
                          <xs:annotation>
                            <xs:documentation>The text fits its geometry / the image is not dummy</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="paginated">
                          <xs:annotation>
                            <xs:documentation>The object has been placed on a page</xs:documentation>
                          </xs:annotation>
                        </xs:enumeration>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:refer="workstate" minOccurs="0" name="workstateRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the workstate associated with this milestone</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:access="Special" minOccurs="0" name="printers">
              <xs:annotation>
                <xs:documentation>printQueues ref list</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:refer="printQueue" gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="ref" type="gn4:reference" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:milestoneExtra" />
          </xs:sequence>
          <xs:attribute name="appliesTo">
            <xs:annotation>
              <xs:documentation>Indicates to which objects the milestones applies</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="page" />
                <xs:enumeration value="txt" />
                <xs:enumeration value="img" />
                <xs:enumeration value="article" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute gs:dimension="time:min" default="0" name="deadline" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Number of minutes to add to the deadline of the object to obtain the deadline of this milestone.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="green" name="colorOK" type="gn4:rgbColor" use="optional">
            <xs:annotation>
              <xs:documentation>Color indicating that the milestone has been met</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="red" name="colorFailed" type="gn4:rgbColor" use="optional">
            <xs:annotation>
              <xs:documentation>Color indicating that the milestone has NOT been met</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:milestoneExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="region">
    <xs:annotation>
      <xs:documentation>Regions: zones grouping that act as containers for layers and geometries</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type107" gs:key="titleRef name" gs:descName="concat(gn4:titleRef/*/gn4:title/@name,':',@name)">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General region description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="title" minOccurs="1" name="titleRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the title this region belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="media" minOccurs="1" name="mediaRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the media type of this region</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="zones">
              <xs:annotation>
                <xs:documentation>Zones associated with this region</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="false" gs:refer="zone" minOccurs="0" maxOccurs="unbounded" name="ref" type="gn4:reference" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:regionExtra" />
          </xs:sequence>
          <xs:attribute default="false" name="notIn" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if the the region is associated with all the zones that are NOT listed by the 'zones' attribute</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:regionExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="edition">
    <xs:annotation>
      <xs:documentation>Editions</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type108" gs:key="titleRef date editionNumberRef name" gs:descName="@descName" gs:shortName="@shortName" gs:stateAttr="workstateRef" gs:access="Protected">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <!--
              Semplified XSL transformation to compute descriptive names, creation date/time, creator,
              last modifier, isTemplate flag
            -->
            <edition xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns="">
              <!--
                Compute the descritive names
              -->
              <xsl:variable name="title" select="gn4:titleRef/*/gn4:title" />
              <!-- Create the XML nodes containing the variables that can be used in the name (in $vars) -->
              <xsl:variable name="editionNumberName" select="gn4:editionNumberRef/*/gn4:editionNumber/@name" />
              <xsl:variable name="varsFragment">
                <var name="titleName" value="{$title/@name}" />
                <var name="date" value="{@date}" />
                <var name="editionNumberName" value="{substring($editionNumberName,1,string-length($editionNumberName)*number($editionNumberName!='-'))}" />
                <var name="name" value="{substring(@name,1,string-length(@name)*number(@name!='-'))}" />
              </xsl:variable>
              <xsl:variable name="vars" select="msxsl:node-set($varsFragment)" />
              <!-- Create the XML nodes containing the templates for descriptive and short names (in $namesTemplate) -->
              <xsl:variable name="namesTemplateFragment">
                <!-- Template for descriptive name of normal editions  -->
                <template name="descName" isEditionTemplate="0">
                  <xsl:variable name="titleTemplate" select="$title/gn4:editionDescName" />
                  <xsl:choose>
                    <xsl:when test="$titleTemplate/*">
                      <xsl:copy-of select="$titleTemplate/*" />
                    </xsl:when>
                    <xsl:otherwise>
                      <var name="titleName" />
                      <text value=" " />
                      <var-date name="date" format="d" />
                      <text value=" " />
                      <var name="editionNumberName" />
                      <text value=" " />
                      <var name="name" />
                    </xsl:otherwise>
                  </xsl:choose>
                </template>
                <!-- Template for short name of normal editions  -->
                <template name="shortName" isEditionTemplate="0">
                  <xsl:variable name="titleTemplate" select="$title/gn4:editionShortName" />
                  <xsl:choose>
                    <xsl:when test="$titleTemplate/*">
                      <xsl:copy-of select="$titleTemplate/*" />
                    </xsl:when>
                    <xsl:otherwise>
                      <var-date name="date" format="d" />
                      <text value=" " />
                      <var name="editionNumberName" />
                      <text value=" " />
                      <var name="name" />
                    </xsl:otherwise>
                  </xsl:choose>
                </template>
                <!-- Template for descriptive name of template editions  -->
                <template name="descName" isEditionTemplate="1">
                  <xsl:variable name="titleTemplate" select="$title/gn4:editionTemplateDescName" />
                  <xsl:choose>
                    <xsl:when test="$titleTemplate/*">
                      <xsl:copy-of select="$titleTemplate/*" />
                    </xsl:when>
                    <xsl:otherwise>
                      <var name="titleName" />
                      <text value=" Template " />
                      <var name="name" />
                    </xsl:otherwise>
                  </xsl:choose>
                </template>
                <!-- Template for short name of template editions  -->
                <template name="shortName" isEditionTemplate="1">
                  <xsl:variable name="titleTemplate" select="$title/gn4:editionTemplateShortName" />
                  <xsl:choose>
                    <xsl:when test="$titleTemplate/*">
                      <xsl:copy-of select="$titleTemplate/*" />
                    </xsl:when>
                    <xsl:otherwise>
                      <text value="Template " />
                      <var name="name" />
                    </xsl:otherwise>
                  </xsl:choose>
                </template>
              </xsl:variable>
              <xsl:variable name="namesTemplate" select="msxsl:node-set($namesTemplateFragment)" />
              <!-- Create the names replacing the variable part in the templates  -->
              <xsl:variable name="clientTimeZoneId" select="$context/lc:LoginContext/@ClientTimeZoneId" />
              <xsl:variable name="isEditionTemplate" select="number(not(string(@date)))" />
              <xsl:for-each select="$namesTemplate/*[@isEditionTemplate=$isEditionTemplate]">
                <xsl:attribute name="{@name}">
                  <xsl:for-each select="*">
                    <xsl:choose>
                      <xsl:when test="local-name()='text'">
                        <xsl:value-of select="@value" />
                      </xsl:when>
                      <xsl:when test="local-name()='var'">
                        <xsl:variable name="name" select="@name" />
                        <xsl:value-of select="$vars/var[@name=$name]/@value" />
                      </xsl:when>
                      <xsl:when test="local-name()='var-date'">
                        <xsl:variable name="name" select="@name" />
                        <xsl:value-of select="fn:formatDateTime(fn:fromUTCToClientLocalTime($vars/var[@name=$name]/@value,$clientTimeZoneId),@format)" />
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:attribute>
              </xsl:for-each>
              <!--
                Compute the isTemplate flag
              -->
              <xsl:attribute name="isTemplate">
                <xsl:value-of select="string-length(@date)=0" />
              </xsl:attribute>
              <!--
                Compute creation and last modified date-times
              -->
              <xsl:if test="not(@id)">
                <xsl:attribute name="creationDate">
                  <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
                </xsl:attribute>
              </xsl:if>
              <!--
                Compute creator and last modifier
              -->
              <xsl:if test="not(@id)">
                <creatorRef idref="{$context/lc:LoginContext/@UserId}" />
              </xsl:if>
              <xsl:if test="$context/oc:OperationContext/@Kind!='Upgrade'">
                <modifierRef idref="{$context/lc:LoginContext/@UserId}" />
              </xsl:if>
            </edition>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="creatorRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the user that created this edition. Automatically computed.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="modifierRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the user that last modified this edition. Automatically computed.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="editionNumber" minOccurs="1" name="editionNumberRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The number of this edition</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General edition description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="title" minOccurs="1" name="titleRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the title this edition belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions to the edition and its pages, master pages, layers</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="workstate" minOccurs="0" name="workstateRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the workstate this edition is currently in</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:editionExtra" />
          </xs:sequence>
          <xs:attribute gs:compute="true" name="creationDate" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>When this edition was created. Automatically computed.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="descName" type="gn4:tTitle" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically computed descriptive name</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="shortName" type="gn4:tTitle" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically computed short descriptive name</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="isTemplate" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically computed flag indicating if the edition is a template or not (to semplify searching / selecting editons)</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="date" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>Edition's date. Not specified for edition templates</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="pagesXPlate">
            <xs:annotation>
              <xs:documentation>Number of pages in each plate</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:short">
                <xs:minInclusive value="0" />
                <xs:maxInclusive value="4" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:editionExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="extDoc">
    <xs:annotation>
      <xs:documentation>External documents contained in an edition - e.g. InDesign documents</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type109" gs:key="editionRef sectionRef zoneRef name bookRef" gs:descName="@descName" gs:shortName="@shortName" gs:stateAttr="workstateRef">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <!--
              Semplified XSL transformation computing descriptive names, deadline, creation date/time,
              creator, last modifier
            -->
            <extDoc xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns="">
              <xsl:variable name="edition" select="gn4:editionRef/*/gn4:edition" />
              <!--
                Compute the descritive names
              -->
              <xsl:variable name="title" select="$edition/gn4:titleRef/*/gn4:title" />
              <xsl:variable name="zone" select="gn4:zoneRef/*/gn4:zone" />
              <!-- Create the XML nodes containing the variables that can be used in the name (in $vars) -->
              <xsl:variable name="sectionName" select="gn4:sectionRef/*/gn4:section/@name" />
              <xsl:variable name="zoneName" select="$zone/@name" />
              <xsl:variable name="bookName" select="gn4:bookRef/*/gn4:book/@name" />
              <xsl:variable name="zoneExtra" select="$zone/gn4:extraStr" />
              <xsl:variable name="varsFragment">
                <var name="editionDescName" value="{$edition/@descName}" />
                <var name="editionShortName" value="{$edition/@shortName}" />
                <var name="editionDate" value="{$edition/@date}" />
                <var name="sectionName" value="{substring($sectionName,1,string-length($sectionName)*number($sectionName!='-'))}" />
                <var name="zoneName" value="{substring($zoneName,1,string-length($zoneName)*number($zoneName!='-'))}" />
                <var name="bookName" value="{substring($bookName,1,string-length($bookName)*number($bookName!='-'))}" />
                <var name="zoneExtra" value="{$zoneExtra}" />
                <var name="name" value="{@name}" />
                <var name="id" value="{fn:objectIdFromString(@id)}" />
              </xsl:variable>
              <xsl:variable name="vars" select="msxsl:node-set($varsFragment)" />
              <!-- Create the XML nodes containing the templates for descriptive and short names (in $namesTemplate) -->
              <xsl:variable name="namesTemplateFragment">
                <!-- Template for descriptive name -->
                <template name="descName">
                  <xsl:variable name="titleTemplate" select="$title/gn4:extDocDescName" />
                  <xsl:choose>
                    <xsl:when test="$titleTemplate/*">
                      <xsl:copy-of select="$titleTemplate/*" />
                    </xsl:when>
                    <xsl:otherwise>
                      <var name="editionDescName" />
                      <text value=" " />
                      <var name="bookName" />
                      <text value=" " />
                      <var name="sectionName" />
                      <var name="name" />
                      <text value=" " />
                      <var name="zoneName" />
                    </xsl:otherwise>
                  </xsl:choose>
                </template>
                <!-- Template for short name -->
                <template name="shortName">
                  <xsl:variable name="titleTemplate" select="$title/gn4:extDocShortName" />
                  <xsl:choose>
                    <xsl:when test="$titleTemplate/*">
                      <xsl:copy-of select="$titleTemplate/*" />
                    </xsl:when>
                    <xsl:otherwise>
                      <var name="bookName" />
                      <text value=" " />
                      <var name="sectionName" />
                      <var name="name" />
                      <text value=" " />
                      <var name="zoneName" />
                    </xsl:otherwise>
                  </xsl:choose>
                </template>
              </xsl:variable>
              <xsl:variable name="namesTemplate" select="msxsl:node-set($namesTemplateFragment)" />
              <!-- Create the names replacing the variable part in the templates  -->
              <xsl:for-each select="$namesTemplate/*">
                <xsl:attribute name="{@name}">
                  <xsl:for-each select="*">
                    <xsl:choose>
                      <xsl:when test="local-name()='text'">
                        <xsl:value-of select="@value" />
                      </xsl:when>
                      <xsl:when test="local-name()='var'">
                        <xsl:variable name="name" select="@name" />
                        <xsl:value-of select="$vars/var[@name=$name]/@value" />
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:attribute>
              </xsl:for-each>
              <!--
                Compute the deadline
              -->
              <xsl:choose>
                <xsl:when test="string($edition/@date)">
                  <!-- The edition has a date, compute the external document deadline relative to it -->
                  <xsl:variable name="deadlineMinutes">
                    <xsl:choose>
                      <xsl:when test="string(@deadline)">
                        <xsl:value-of select="@deadline" />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="0" />
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="autoDeadline">
                    <xsl:value-of select="fn:addDuration($edition/@date,$deadlineMinutes*60)" />
                  </xsl:attribute>
                </xsl:when>
                <xsl:otherwise>
                  <!-- The edition has not date (a template) - hence the external document has no deadline -->
                  <xsl:attribute name="autoDeadline" />
                </xsl:otherwise>
              </xsl:choose>
              <!--
                Compute creation date-time
              -->
              <xsl:if test="not(@id)">
                <xsl:attribute name="creationDate">
                  <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
                </xsl:attribute>
              </xsl:if>
              <!--
                Compute creator and last modifier
              -->
              <xsl:if test="not(@id)">
                <creatorRef idref="{$context/lc:LoginContext/@UserId}" />
              </xsl:if>
              <xsl:if test="$context/oc:OperationContext/@Kind!='Upgrade'">
                <modifierRef idref="{$context/lc:LoginContext/@UserId}" />
              </xsl:if>
            </extDoc>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="creatorRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the user that created this external document. Automatically computed.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="modifierRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the user that last modified this external document. Automatically computed.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General external document description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="edition" minOccurs="1" name="editionRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the edition this external document belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="section" minOccurs="1" name="sectionRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the section this external document belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="zone" minOccurs="1" name="zoneRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the zone this external document belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="book" minOccurs="0" name="bookRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the book this external document belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="workstate" minOccurs="0" name="workstateRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the workstate this external document is currently in</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="image/jpeg image/gif image/png" gs:access="Content" minOccurs="0" name="thumbnail" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The optional external document thumbnail. Generated by the import process.</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Image" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="extDocPreviews" gs:mimeTypes="image/jpeg image/gif image/png" gs:access="Content" minOccurs="0" name="preview" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The optional external document preview - larger than the thumbnail. Generated by the import process.</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Image" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="extDocuments" gs:access="Content" minOccurs="0" name="data" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The external document itself. It is optional so that it is possible to create empty place-holder documents.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="docType" name="docTypeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The type of this document (InDesign, XPress, GN3 page etc.)</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:access="Content" minOccurs="0" name="pages">
              <xs:annotation>
                <xs:documentation>Descriptions of the pages of the external document</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element gs:mimeTypes="image/jpeg image/gif image/png" minOccurs="0" name="thumbnail" nillable="true" type="gn4:dataContent">
                          <xs:annotation>
                            <xs:documentation>The optional page thumbnail</xs:documentation>
                            <xs:appinfo>
                              <gs:ui mode="ReadOnly">
                                <gs:template kind="Image" />
                              </gs:ui>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:element>
                        <xs:element gs:volume="extDocPreviews" gs:mimeTypes="image/jpeg image/gif image/png" minOccurs="0" name="preview" nillable="true" type="gn4:dataContent">
                          <xs:annotation>
                            <xs:documentation>The optional page preview</xs:documentation>
                            <xs:appinfo>
                              <gs:ui mode="ReadOnly">
                                <gs:template kind="Image" />
                              </gs:ui>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:element>
                      </xs:sequence>
                      <xs:attribute name="name" type="gn4:tName">
                        <xs:annotation>
                          <xs:documentation>The name identifying the page ('1', '2', 'A1', 'xii' etc.)</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="0" name="formCode" type="xs:short" use="optional">
                        <xs:annotation>
                          <xs:documentation>The formCode of paper used for this page</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute gs:dimension="length:m" name="width" type="gn4:tNonNegativeInt" use="required">
                        <xs:annotation>
                          <xs:documentation>The page width</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute gs:dimension="length:m" name="height" type="gn4:tNonNegativeInt" use="required">
                        <xs:annotation>
                          <xs:documentation>The page height</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute gs:dimension="length:m" default="0" name="colW" type="gn4:tNonNegativeInt" use="optional">
                        <xs:annotation>
                          <xs:documentation>The column width</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute gs:dimension="length:m" default="0" name="interCol" type="gn4:tNonNegativeInt" use="optional">
                        <xs:annotation>
                          <xs:documentation>The column gutter</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute gs:dimension="length:m" default="0" name="modH" type="gn4:tNonNegativeInt" use="optional">
                        <xs:annotation>
                          <xs:documentation>The module height&gt;</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute gs:dimension="length:m" default="0" name="leftM" type="gn4:tNonNegativeInt" use="optional">
                        <xs:annotation>
                          <xs:documentation>The measure of left margin</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute gs:dimension="length:m" default="0" name="rightM" type="gn4:tNonNegativeInt" use="optional">
                        <xs:annotation>
                          <xs:documentation>The measure of right margin</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute gs:dimension="length:m" default="0" name="topM" type="gn4:tNonNegativeInt" use="optional">
                        <xs:annotation>
                          <xs:documentation>The measure of top margin</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute gs:dimension="length:m" default="0" name="bottomM" type="gn4:tNonNegativeInt" use="optional">
                        <xs:annotation>
                          <xs:documentation>The measure of bottom margin</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute gs:dimension="length:m" default="0" name="interMod" type="gn4:tNonNegativeInt" use="optional">
                        <xs:annotation>
                          <xs:documentation>The module gutter</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="false" name="twoSides" type="xs:boolean" use="optional">
                        <xs:annotation>
                          <xs:documentation>True if it's a double page</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:access="Content" minOccurs="0" name="imgs">
              <xs:annotation>
                <xs:documentation>List of editorial images associated with the document - as references</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" gs:refer="img" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence />
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:access="Content" minOccurs="0" name="articles">
              <xs:annotation>
                <xs:documentation>List of articles associated with the document - as references</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" gs:refer="article" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence />
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:access="Content" minOccurs="0" name="jumpParts">
              <xs:annotation>
                <xs:documentation>List of jump parts associated with the document - as references</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" gs:refer="extDocJumpPart" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence />
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:access="Content" minOccurs="0" name="variants">
              <xs:annotation>
                <xs:documentation>List of binary variants (typically PDF rendering of the external document) - as multi-reference</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="false" gs:refer="variantType" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence>
                            <xs:element gs:volume="variants" name="data" type="gn4:dataContent" />
                          </xs:sequence>
                          <xs:attribute name="modifiedDate" type="xs:dateTime" use="optional" />
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:extDocExtra" />
          </xs:sequence>
          <xs:attribute gs:compute="true" name="creationDate" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>When this external document was created. Automatically computed.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="autoDeadline" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically computed deadline date-time for this document.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="descName" type="gn4:tTitle" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically computed descriptive name</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="shortName" type="gn4:tTitle" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically computed short descriptive name</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:min" default="0" name="deadline" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>External document deadline in minutes relative to the edition deadline</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:extDocExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type110" name="layer">
    <xs:annotation>
      <xs:documentation>Base type for layers (collections of shapes, frames, images etc.)</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:object">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="gn4:tDescription">
            <xs:annotation>
              <xs:documentation>General layer description</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:storage="XmlText" gs:access="Content" minOccurs="0" name="content" type="gn4:LayerContent">
            <xs:annotation>
              <xs:documentation>Content of the layer (boxes, frames, rules, guides etc) stored as XML</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element gs:access="Content" minOccurs="0" name="imgs">
            <xs:annotation>
              <xs:documentation>Images used in this layer</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="false" gs:refer="img" minOccurs="0" maxOccurs="unbounded" name="ref">
                  <xs:complexType>
                    <xs:complexContent mixed="false">
                      <xs:extension base="gn4:reference">
                        <xs:attribute name="li" type="xs:int">
                          <xs:annotation>
                            <xs:documentation>Local identifier: arbitrary non-zero value that identifies the image within this layer. It is used to reference the image from within the 'content' XML</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute default="0" name="lockLevel" type="gn4:tLockLevel" use="optional">
                          <xs:annotation>
                            <xs:documentation>Maximum object lock level of all image elements in the layer - used to compute the same value in the 'pageLayers' attribute of the image.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:extension>
                    </xs:complexContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element gs:access="Content" minOccurs="0" name="localTxts">
            <xs:annotation>
              <xs:documentation>Local texts used in this layer</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element gs:refer="justContext" minOccurs="1" name="contextRef" type="gn4:reference">
                        <xs:annotation>
                          <xs:documentation>Reference to the justification context (format) to use for this text</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element gs:storage="XmlText" minOccurs="0" name="data" type="gn4:GeometryData">
                        <xs:annotation>
                          <xs:documentation>Other data associated with the text and stored as XML: copy fit parameters</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element name="tText" type="gn4:tT">
                        <xs:annotation>
                          <xs:documentation>The actual text with typographical markup</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                    <xs:attribute name="li" type="xs:int">
                      <xs:annotation>
                        <xs:documentation>Local identifier: arbitrary non-zero value that identifies the text within this layer. It is used to reference the text from within the 'content' XML</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="textH" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>Height of the justified text</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="overH" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>Overset height of the justified text</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute gs:access="Content" default="0" name="textOverN" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>Number of overset lines of the justified text</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute gs:access="Content" default="0" name="overfullLines" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>Number of overfull - i.e. exceeding their maximum width - lines of the justified text</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute gs:access="Content" default="0" name="nNoFitParas" type="xs:int" use="optional">
                      <xs:annotation>
                        <xs:documentation>Number of paragraph of the justified text that are not matching their associated maximum or minimum number of lines</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element gs:access="Content" name="inlineObjs">
            <xs:annotation>
              <xs:documentation>The inline pictures</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="false" gs:refer="folderObject" minOccurs="0" maxOccurs="unbounded" name="ref" type="gn4:reference" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="width" type="gn4:tNonNegativeInt" use="optional">
          <xs:annotation>
            <xs:documentation>The layer width</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="height" type="gn4:tNonNegativeInt" use="optional">
          <xs:annotation>
            <xs:documentation>The layer height</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="master">
    <xs:annotation>
      <xs:documentation>Master pages</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type111" gs:key="editionRef name" gs:descName="concat(gn4:editionRef/*/gn4:edition/@descName,' ',@name)" gs:shortName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:layer">
          <xs:sequence>
            <xs:element gs:refer="justContext" gs:access="Content" minOccurs="1" name="contextRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the format used by this master page</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="edition" minOccurs="1" name="editionRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the edition this master page belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="image/jpeg image/gif image/png" gs:access="Content" minOccurs="0" name="thumbnail" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The master object thumbnail - usually generated by Fred4</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Image" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:masterExtra" />
          </xs:sequence>
          <xs:attribute gs:access="Content" name="formCode" type="xs:short" use="required">
            <xs:annotation>
              <xs:documentation>The formCode of paper used for this master page</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" name="colW" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The column width</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" name="interCol" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The column gutter</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" name="modH" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The module height&gt;</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" name="leftM" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The measure of left margin</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" name="rightM" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The measure of right margin</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" name="topM" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The measure of top margin</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" name="bottomM" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The measure of bottom margin</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" name="interMod" type="gn4:tNonNegativeInt" use="required">
            <xs:annotation>
              <xs:documentation>The module gutter</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Content" name="twoSides" type="xs:boolean" use="required">
            <xs:annotation>
              <xs:documentation>True if it's a double page</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="Other" name="masterType" use="optional">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Left" />
                <xs:enumeration value="Right" />
                <xs:enumeration value="Double" />
                <xs:enumeration value="Other" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="leftB" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>The measure of left bleed</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="rightB" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>The measure of right bleed</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="topB" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>The measure of top bleed</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="bottomB" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>The measure of bottom bleed</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:masterExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="layerType">
    <xs:annotation>
      <xs:documentation>Possible types of a layer: editorial, advertisment etc.</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type112" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the layer type belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General layer type description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:layerTypeExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:layerTypeExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="pageLayer">
    <xs:annotation>
      <xs:documentation>Layers used by pages</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type113" gs:key="key" gs:descName="concat(gn4:pages/gn4:ref[1]/gn4:editionRef/*/gn4:edition/@descName,' ',@name)" gs:shortName="@name">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <pageLayer xmlns="">
              <pages>
                <xsl:variable name="pageLayers" select="nav:referencing/nav:referencingBy[@attrName='page.layers']/nav:refs" />
                <!-- 'Fake' test of the handle attribute to generate a dependency -->
                <xsl:if test="string($pageLayers/@handle)">
                  <xsl:for-each select="$pageLayers/nav:refObject/gn4:page">
                    <ref>
                      <xsl:attribute name="idref">
                        <xsl:value-of select="@id" />
                      </xsl:attribute>
                      <xsl:attribute name="number">
                        <xsl:value-of select="@number" />
                      </xsl:attribute>
                      <xsl:attribute name="autoDeadline">
                        <xsl:value-of select="@autoDeadline" />
                      </xsl:attribute>
                      <editionRef>
                        <xsl:attribute name="idref">
                          <xsl:value-of select="gn4:editionRef/@idref" />
                        </xsl:attribute>
                      </editionRef>
                      <sectionRef>
                        <xsl:attribute name="idref">
                          <xsl:value-of select="gn4:sectionRef/@idref" />
                        </xsl:attribute>
                      </sectionRef>
                      <zoneRef>
                        <xsl:attribute name="idref">
                          <xsl:value-of select="gn4:zoneRef/@idref" />
                        </xsl:attribute>
                      </zoneRef>
                      <!-- bookRef element is optional -->
                      <xsl:if test="string(gn4:bookRef/@idref)">
                        <bookRef>
                          <xsl:attribute name="idref">
                            <xsl:value-of select="gn4:bookRef/@idref" />
                          </xsl:attribute>
                        </bookRef>
                      </xsl:if>
                      <description>
                        <xsl:value-of select="@descName" />
                      </description>
                    </ref>
                  </xsl:for-each>
                </xsl:if>
              </pages>
              <txtGeos>
                <xsl:variable name="txtGeos" select="nav:referencing/nav:referencingBy[@attrName='txtGeometry.jumps']/nav:refs" />
                <!-- 'Fake' test of the handle attribute to generate a dependency -->
                <xsl:if test="string($txtGeos/@handle)">
                  <xsl:for-each select="$txtGeos/nav:refObject">
                    <ref>
                      <xsl:attribute name="idref">
                        <xsl:value-of select="@idref" />
                      </xsl:attribute>
                    </ref>
                  </xsl:for-each>
                </xsl:if>
              </txtGeos>
            </pageLayer>
          </gs:compute>
          <gs:init attrs="titleRef key">
            <pageLayer id="{@id}" key="{fn:createGuid()}" xmlns="">
              <titleRef idref="{gn4:editionRef/nav:refObject/gn4:edition/gn4:titleRef/@idref}" />
            </pageLayer>
          </gs:init>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:layer">
          <xs:sequence>
            <xs:element gs:refer="title" minOccurs="1" name="titleRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the title this layer belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="region" minOccurs="1" name="regionRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the associated region</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="layerType" minOccurs="1" name="layerTypeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Type of this layer: editorial, ads, etc.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:compute="true" minOccurs="0" name="txtGeos">
              <xs:annotation>
                <xs:documentation>Text Geometries used in this layer</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="false" gs:refer="txtGeometry" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference" />
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:compute="true" minOccurs="0" name="pages">
              <xs:annotation>
                <xs:documentation>Automatically computed list of pages containing this layer</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="false" gs:refer="page" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence>
                            <xs:element gs:refer="edition" minOccurs="0" name="editionRef" nillable="true" type="gn4:reference">
                              <xs:annotation>
                                <xs:documentation>The page's edition</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element gs:refer="section" minOccurs="0" name="sectionRef" nillable="true" type="gn4:reference">
                              <xs:annotation>
                                <xs:documentation>The page's section</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element gs:refer="zone" minOccurs="0" name="zoneRef" nillable="true" type="gn4:reference">
                              <xs:annotation>
                                <xs:documentation>The page's zone</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element gs:refer="book" minOccurs="0" name="bookRef" nillable="true" type="gn4:reference">
                              <xs:annotation>
                                <xs:documentation>The page's book</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="description" type="gn4:tDescription">
                              <xs:annotation>
                                <xs:documentation>The page's textual description</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                          </xs:sequence>
                          <xs:attribute name="number" type="xs:short">
                            <xs:annotation>
                              <xs:documentation>The page number</xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="autoDeadline" type="xs:dateTime" use="optional">
                            <xs:annotation>
                              <xs:documentation>The page deadline date-time</xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:pageLayerExtra" />
          </xs:sequence>
          <xs:attribute name="key" type="gn4:tName" use="required">
            <xs:annotation>
              <xs:documentation>Unique identifier of this layer</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Content" default="0" name="lockLevel" type="gn4:tLockLevel" use="optional">
            <xs:annotation>
              <xs:documentation>Layer lock level: only user with a lock level greater or equal can modify this layer</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:pageLayerExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="page">
    <xs:annotation>
      <xs:documentation>Pages</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type114" gs:key="editionRef sectionRef zoneRef number logicalPage bookRef" gs:descName="@descName" gs:shortName="@shortName" gs:stateAttr="workstateRef">
      <xs:annotation>
        <xs:appinfo>
          <gs:index attrs="masterRef" />
          <gs:compute inherit="true">
            <!--
              Semplified XSL transformation to compute descriptive names, deadline, creation date/time, 
              creator, last modifier
            -->
            <page xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns="">
              <xsl:variable name="edition" select="gn4:editionRef/*/gn4:edition" />
              <!--
                Compute the descritive names
              -->
              <xsl:variable name="title" select="$edition/gn4:titleRef/*/gn4:title" />
              <xsl:variable name="master" select="gn4:masterRef/*/gn4:master" />
              <!-- Create the XML nodes containing the variables that can be used in the name (in $vars) -->
              <xsl:variable name="sectionName" select="gn4:sectionRef/*/gn4:section/@name" />
              <xsl:variable name="zoneName" select="gn4:zoneRef/*/gn4:zone/@name" />
              <xsl:variable name="bookName" select="gn4:bookRef/*/gn4:book/@name" />
              <xsl:variable name="varsFragment">
                <var name="editionDescName" value="{$edition/@descName}" />
                <var name="editionShortName" value="{$edition/@shortName}" />
                <var name="sectionName" value="{substring($sectionName,1,string-length($sectionName)*number($sectionName!='-'))}" />
                <var name="zoneName" value="{substring($zoneName,1,string-length($zoneName)*number($zoneName!='-'))}" />
                <var name="bookName" value="{substring($bookName,1,string-length($bookName)*number($bookName!='-'))}" />
                <var name="number" value="{@number}" />
                <var name="leftNumber" value="{@number}" />
                <var name="rightNumber" value="{@number+1}" />
                <var name="color" value="{@leftColor}" />
                <var name="leftColor" value="{@leftColor}" />
                <var name="rightColor" value="{@rightColor}" />
                <var name="id" value="{fn:objectIdFromString(@id)}" />
                <var name="logicalPage" value="{@logicalPage}" />
                <var name="masterName" value="{$master/@name}" />
              </xsl:variable>
              <xsl:variable name="vars" select="msxsl:node-set($varsFragment)" />
              <!-- Create the XML nodes containing the templates for descriptive and short names (in $namesTemplate) -->
              <xsl:variable name="namesTemplateFragment">
                <!-- Template for descriptive name of single pages -->
                <template name="descName" isDouble="0">
                  <xsl:variable name="titleTemplate" select="$title/gn4:pageDescName" />
                  <xsl:choose>
                    <xsl:when test="$titleTemplate/*">
                      <xsl:copy-of select="$titleTemplate/*" />
                    </xsl:when>
                    <xsl:otherwise>
                      <var name="editionDescName" />
                      <text value=" " />
                      <var name="bookName" />
                      <text value=" " />
                      <var name="sectionName" />
                      <var-number name="number" format="#" />
                      <text value=" " />
                      <var name="zoneName" />
                    </xsl:otherwise>
                  </xsl:choose>
                </template>
                <!-- Template for short name of single pages  -->
                <template name="shortName" isDouble="0">
                  <xsl:variable name="titleTemplate" select="$title/gn4:pageShortName" />
                  <xsl:choose>
                    <xsl:when test="$titleTemplate/*">
                      <xsl:copy-of select="$titleTemplate/*" />
                    </xsl:when>
                    <xsl:otherwise>
                      <var name="bookName" />
                      <text value=" " />
                      <var name="sectionName" />
                      <var-number name="number" format="#" />
                      <text value=" " />
                      <var name="zoneName" />
                    </xsl:otherwise>
                  </xsl:choose>
                </template>
                <!-- Template for descriptive name of double pages  -->
                <template name="descName" isDouble="1">
                  <xsl:variable name="titleTemplate" select="$title/gn4:doublePageDescName" />
                  <xsl:choose>
                    <xsl:when test="$titleTemplate/*">
                      <xsl:copy-of select="$titleTemplate/*" />
                    </xsl:when>
                    <xsl:otherwise>
                      <var name="editionDescName" />
                      <text value=" " />
                      <var name="bookName" />
                      <text value=" " />
                      <var name="sectionName" />
                      <var-number name="leftNumber" format="#" />
                      <text value="-" />
                      <var-number name="rightNumber" format="#" />
                      <text value=" " />
                      <var name="zoneName" />
                    </xsl:otherwise>
                  </xsl:choose>
                </template>
                <!-- Template for short name of double pages  -->
                <template name="shortName" isDouble="1">
                  <xsl:variable name="titleTemplate" select="$title/gn4:doublePageShortName" />
                  <xsl:choose>
                    <xsl:when test="$titleTemplate/*">
                      <xsl:copy-of select="$titleTemplate/*" />
                    </xsl:when>
                    <xsl:otherwise>
                      <var name="bookName" />
                      <text value=" " />
                      <var name="sectionName" />
                      <var-number name="leftNumber" format="#" />
                      <text value="-" />
                      <var-number name="rightNumber" format="#" />
                      <text value=" " />
                      <var name="zoneName" />
                    </xsl:otherwise>
                  </xsl:choose>
                </template>
              </xsl:variable>
              <xsl:variable name="namesTemplate" select="msxsl:node-set($namesTemplateFragment)" />
              <!-- Create the names replacing the variable part in the templates  -->
              <xsl:variable name="isDouble" select="number($master/@twoSides='true')" />
              <xsl:for-each select="$namesTemplate/*[@isDouble=$isDouble]">
                <xsl:attribute name="{@name}">
                  <xsl:for-each select="*">
                    <xsl:choose>
                      <xsl:when test="local-name()='text'">
                        <xsl:value-of select="@value" />
                      </xsl:when>
                      <xsl:when test="local-name()='var'">
                        <xsl:variable name="name" select="@name" />
                        <xsl:value-of select="$vars/var[@name=$name]/@value" />
                      </xsl:when>
                      <xsl:when test="local-name()='var-number'">
                        <xsl:variable name="name" select="@name" />
                        <xsl:value-of select="format-number($vars/var[@name=$name]/@value,@format)" />
                      </xsl:when>
                      <xsl:when test="local-name()='var-boolean'">
                        <xsl:variable name="name" select="@name" />
                        <xsl:variable name="varValue" select="$vars/var[@name=$name]/@value" />
                        <xsl:choose>
                          <xsl:when test="$varValue='true' or $varValue='1'">
                            <xsl:value-of select="@true" />
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="@false" />
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:attribute>
              </xsl:for-each>
              <!--
                Compute the deadline
              -->
              <xsl:choose>
                <xsl:when test="string($edition/@date)">
                  <!-- 'Fake' test of the handle attribute to generate a dependency on the plates -->
                  <xsl:if test="string($edition/gn4:plates/@nav:handle)">
                    <!-- The edition has a date, compute the page deadline relative to it -->
                    <xsl:variable name="pageId" select="@id" />
                    <xsl:variable name="pagePlates" select="$edition/gn4:plates/gn4:item[gn4:pageRef0/@idref=$pageId or gn4:pageRef1/@idref=$pageId or gn4:pageRef2/@idref=$pageId or gn4:pageRef3/@idref=$pageId]" />
                    <xsl:variable name="pageDeadlineMinutes">
                      <xsl:choose>
                        <xsl:when test="string(@deadline)">
                          <xsl:value-of select="@deadline" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="0" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="deadlineMinutes">
                      <xsl:choose>
                        <xsl:when test="$pagePlates/*">
                          <xsl:value-of select="$pageDeadlineMinutes+fn:minNumber($pagePlates/@deadline)" />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="$pageDeadlineMinutes" />
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:attribute name="autoDeadline">
                      <xsl:value-of select="fn:addDuration($edition/@date,$deadlineMinutes*60)" />
                    </xsl:attribute>
                  </xsl:if>
                </xsl:when>
                <xsl:otherwise>
                  <!-- The edition has not date (a template) - hence the page has no deadline -->
                  <xsl:attribute name="autoDeadline" />
                </xsl:otherwise>
              </xsl:choose>
              <!--
                Compute creation date-time
              -->
              <xsl:if test="not(@id)">
                <xsl:attribute name="creationDate">
                  <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
                </xsl:attribute>
              </xsl:if>
              <!--
                Compute creator and last modifier
              -->
              <xsl:if test="not(@id)">
                <creatorRef idref="{$context/lc:LoginContext/@UserId}" />
              </xsl:if>
              <xsl:if test="$context/oc:OperationContext/@Kind!='Upgrade'">
                <modifierRef idref="{$context/lc:LoginContext/@UserId}" />
              </xsl:if>
            </page>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="creatorRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the user that created this page. Automatically computed.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="modifierRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the user that last modified this page. Automatically computed.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General page description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="edition" minOccurs="1" name="editionRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the edition this page belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="section" minOccurs="1" name="sectionRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the section this page belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="zone" minOccurs="1" name="zoneRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the zone this page belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="book" minOccurs="0" name="bookRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the book this page belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="master" minOccurs="1" name="masterRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the master page used by this page</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="workstate" minOccurs="0" name="workstateRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the workstate this page is currently in</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:access="Content" minOccurs="0" name="layers">
              <xs:annotation>
                <xs:documentation>The layers comprising this page</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" gs:refer="pageLayer" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:attribute gs:dimension="length:m" default="0" name="posX" type="xs:int" use="optional">
                            <xs:annotation>
                              <xs:documentation>Horizontal position of this layer within the page</xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute gs:dimension="length:m" default="0" name="posY" type="xs:int" use="optional">
                            <xs:annotation>
                              <xs:documentation>Vertical position of this layer within the page</xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:access="Special" minOccurs="0" name="variants">
              <xs:annotation>
                <xs:documentation>List of binary variants (typically PDF rendering of the page) - as multi-reference</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="false" gs:refer="variantType" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence>
                            <xs:element gs:volume="variants" name="data" type="gn4:dataContent" />
                          </xs:sequence>
                          <xs:attribute name="modifiedDate" type="xs:dateTime" use="optional" />
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:refer="MainCategories" minOccurs="0" name="cats" type="gn4:categoryRefs">
              <xs:annotation>
                <xs:documentation>Page categories.</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" displayCompletePath="false" showWeights="false">
                      <objectUI xmlns="">
                        <web maxRows="5" />
                      </objectUI>
                    </gs:template>
                  </gs:ui>
                  <gs:fullTextAttr exaMetaName="cats">
                  </gs:fullTextAttr>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="APMCategories" minOccurs="0" name="apmCategory" type="gn4:categoryRef">
              <xs:annotation>
                <xs:documentation>Automated Page Makeup category.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:pageExtra" />
          </xs:sequence>
          <xs:attribute gs:compute="true" name="creationDate" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>When this page has been created. Automatically computed.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="autoDeadline" type="xs:dateTime" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically computed deadline date-time for this page.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="descName" type="gn4:tTitle" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically computed descriptive name</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="shortName" type="gn4:tTitle" use="optional">
            <xs:annotation>
              <xs:documentation>Automatically computed short descriptive name</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="number" type="xs:short">
            <xs:annotation>
              <xs:documentation>The page number</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="false" name="logicalPage" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if this is a logical page</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="true" name="leftColor" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if the page is a color one. If the page is a double one specifies only if the left half use colors.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="true" name="rightColor" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if the right half of this page use colors. Used only for double pages.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="leftSpot" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Code of the spot color used by the page. coNone if no spot color used. If the page is a double one specifies the spot color for the left half.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="rightSpot" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Code of the spot color used by the right half of the page. coNone if no spot color used. Used only for double pages.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:min" default="0" name="deadline" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Page deadline in minutes relative to the edition deadline</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="externalUniqueId" type="gn4:tName" use="optional">
            <xs:annotation>
              <xs:documentation>Unique identifer for imported Beacon pages</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="externalSectionNumber" type="xs:short" use="optional">
            <xs:annotation>
              <xs:documentation>Number of the page in the Beacon sections</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="externalPrintableNumber" type="xs:short" use="optional">
            <xs:annotation>
              <xs:documentation>Printable number to automatically populate the folios (Beacon request) </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:pageExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="pagePreview">
    <xs:annotation>
      <xs:documentation>Pages preview</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type115" gs:key="pageRef optionsName">
      <xs:annotation>
        <xs:appinfo>
          <gs:index attrs="pageRef optionsName" />
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="page" minOccurs="1" name="pageRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The page this preview refers to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="pagePreviews" gs:access="Normal" minOccurs="0" name="preview" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The preview image.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the page preview belongs to - used to set access rights</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="optionsName">
            <xs:annotation>
              <xs:documentation>Options used to generate this preview</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="256" />
                <xs:whiteSpace value="collapse" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="extDocCompleteOptions">
    <xs:annotation>
      <xs:documentation>extDoc complete options</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type116" gs:key="titleRef">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <!-- 
              Semplified XSL transformation to compute the folder based on the 
              text this geometry belongs to and the list of linked layers and pages
            -->
            <extDocCompleteOptions xmlns="">
              <xsl:if test="not(@id)">
                <xsl:attribute name="creationDate">
                  <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
                </xsl:attribute>
              </xsl:if>
              <xsl:if test="not(@id)">
                <creatorRef>
                  <xsl:attribute name="idref">
                    <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                  </xsl:attribute>
                </creatorRef>
              </xsl:if>
              <xsl:if test="$context/oc:OperationContext/@Kind!='Upgrade'">
                <modifierRef>
                  <xsl:attribute name="idref">
                    <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                  </xsl:attribute>
                </modifierRef>
              </xsl:if>
            </extDocCompleteOptions>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="creatorRef" type="gn4:reference" />
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="modifierRef" type="gn4:reference" />
            <xs:element gs:refer="title" minOccurs="1" name="titleRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the title this complete options refers to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="printQueue" minOccurs="0" name="printQueueRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the title this complete options refers to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="workstate" minOccurs="0" name="workstateRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the workstate for use for the page complete workstate</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="variantTypeDoc" minOccurs="0" name="archiveVariant" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Archive PDF Variant Name</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute gs:compute="true" name="creationDate" type="xs:dateTime" use="optional" />
          <xs:attribute default="0" name="PDFPreset" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>Print PDF name InDesign PDF preset</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="single" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>
                If set to true will print single pages or spreads, This depends on the PDF preset settings which item to print pages or spreads.
                default: false
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="PDFFileNameOption" use="optional">
            <xs:annotation>
              <xs:documentation>PDFFileNameOption used for the PDF file name sent to the print queue. DescName use the DescName as the base of the file name. ShortName use the ShortName as base of the file name. Ask will ask the user for the file name before the document complete function.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="DescName" />
                <xs:enumeration value="ShortName" />
                <xs:enumeration value="Ask" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="extDocOptions">
    <xs:annotation>
      <xs:documentation>extDoc options</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type117" gs:key="titleRef">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <!-- 
              Semplified XSL transformation to compute the folder based on the 
              text this geometry belongs to and the list of linked layers and pages
            -->
            <extDocCompleteOptions xmlns="">
              <xsl:if test="not(@id)">
                <xsl:attribute name="creationDate">
                  <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
                </xsl:attribute>
              </xsl:if>
              <xsl:if test="not(@id)">
                <creatorRef>
                  <xsl:attribute name="idref">
                    <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                  </xsl:attribute>
                </creatorRef>
              </xsl:if>
              <xsl:if test="$context/oc:OperationContext/@Kind!='Upgrade'">
                <modifierRef>
                  <xsl:attribute name="idref">
                    <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                  </xsl:attribute>
                </modifierRef>
              </xsl:if>
            </extDocCompleteOptions>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="creatorRef" type="gn4:reference" />
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="modifierRef" type="gn4:reference" />
            <xs:element gs:refer="title" minOccurs="1" name="titleRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the title this options refers to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="variantTypeDoc" minOccurs="0" name="layoutVariantRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>
                  If set will save the layout into the variant of the given on the extDoc.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute gs:compute="true" name="creationDate" type="xs:dateTime" use="optional" />
          <xs:attribute default="0" name="DisableTextImport" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>
                If set to true will set the text boxes disabled import before document save.
                default: false
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="DisableGraphicImport" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>
                If set to true will set the graphic boxes disabled import before document save.
                default: false
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="SaveLayout" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>
                If set to true will save the layout into a variant on the extDoc, also needs to have the variant name set.
                default: false
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="extDocJumpPart">
    <xs:annotation>
      <xs:documentation>extDoc Jump Part</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type118" gs:key="txtRef seqN">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <!-- 
              Semplified XSL transformation to compute the folder based on the 
              text this geometry belongs to and the list of linked layers and pages
            -->
            <extDocJumpPart xmlns="">
              <xsl:if test="not(@id)">
                <xsl:attribute name="creationDate">
                  <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
                </xsl:attribute>
              </xsl:if>
              <xsl:if test="not(@id)">
                <creatorRef>
                  <xsl:attribute name="idref">
                    <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                  </xsl:attribute>
                </creatorRef>
              </xsl:if>
              <xsl:if test="$context/oc:OperationContext/@Kind!='Upgrade'">
                <modifierRef>
                  <xsl:attribute name="idref">
                    <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                  </xsl:attribute>
                </modifierRef>
              </xsl:if>
              <folderRef>
                <xsl:attribute name="idref">
                  <xsl:value-of select="gn4:txtRef/nav:refObject/*/gn4:folderRef/@idref" />
                </xsl:attribute>
              </folderRef>
            </extDocJumpPart>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="creatorRef" type="gn4:reference" />
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="modifierRef" type="gn4:reference" />
            <xs:element gs:refer="txt" minOccurs="1" name="txtRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the text this jump part refers to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="folder" gs:compute="true" minOccurs="1" name="folderRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the folder this jump story belongs to. Automatically computed from the text. Used to determine access permissions</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" refAttributes="folderParent" />
                  </gs:ui>
                  <gs:searchUi>
                    <gs:template kind="Tree" refAttributes="folderParent" />
                  </gs:searchUi>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="extDocJumpPart" minOccurs="0" maxOccurs="1" name="prevousRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the prevous part of the jump</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="variants" gs:access="Content" minOccurs="0" name="data" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The jump InCopy document.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="variants" gs:access="Special" minOccurs="0" name="layout" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The jump layout.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="variants" minOccurs="0" name="continueOn" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The continue on box text.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="variants" minOccurs="0" name="continueFrom" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The continue from box text.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute default="0" name="number" type="xs:short" use="optional">
            <xs:annotation>
              <xs:documentation>The page number.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="seqN" type="xs:short" use="optional">
            <xs:annotation>
              <xs:documentation>The seq number of the jump.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute default="0" name="endHyphen" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>If this jump part ends in a hyphen.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="creationDate" type="xs:dateTime" use="optional" />
          <xs:attribute gs:access="Content" default="0" name="nParas" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Number of paragraphs in the jump part.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Content" default="0" name="nLines" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Number of lines in the jump part.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Content" default="0" name="nWords" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Number of words in the jump part.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Content" default="0" name="nChars" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Number of characters in the jump part.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="continueTemplate">
    <xs:annotation>
      <xs:documentation>continue text template for the extDocJumpParts</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type119" gs:key="sectionRef">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <!-- 
              Semplified XSL transformation to compute the folder based on the 
              text this geometry belongs to and the list of linked layers and pages
            -->
            <continueTemplate xmlns="">
              <xsl:if test="not(@id)">
                <xsl:attribute name="creationDate">
                  <xsl:value-of select="$context/oc:OperationContext/@UtcNow" />
                </xsl:attribute>
              </xsl:if>
              <xsl:if test="not(@id)">
                <creatorRef>
                  <xsl:attribute name="idref">
                    <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                  </xsl:attribute>
                </creatorRef>
              </xsl:if>
              <xsl:if test="$context/oc:OperationContext/@Kind!='Upgrade'">
                <modifierRef>
                  <xsl:attribute name="idref">
                    <xsl:value-of select="$context/lc:LoginContext/@UserId" />
                  </xsl:attribute>
                </modifierRef>
              </xsl:if>
            </continueTemplate>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="creatorRef" type="gn4:reference" />
            <xs:element gs:refer="user" gs:compute="true" minOccurs="0" name="modifierRef" type="gn4:reference" />
            <xs:element gs:refer="section" minOccurs="1" name="sectionRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the section this jump part template belongs to.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="variants" minOccurs="0" name="continueOn" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The continue on box text.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="variants" minOccurs="0" name="continueFrom" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The continue from box text.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute gs:compute="true" name="creationDate" type="xs:dateTime" use="optional" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="txtGeometry">
    <xs:annotation>
      <xs:documentation>Geometry of a text</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type120" gs:key="txtRef regionRef">
      <xs:annotation>
        <xs:appinfo>
          <gs:index attrs="txtRef regionRef" />
          <gs:compute inherit="true">
            <!--
              Semplified XSL transformation to compute the folder based on the
              text this geometry belongs to and the list of linked layers and pages
            -->
            <txtGeometry xmlns="">
              <folderRef>
                <xsl:attribute name="idref">
                  <xsl:value-of select="gn4:txtRef/nav:refObject/*/gn4:folderRef/@idref" />
                </xsl:attribute>
              </folderRef>
            </txtGeometry>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="txt" minOccurs="1" name="txtRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the text this geometry refers to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="region" minOccurs="1" name="regionRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the region this geometry belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="folder" gs:compute="true" minOccurs="1" name="folderRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the folder this geometry belongs to. Automatically computed from the text. Used to determine access permissions</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" refAttributes="folderParent" />
                  </gs:ui>
                  <gs:searchUi>
                    <gs:template kind="Tree" refAttributes="folderParent" />
                  </gs:searchUi>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="justContext" gs:access="Special" minOccurs="1" name="contextRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the justification context (format) to use for this geometry</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" gs:access="Special" minOccurs="0" name="data" type="gn4:GeometryData">
              <xs:annotation>
                <xs:documentation>Other data associated with the geometry and stored as XML: copy fit parameters</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="localGeometry" type="gn4:LocalGeometry">
              <xs:annotation>
                <xs:documentation>Optional local geometry stored as XML</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:access="Special" minOccurs="0" name="jumps">
              <xs:annotation>
                <xs:documentation>List of layers this geometry is spread through. Empty if it is a local geometry. It has 'Special' access class so that it is possible to restrict its access separately from the rest of the geometry - allowing or denying linking permission.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" gs:refer="pageLayer" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:attribute name="li" type="xs:int">
                            <xs:annotation>
                              <xs:documentation>Local identifier: arbitrary non-zero value that identifies the geometry within the referenced layer. It is used to reference the geometry (and its associated text) from within the 'content' XML of the layer.</xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="hasFrames" type="xs:boolean">
                            <xs:annotation>
                              <xs:documentation>True if there are frames linked to this geometry in the layer, false if this is just a jump link without actual frames.</xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute default="0" name="lockLevel" type="gn4:tLockLevel" use="optional">
                            <xs:annotation>
                              <xs:documentation>Maximum object lock level of all frames linked to the geometry in the layer. Valid only if hasFrames is true.</xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:group ref="gn4:txtGeometryExtra" />
          </xs:sequence>
          <xs:attribute gs:access="Special" default="false" name="justified" type="xs:boolean" use="optional">
            <xs:annotation>
              <xs:documentation>True if the associated text has been justified in this geometry, and so the textH, overH etc. attribute contain valid values</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Special" default="0" name="textH" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Height of the associated text justified in this geometry</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Special" default="0" name="overH" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Overset height of the associated text justified in this geometry</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Special" default="0" name="textOverN" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Number of overset lines of the associated text justified in this geometry</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Special" default="0" name="overfullLines" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Number of overfull - i.e. exceeding their maximum width - lines of the associated text justified in this geometry</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Special" default="0" name="nNoFitParas" type="xs:int" use="optional">
            <xs:annotation>
              <xs:documentation>Number of paragraph of the associated text that are not matching their associated maximum or minimum number of lines when justified in this geometry</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:txtGeometryExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="lib">
    <xs:annotation>
      <xs:documentation>Libraries</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type121" gs:key="titleRef name" gs:shortName="@name" gs:descName="concat(gn4:titleRef/*/gn4:title/@name,':',@name)" gs:access="Protected">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General library description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="title" minOccurs="1" name="titleRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the title this library belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions to the library and its objects</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="contentPositions" minOccurs="0" name="contentPosition" type="gn4:categoryRefs">
              <xs:annotation>
                <xs:documentation>Content position categories (leading story, side story, ...)</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Tree" displayCompletePath="false" showWeights="false">
                      <objectUI xmlns="">
                        <web maxRows="5" />
                      </objectUI>
                    </gs:template>
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="APMCategories" minOccurs="0" name="apmCategory" type="gn4:categoryRef">
              <xs:annotation>
                <xs:documentation>Automated Page Makeup category.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:libExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:libExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="libObj">
    <xs:annotation>
      <xs:documentation>Library objects</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type122" gs:key="libRef name" gs:descName="concat(gn4:libRef/*/gn4:lib/gn4:titleRef/*/gn4:title/@name,':',gn4:libRef/*/gn4:lib/@name,':',@name)" gs:shortName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:layer">
          <xs:sequence>
            <xs:element gs:refer="lib" minOccurs="1" name="libRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the library this object belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="image/jpeg image/gif image/png" gs:access="Content" minOccurs="0" name="thumbnail" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The library object thumbnail - usually generated by Fred4</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Image" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="shape" nillable="true" type="gn4:tText">
              <xs:annotation>
                <xs:documentation>Shape information data: array thet define the verts coordiantes of every libObj Element</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="lgInfo" nillable="true" type="gn4:tXml">
              <xs:annotation>
                <xs:documentation>Frame info about libObj Logical Groups, saved as Serializable Dictionary</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:libObjExtra" />
          </xs:sequence>
          <xs:attributeGroup ref="gn4:libObjExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="tracyLayout">
    <xs:annotation>
      <xs:documentation>Collection of edition/pages used for production tracking</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type123" gs:key="titleRef name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>General layout description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="title" minOccurs="1" name="titleRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The title this layout belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" minOccurs="0" name="content" type="gn4:TracyLayout">
              <xs:annotation>
                <xs:documentation>The layout content: editions/pages references and associated parameters - stored as XML</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="webComment">
    <xs:annotation>
      <xs:documentation>A CMS user comment imported in the editorial system</xs:documentation>
      <xs:appinfo>
        <gs:index attrs="status" />
      </xs:appinfo>
    </xs:annotation>
    <xs:complexType id="type124" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="text" type="gn4:tText">
              <xs:annotation>
                <xs:documentation>Comment content</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="date" type="xs:dateTime">
              <xs:annotation>
                <xs:documentation>Comment post date/time</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="author" type="gn4:tName">
              <xs:annotation>
                <xs:documentation>Comment author name</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="folderObject" minOccurs="1" name="objectRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Reference to the object this comment is linked to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="securityScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the comment belongs to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:group ref="gn4:webCommentExtra" />
          </xs:sequence>
          <xs:attribute default="new" name="status" use="optional">
            <xs:annotation>
              <xs:documentation>Object status</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="new" />
                <xs:enumeration value="rejected" />
                <xs:enumeration value="public" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="toCheck" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag indicating if the comment has to be further investigated</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="gn4:webCommentExtra" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="textAttrib-tableName">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="tableName" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>
  <xs:simpleType name="textAttrib-nRows">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="nRows" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="1" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="textAttrib-rowN">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="rowN" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="textAttrib-nCols">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="nCols" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="1" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="textAttrib-colN">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="colN" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="textAttrib-f">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="f" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="1" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="textAttrib-fontName">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="fontName" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>
  <xs:simpleType name="textAttrib-fontFamily">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="fontFamily" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>
  <xs:simpleType name="textAttrib-it">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="it" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:boolean" />
  </xs:simpleType>
  <xs:simpleType name="textAttrib-bd">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="bd" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:boolean" />
  </xs:simpleType>
  <xs:simpleType name="textAttrib-small">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="small" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType gs:dimension="length:m" name="textAttrib-h">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="h" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType gs:dimension="length:m" name="textAttrib-w">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="w" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="textAttrib-co">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="co" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>
  <xs:simpleType name="textAttrib-gray">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="gray" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType gs:dimension="length:m" name="textAttrib-jmp">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="jmp" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="textAttrib-mode">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="mode" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="textAttrib-modeData">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="modeData" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="textAttrib-imgId">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="imgId" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="textAttrib-imgName">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="imgName" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>
  <xs:simpleType name="textAttrib-imgDummy">
    <xs:annotation>
      <xs:appinfo>
        <gs:_objectType textAttrib="imgDummy" />
      </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:boolean" />
  </xs:simpleType>
  <xs:group name="editorialObjects">
    <xs:annotation>
      <xs:documentation>List of the editorial non-abstract object types - to be used inside the 'objects' complex type declaration</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:justScope" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:fontLayout" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:font" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:justDef" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:justContext" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:geometry" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:hyphenation" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:printTemplate" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:printQueue" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:printConfig" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:img" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:txt" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:url" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:article" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:title" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:milestone" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:region" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:edition" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:master" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:layerType" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:pageLayer" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:page" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:txtGeometry" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:lib" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:libObj" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:audience" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:mailshot" />
    </xs:sequence>
  </xs:group>
  <xs:simpleType name="ISO3166-1">
    <xs:annotation>
      <xs:documentation>
        Standard country or region codes.
        Listed the two-letter code (alpha-2), three-letter code (alpha-3), numeric code, ISO 3166-2 code.
        Useful for the composition/specification of language tags - see
        http://www.w3.org/International/articles/language-tags/
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="AF">
        <xs:annotation>
          <xs:documentation>AFGHANISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AX">
        <xs:annotation>
          <xs:documentation>ÅLAND ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AL">
        <xs:annotation>
          <xs:documentation>ALBANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DZ">
        <xs:annotation>
          <xs:documentation>ALGERIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AS">
        <xs:annotation>
          <xs:documentation>AMERICAN SAMOA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AD">
        <xs:annotation>
          <xs:documentation>ANDORRA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AO">
        <xs:annotation>
          <xs:documentation>ANGOLA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AI">
        <xs:annotation>
          <xs:documentation>ANGUILLA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AQ">
        <xs:annotation>
          <xs:documentation>ANTARCTICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AG">
        <xs:annotation>
          <xs:documentation>ANTIGUA AND BARBUDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AR">
        <xs:annotation>
          <xs:documentation>ARGENTINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AM">
        <xs:annotation>
          <xs:documentation>ARMENIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AW">
        <xs:annotation>
          <xs:documentation>ARUBA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AU">
        <xs:annotation>
          <xs:documentation>AUSTRALIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AT">
        <xs:annotation>
          <xs:documentation>AUSTRIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AZ">
        <xs:annotation>
          <xs:documentation>AZERBAIJAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BS">
        <xs:annotation>
          <xs:documentation>BAHAMAS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BH">
        <xs:annotation>
          <xs:documentation>BAHRAIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BD">
        <xs:annotation>
          <xs:documentation>BANGLADESH</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BB">
        <xs:annotation>
          <xs:documentation>BARBADOS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BY">
        <xs:annotation>
          <xs:documentation>BELARUS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BE">
        <xs:annotation>
          <xs:documentation>BELGIUM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BZ">
        <xs:annotation>
          <xs:documentation>BELIZE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BJ">
        <xs:annotation>
          <xs:documentation>BENIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BM">
        <xs:annotation>
          <xs:documentation>BERMUDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BT">
        <xs:annotation>
          <xs:documentation>BHUTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BO">
        <xs:annotation>
          <xs:documentation>BOLIVIA, PLURINATIONAL STATE OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BA">
        <xs:annotation>
          <xs:documentation>BOSNIA AND HERZEGOVINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BW">
        <xs:annotation>
          <xs:documentation>BOTSWANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BV">
        <xs:annotation>
          <xs:documentation>BOUVET ISLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BR">
        <xs:annotation>
          <xs:documentation>BRAZIL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IO">
        <xs:annotation>
          <xs:documentation>BRITISH INDIAN OCEAN TERRITORY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BN">
        <xs:annotation>
          <xs:documentation>BRUNEI DARUSSALAM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BG">
        <xs:annotation>
          <xs:documentation>BULGARIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BF">
        <xs:annotation>
          <xs:documentation>BURKINA FASO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BI">
        <xs:annotation>
          <xs:documentation>BURUNDI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KH">
        <xs:annotation>
          <xs:documentation>CAMBODIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CM">
        <xs:annotation>
          <xs:documentation>CAMEROON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CA">
        <xs:annotation>
          <xs:documentation>CANADA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CV">
        <xs:annotation>
          <xs:documentation>CAPE VERDE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KY">
        <xs:annotation>
          <xs:documentation>CAYMAN ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CF">
        <xs:annotation>
          <xs:documentation>CENTRAL AFRICAN REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TD">
        <xs:annotation>
          <xs:documentation>CHAD</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CL">
        <xs:annotation>
          <xs:documentation>CHILE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CN">
        <xs:annotation>
          <xs:documentation>CHINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CX">
        <xs:annotation>
          <xs:documentation>CHRISTMAS ISLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CC">
        <xs:annotation>
          <xs:documentation>COCOS (KEELING) ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CO">
        <xs:annotation>
          <xs:documentation>COLOMBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KM">
        <xs:annotation>
          <xs:documentation>COMOROS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CG">
        <xs:annotation>
          <xs:documentation>CONGO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CD">
        <xs:annotation>
          <xs:documentation>CONGO, THE DEMOCRATIC REPUBLIC OF THE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CK">
        <xs:annotation>
          <xs:documentation>COOK ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CR">
        <xs:annotation>
          <xs:documentation>COSTA RICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CI">
        <xs:annotation>
          <xs:documentation>CÔTE D'IVOIRE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HR">
        <xs:annotation>
          <xs:documentation>CROATIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CU">
        <xs:annotation>
          <xs:documentation>CUBA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CY">
        <xs:annotation>
          <xs:documentation>CYPRUS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CZ">
        <xs:annotation>
          <xs:documentation>CZECH REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DK">
        <xs:annotation>
          <xs:documentation>DENMARK</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DJ">
        <xs:annotation>
          <xs:documentation>DJIBOUTI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DM">
        <xs:annotation>
          <xs:documentation>DOMINICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DO">
        <xs:annotation>
          <xs:documentation>DOMINICAN REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EC">
        <xs:annotation>
          <xs:documentation>ECUADOR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EG">
        <xs:annotation>
          <xs:documentation>EGYPT</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SV">
        <xs:annotation>
          <xs:documentation>EL SALVADOR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GQ">
        <xs:annotation>
          <xs:documentation>EQUATORIAL GUINEA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ER">
        <xs:annotation>
          <xs:documentation>ERITREA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EE">
        <xs:annotation>
          <xs:documentation>ESTONIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ET">
        <xs:annotation>
          <xs:documentation>ETHIOPIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FK">
        <xs:annotation>
          <xs:documentation>FALKLAND ISLANDS (MALVINAS)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FO">
        <xs:annotation>
          <xs:documentation>FAROE ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FJ">
        <xs:annotation>
          <xs:documentation>FIJI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FI">
        <xs:annotation>
          <xs:documentation>FINLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FR">
        <xs:annotation>
          <xs:documentation>FRANCE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GF">
        <xs:annotation>
          <xs:documentation>FRENCH GUIANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PF">
        <xs:annotation>
          <xs:documentation>FRENCH POLYNESIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TF">
        <xs:annotation>
          <xs:documentation>FRENCH SOUTHERN TERRITORIES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GA">
        <xs:annotation>
          <xs:documentation>GABON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GM">
        <xs:annotation>
          <xs:documentation>GAMBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GE">
        <xs:annotation>
          <xs:documentation>GEORGIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DE">
        <xs:annotation>
          <xs:documentation>GERMANY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GH">
        <xs:annotation>
          <xs:documentation>GHANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GI">
        <xs:annotation>
          <xs:documentation>GIBRALTAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GR">
        <xs:annotation>
          <xs:documentation>GREECE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GL">
        <xs:annotation>
          <xs:documentation>GREENLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GD">
        <xs:annotation>
          <xs:documentation>GRENADA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GP">
        <xs:annotation>
          <xs:documentation>GUADELOUPE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GU">
        <xs:annotation>
          <xs:documentation>GUAM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GT">
        <xs:annotation>
          <xs:documentation>GUATEMALA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GG">
        <xs:annotation>
          <xs:documentation>GUERNSEY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GN">
        <xs:annotation>
          <xs:documentation>GUINEA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GW">
        <xs:annotation>
          <xs:documentation>GUINEA-BISSAU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GY">
        <xs:annotation>
          <xs:documentation>GUYANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HT">
        <xs:annotation>
          <xs:documentation>HAITI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HM">
        <xs:annotation>
          <xs:documentation>HEARD ISLAND AND MCDONALD ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VA">
        <xs:annotation>
          <xs:documentation>HOLY SEE (VATICAN CITY STATE)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HN">
        <xs:annotation>
          <xs:documentation>HONDURAS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HK">
        <xs:annotation>
          <xs:documentation>HONG KONG</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HU">
        <xs:annotation>
          <xs:documentation>HUNGARY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IS">
        <xs:annotation>
          <xs:documentation>ICELAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IN">
        <xs:annotation>
          <xs:documentation>INDIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ID">
        <xs:annotation>
          <xs:documentation>INDONESIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IR">
        <xs:annotation>
          <xs:documentation>IRAN, ISLAMIC REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IQ">
        <xs:annotation>
          <xs:documentation>IRAQ</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IE">
        <xs:annotation>
          <xs:documentation>IRELAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IM">
        <xs:annotation>
          <xs:documentation>ISLE OF MAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IL">
        <xs:annotation>
          <xs:documentation>ISRAEL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IT">
        <xs:annotation>
          <xs:documentation>ITALY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JM">
        <xs:annotation>
          <xs:documentation>JAMAICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JP">
        <xs:annotation>
          <xs:documentation>JAPAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JE">
        <xs:annotation>
          <xs:documentation>JERSEY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JO">
        <xs:annotation>
          <xs:documentation>JORDAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KZ">
        <xs:annotation>
          <xs:documentation>KAZAKHSTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KE">
        <xs:annotation>
          <xs:documentation>KENYA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KI">
        <xs:annotation>
          <xs:documentation>KIRIBATI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KP">
        <xs:annotation>
          <xs:documentation>KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KR">
        <xs:annotation>
          <xs:documentation>KOREA, REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KW">
        <xs:annotation>
          <xs:documentation>KUWAIT</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KG">
        <xs:annotation>
          <xs:documentation>KYRGYZSTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LA">
        <xs:annotation>
          <xs:documentation>LAO PEOPLE'S DEMOCRATIC REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LV">
        <xs:annotation>
          <xs:documentation>LATVIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LB">
        <xs:annotation>
          <xs:documentation>LEBANON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LS">
        <xs:annotation>
          <xs:documentation>LESOTHO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LR">
        <xs:annotation>
          <xs:documentation>LIBERIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LY">
        <xs:annotation>
          <xs:documentation>LIBYAN ARAB JAMAHIRIYA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LI">
        <xs:annotation>
          <xs:documentation>LIECHTENSTEIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LT">
        <xs:annotation>
          <xs:documentation>LITHUANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LU">
        <xs:annotation>
          <xs:documentation>LUXEMBOURG</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MO">
        <xs:annotation>
          <xs:documentation>MACAO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MK">
        <xs:annotation>
          <xs:documentation>MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MG">
        <xs:annotation>
          <xs:documentation>MADAGASCAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MW">
        <xs:annotation>
          <xs:documentation>MALAWI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MY">
        <xs:annotation>
          <xs:documentation>MALAYSIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MV">
        <xs:annotation>
          <xs:documentation>MALDIVES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ML">
        <xs:annotation>
          <xs:documentation>MALI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MT">
        <xs:annotation>
          <xs:documentation>MALTA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MH">
        <xs:annotation>
          <xs:documentation>MARSHALL ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MQ">
        <xs:annotation>
          <xs:documentation>MARTINIQUE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MR">
        <xs:annotation>
          <xs:documentation>MAURITANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MU">
        <xs:annotation>
          <xs:documentation>MAURITIUS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="YT">
        <xs:annotation>
          <xs:documentation>MAYOTTE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MX">
        <xs:annotation>
          <xs:documentation>MEXICO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FM">
        <xs:annotation>
          <xs:documentation>MICRONESIA, FEDERATED STATES OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MD">
        <xs:annotation>
          <xs:documentation>MOLDOVA, REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MC">
        <xs:annotation>
          <xs:documentation>MONACO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MN">
        <xs:annotation>
          <xs:documentation>MONGOLIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ME">
        <xs:annotation>
          <xs:documentation>MONTENEGRO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MS">
        <xs:annotation>
          <xs:documentation>MONTSERRAT</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MA">
        <xs:annotation>
          <xs:documentation>MOROCCO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MZ">
        <xs:annotation>
          <xs:documentation>MOZAMBIQUE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MM">
        <xs:annotation>
          <xs:documentation>MYANMAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NA">
        <xs:annotation>
          <xs:documentation>NAMIBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NR">
        <xs:annotation>
          <xs:documentation>NAURU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NP">
        <xs:annotation>
          <xs:documentation>NEPAL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NL">
        <xs:annotation>
          <xs:documentation>NETHERLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AN">
        <xs:annotation>
          <xs:documentation>NETHERLANDS ANTILLES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NC">
        <xs:annotation>
          <xs:documentation>NEW CALEDONIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NZ">
        <xs:annotation>
          <xs:documentation>NEW ZEALAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NI">
        <xs:annotation>
          <xs:documentation>NICARAGUA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NE">
        <xs:annotation>
          <xs:documentation>NIGER</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NG">
        <xs:annotation>
          <xs:documentation>NIGERIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NU">
        <xs:annotation>
          <xs:documentation>NIUE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NF">
        <xs:annotation>
          <xs:documentation>NORFOLK ISLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MP">
        <xs:annotation>
          <xs:documentation>NORTHERN MARIANA ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NO">
        <xs:annotation>
          <xs:documentation>NORWAY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="OM">
        <xs:annotation>
          <xs:documentation>OMAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PK">
        <xs:annotation>
          <xs:documentation>PAKISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PW">
        <xs:annotation>
          <xs:documentation>PALAU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PS">
        <xs:annotation>
          <xs:documentation>PALESTINIAN TERRITORY, OCCUPIED</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PA">
        <xs:annotation>
          <xs:documentation>PANAMA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PG">
        <xs:annotation>
          <xs:documentation>PAPUA NEW GUINEA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PY">
        <xs:annotation>
          <xs:documentation>PARAGUAY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PE">
        <xs:annotation>
          <xs:documentation>PERU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PH">
        <xs:annotation>
          <xs:documentation>PHILIPPINES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PN">
        <xs:annotation>
          <xs:documentation>PITCAIRN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PL">
        <xs:annotation>
          <xs:documentation>POLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PT">
        <xs:annotation>
          <xs:documentation>PORTUGAL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PR">
        <xs:annotation>
          <xs:documentation>PUERTO RICO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="QA">
        <xs:annotation>
          <xs:documentation>QATAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RE">
        <xs:annotation>
          <xs:documentation>RÉUNION</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RO">
        <xs:annotation>
          <xs:documentation>ROMANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RU">
        <xs:annotation>
          <xs:documentation>RUSSIAN FEDERATION</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RW">
        <xs:annotation>
          <xs:documentation>RWANDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SH">
        <xs:annotation>
          <xs:documentation>SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KN">
        <xs:annotation>
          <xs:documentation>SAINT KITTS AND NEVIS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LC">
        <xs:annotation>
          <xs:documentation>SAINT LUCIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PM">
        <xs:annotation>
          <xs:documentation>SAINT PIERRE AND MIQUELON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VC">
        <xs:annotation>
          <xs:documentation>SAINT VINCENT AND THE GRENADINES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WS">
        <xs:annotation>
          <xs:documentation>SAMOA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SM">
        <xs:annotation>
          <xs:documentation>SAN MARINO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ST">
        <xs:annotation>
          <xs:documentation>SAO TOME AND PRINCIPE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SA">
        <xs:annotation>
          <xs:documentation>SAUDI ARABIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SN">
        <xs:annotation>
          <xs:documentation>SENEGAL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RS">
        <xs:annotation>
          <xs:documentation>SERBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SC">
        <xs:annotation>
          <xs:documentation>SEYCHELLES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SL">
        <xs:annotation>
          <xs:documentation>SIERRA LEONE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SG">
        <xs:annotation>
          <xs:documentation>SINGAPORE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SK">
        <xs:annotation>
          <xs:documentation>SLOVAKIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SI">
        <xs:annotation>
          <xs:documentation>SLOVENIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SB">
        <xs:annotation>
          <xs:documentation>SOLOMON ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SO">
        <xs:annotation>
          <xs:documentation>SOMALIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ZA">
        <xs:annotation>
          <xs:documentation>SOUTH AFRICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GS">
        <xs:annotation>
          <xs:documentation>SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ES">
        <xs:annotation>
          <xs:documentation>SPAIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LK">
        <xs:annotation>
          <xs:documentation>SRI LANKA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SD">
        <xs:annotation>
          <xs:documentation>SUDAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SR">
        <xs:annotation>
          <xs:documentation>SURINAME</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SJ">
        <xs:annotation>
          <xs:documentation>SVALBARD AND JAN MAYEN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SZ">
        <xs:annotation>
          <xs:documentation>SWAZILAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SE">
        <xs:annotation>
          <xs:documentation>SWEDEN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CH">
        <xs:annotation>
          <xs:documentation>SWITZERLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SY">
        <xs:annotation>
          <xs:documentation>SYRIAN ARAB REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TW">
        <xs:annotation>
          <xs:documentation>TAIWAN, PROVINCE OF CHINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TJ">
        <xs:annotation>
          <xs:documentation>TAJIKISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TZ">
        <xs:annotation>
          <xs:documentation>TANZANIA, UNITED REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TH">
        <xs:annotation>
          <xs:documentation>THAILAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TL">
        <xs:annotation>
          <xs:documentation>TIMOR-LESTE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TG">
        <xs:annotation>
          <xs:documentation>TOGO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TK">
        <xs:annotation>
          <xs:documentation>TOKELAU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TO">
        <xs:annotation>
          <xs:documentation>TONGA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TT">
        <xs:annotation>
          <xs:documentation>TRINIDAD AND TOBAGO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TN">
        <xs:annotation>
          <xs:documentation>TUNISIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TR">
        <xs:annotation>
          <xs:documentation>TURKEY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TM">
        <xs:annotation>
          <xs:documentation>TURKMENISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TC">
        <xs:annotation>
          <xs:documentation>TURKS AND CAICOS ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TV">
        <xs:annotation>
          <xs:documentation>TUVALU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UG">
        <xs:annotation>
          <xs:documentation>UGANDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UA">
        <xs:annotation>
          <xs:documentation>UKRAINE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AE">
        <xs:annotation>
          <xs:documentation>UNITED ARAB EMIRATES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GB">
        <xs:annotation>
          <xs:documentation>UNITED KINGDOM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="US">
        <xs:annotation>
          <xs:documentation>UNITED STATES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UM">
        <xs:annotation>
          <xs:documentation>UNITED STATES MINOR OUTLYING ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UY">
        <xs:annotation>
          <xs:documentation>URUGUAY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UZ">
        <xs:annotation>
          <xs:documentation>UZBEKISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VU">
        <xs:annotation>
          <xs:documentation>VANUATU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VE">
        <xs:annotation>
          <xs:documentation>VENEZUELA, BOLIVARIAN REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VN">
        <xs:annotation>
          <xs:documentation>VIET NAM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VG">
        <xs:annotation>
          <xs:documentation>VIRGIN ISLANDS, BRITISH</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VI">
        <xs:annotation>
          <xs:documentation>VIRGIN ISLANDS, U.S.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WF">
        <xs:annotation>
          <xs:documentation>WALLIS AND FUTUNA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EH">
        <xs:annotation>
          <xs:documentation>WESTERN SAHARA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="YE">
        <xs:annotation>
          <xs:documentation>YEMEN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ZM">
        <xs:annotation>
          <xs:documentation>ZAMBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ZW">
        <xs:annotation>
          <xs:documentation>ZIMBABWE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BQ">
        <xs:annotation>
          <xs:documentation>BONAIRE, SAINT EUSTATIUS AND SABA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CW">
        <xs:annotation>
          <xs:documentation>CURAÇAO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BL">
        <xs:annotation>
          <xs:documentation>SAINT BARTHÉLEMY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MF">
        <xs:annotation>
          <xs:documentation>SAINT MARTIN (FRENCH PART)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SX">
        <xs:annotation>
          <xs:documentation>SINT MAARTEN (DUTCH PART)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AFG">
        <xs:annotation>
          <xs:documentation>AFGHANISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ALA">
        <xs:annotation>
          <xs:documentation>ÅLAND ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ALB">
        <xs:annotation>
          <xs:documentation>ALBANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DZA">
        <xs:annotation>
          <xs:documentation>ALGERIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ASM">
        <xs:annotation>
          <xs:documentation>AMERICAN SAMOA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AND">
        <xs:annotation>
          <xs:documentation>ANDORRA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AGO">
        <xs:annotation>
          <xs:documentation>ANGOLA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AIA">
        <xs:annotation>
          <xs:documentation>ANGUILLA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ATA">
        <xs:annotation>
          <xs:documentation>ANTARCTICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ATG">
        <xs:annotation>
          <xs:documentation>ANTIGUA AND BARBUDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ARG">
        <xs:annotation>
          <xs:documentation>ARGENTINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ARM">
        <xs:annotation>
          <xs:documentation>ARMENIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ABW">
        <xs:annotation>
          <xs:documentation>ARUBA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AUS">
        <xs:annotation>
          <xs:documentation>AUSTRALIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AUT">
        <xs:annotation>
          <xs:documentation>AUSTRIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="AZE">
        <xs:annotation>
          <xs:documentation>AZERBAIJAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BHS">
        <xs:annotation>
          <xs:documentation>BAHAMAS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BHR">
        <xs:annotation>
          <xs:documentation>BAHRAIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BGD">
        <xs:annotation>
          <xs:documentation>BANGLADESH</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BRB">
        <xs:annotation>
          <xs:documentation>BARBADOS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BLR">
        <xs:annotation>
          <xs:documentation>BELARUS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BEL">
        <xs:annotation>
          <xs:documentation>BELGIUM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BLZ">
        <xs:annotation>
          <xs:documentation>BELIZE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BEN">
        <xs:annotation>
          <xs:documentation>BENIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BMU">
        <xs:annotation>
          <xs:documentation>BERMUDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BTN">
        <xs:annotation>
          <xs:documentation>BHUTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BOL">
        <xs:annotation>
          <xs:documentation>BOLIVIA, PLURINATIONAL STATE OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BES">
        <xs:annotation>
          <xs:documentation>BONAIRE, SAINT EUSTATIUS AND SABA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BIH">
        <xs:annotation>
          <xs:documentation>BOSNIA AND HERZEGOVINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BWA">
        <xs:annotation>
          <xs:documentation>BOTSWANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BVT">
        <xs:annotation>
          <xs:documentation>BOUVET ISLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BRA">
        <xs:annotation>
          <xs:documentation>BRAZIL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IOT">
        <xs:annotation>
          <xs:documentation>BRITISH INDIAN OCEAN TERRITORY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BRN">
        <xs:annotation>
          <xs:documentation>BRUNEI DARUSSALAM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BGR">
        <xs:annotation>
          <xs:documentation>BULGARIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BFA">
        <xs:annotation>
          <xs:documentation>BURKINA FASO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BDI">
        <xs:annotation>
          <xs:documentation>BURUNDI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KHM">
        <xs:annotation>
          <xs:documentation>CAMBODIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CMR">
        <xs:annotation>
          <xs:documentation>CAMEROON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CAN">
        <xs:annotation>
          <xs:documentation>CANADA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CPV">
        <xs:annotation>
          <xs:documentation>CAPE VERDE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CYM">
        <xs:annotation>
          <xs:documentation>CAYMAN ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CAF">
        <xs:annotation>
          <xs:documentation>CENTRAL AFRICAN REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TCD">
        <xs:annotation>
          <xs:documentation>CHAD</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CHL">
        <xs:annotation>
          <xs:documentation>CHILE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CHN">
        <xs:annotation>
          <xs:documentation>CHINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CXR">
        <xs:annotation>
          <xs:documentation>CHRISTMAS ISLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CCK">
        <xs:annotation>
          <xs:documentation>COCOS (KEELING) ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="COL">
        <xs:annotation>
          <xs:documentation>COLOMBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="COM">
        <xs:annotation>
          <xs:documentation>COMOROS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="COG">
        <xs:annotation>
          <xs:documentation>CONGO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="COD">
        <xs:annotation>
          <xs:documentation>CONGO, THE DEMOCRATIC REPUBLIC OF THE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="COK">
        <xs:annotation>
          <xs:documentation>COOK ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CRI">
        <xs:annotation>
          <xs:documentation>COSTA RICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CIV">
        <xs:annotation>
          <xs:documentation>CÔTE D'IVOIRE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HRV">
        <xs:annotation>
          <xs:documentation>CROATIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CUB">
        <xs:annotation>
          <xs:documentation>CUBA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CUW">
        <xs:annotation>
          <xs:documentation>CURAÇAO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CYP">
        <xs:annotation>
          <xs:documentation>CYPRUS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CZE">
        <xs:annotation>
          <xs:documentation>CZECH REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DNK">
        <xs:annotation>
          <xs:documentation>DENMARK</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DJI">
        <xs:annotation>
          <xs:documentation>DJIBOUTI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DMA">
        <xs:annotation>
          <xs:documentation>DOMINICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DOM">
        <xs:annotation>
          <xs:documentation>DOMINICAN REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ECU">
        <xs:annotation>
          <xs:documentation>ECUADOR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EGY">
        <xs:annotation>
          <xs:documentation>EGYPT</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SLV">
        <xs:annotation>
          <xs:documentation>EL SALVADOR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GNQ">
        <xs:annotation>
          <xs:documentation>EQUATORIAL GUINEA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ERI">
        <xs:annotation>
          <xs:documentation>ERITREA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EST">
        <xs:annotation>
          <xs:documentation>ESTONIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ETH">
        <xs:annotation>
          <xs:documentation>ETHIOPIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FLK">
        <xs:annotation>
          <xs:documentation>FALKLAND ISLANDS (MALVINAS)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FRO">
        <xs:annotation>
          <xs:documentation>FAROE ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FJI">
        <xs:annotation>
          <xs:documentation>FIJI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FIN">
        <xs:annotation>
          <xs:documentation>FINLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FRA">
        <xs:annotation>
          <xs:documentation>FRANCE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GUF">
        <xs:annotation>
          <xs:documentation>FRENCH GUIANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PYF">
        <xs:annotation>
          <xs:documentation>FRENCH POLYNESIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ATF">
        <xs:annotation>
          <xs:documentation>FRENCH SOUTHERN TERRITORIES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GAB">
        <xs:annotation>
          <xs:documentation>GABON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GMB">
        <xs:annotation>
          <xs:documentation>GAMBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GEO">
        <xs:annotation>
          <xs:documentation>GEORGIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEU">
        <xs:annotation>
          <xs:documentation>GERMANY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GHA">
        <xs:annotation>
          <xs:documentation>GHANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GIB">
        <xs:annotation>
          <xs:documentation>GIBRALTAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GRC">
        <xs:annotation>
          <xs:documentation>GREECE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GRL">
        <xs:annotation>
          <xs:documentation>GREENLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GRD">
        <xs:annotation>
          <xs:documentation>GRENADA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GLP">
        <xs:annotation>
          <xs:documentation>GUADELOUPE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GUM">
        <xs:annotation>
          <xs:documentation>GUAM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GTM">
        <xs:annotation>
          <xs:documentation>GUATEMALA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GGY">
        <xs:annotation>
          <xs:documentation>GUERNSEY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GIN">
        <xs:annotation>
          <xs:documentation>GUINEA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GNB">
        <xs:annotation>
          <xs:documentation>GUINEA-BISSAU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GUY">
        <xs:annotation>
          <xs:documentation>GUYANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HTI">
        <xs:annotation>
          <xs:documentation>HAITI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HMD">
        <xs:annotation>
          <xs:documentation>HEARD ISLAND AND MCDONALD ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VAT">
        <xs:annotation>
          <xs:documentation>HOLY SEE (VATICAN CITY STATE)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HND">
        <xs:annotation>
          <xs:documentation>HONDURAS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HKG">
        <xs:annotation>
          <xs:documentation>HONG KONG</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HUN">
        <xs:annotation>
          <xs:documentation>HUNGARY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISL">
        <xs:annotation>
          <xs:documentation>ICELAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IND">
        <xs:annotation>
          <xs:documentation>INDIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IDN">
        <xs:annotation>
          <xs:documentation>INDONESIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IRN">
        <xs:annotation>
          <xs:documentation>IRAN, ISLAMIC REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IRQ">
        <xs:annotation>
          <xs:documentation>IRAQ</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IRL">
        <xs:annotation>
          <xs:documentation>IRELAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="IMN">
        <xs:annotation>
          <xs:documentation>ISLE OF MAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISR">
        <xs:annotation>
          <xs:documentation>ISRAEL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ITA">
        <xs:annotation>
          <xs:documentation>ITALY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JAM">
        <xs:annotation>
          <xs:documentation>JAMAICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JPN">
        <xs:annotation>
          <xs:documentation>JAPAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JEY">
        <xs:annotation>
          <xs:documentation>JERSEY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="JOR">
        <xs:annotation>
          <xs:documentation>JORDAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KAZ">
        <xs:annotation>
          <xs:documentation>KAZAKHSTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KEN">
        <xs:annotation>
          <xs:documentation>KENYA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KIR">
        <xs:annotation>
          <xs:documentation>KIRIBATI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PRK">
        <xs:annotation>
          <xs:documentation>KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KOR">
        <xs:annotation>
          <xs:documentation>KOREA, REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KWT">
        <xs:annotation>
          <xs:documentation>KUWAIT</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KGZ">
        <xs:annotation>
          <xs:documentation>KYRGYZSTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LAO">
        <xs:annotation>
          <xs:documentation>LAO PEOPLE'S DEMOCRATIC REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LVA">
        <xs:annotation>
          <xs:documentation>LATVIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LBN">
        <xs:annotation>
          <xs:documentation>LEBANON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LSO">
        <xs:annotation>
          <xs:documentation>LESOTHO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LBR">
        <xs:annotation>
          <xs:documentation>LIBERIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LBY">
        <xs:annotation>
          <xs:documentation>LIBYAN ARAB JAMAHIRIYA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LIE">
        <xs:annotation>
          <xs:documentation>LIECHTENSTEIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LTU">
        <xs:annotation>
          <xs:documentation>LITHUANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LUX">
        <xs:annotation>
          <xs:documentation>LUXEMBOURG</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MAC">
        <xs:annotation>
          <xs:documentation>MACAO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MKD">
        <xs:annotation>
          <xs:documentation>MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MDG">
        <xs:annotation>
          <xs:documentation>MADAGASCAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MWI">
        <xs:annotation>
          <xs:documentation>MALAWI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MYS">
        <xs:annotation>
          <xs:documentation>MALAYSIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MDV">
        <xs:annotation>
          <xs:documentation>MALDIVES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MLI">
        <xs:annotation>
          <xs:documentation>MALI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MLT">
        <xs:annotation>
          <xs:documentation>MALTA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MHL">
        <xs:annotation>
          <xs:documentation>MARSHALL ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MTQ">
        <xs:annotation>
          <xs:documentation>MARTINIQUE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MRT">
        <xs:annotation>
          <xs:documentation>MAURITANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MUS">
        <xs:annotation>
          <xs:documentation>MAURITIUS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MYT">
        <xs:annotation>
          <xs:documentation>MAYOTTE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MEX">
        <xs:annotation>
          <xs:documentation>MEXICO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="FSM">
        <xs:annotation>
          <xs:documentation>MICRONESIA, FEDERATED STATES OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MDA">
        <xs:annotation>
          <xs:documentation>MOLDOVA, REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MCO">
        <xs:annotation>
          <xs:documentation>MONACO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MNG">
        <xs:annotation>
          <xs:documentation>MONGOLIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MNE">
        <xs:annotation>
          <xs:documentation>MONTENEGRO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MSR">
        <xs:annotation>
          <xs:documentation>MONTSERRAT</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MAR">
        <xs:annotation>
          <xs:documentation>MOROCCO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MOZ">
        <xs:annotation>
          <xs:documentation>MOZAMBIQUE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MMR">
        <xs:annotation>
          <xs:documentation>MYANMAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NAM">
        <xs:annotation>
          <xs:documentation>NAMIBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NRU">
        <xs:annotation>
          <xs:documentation>NAURU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NPL">
        <xs:annotation>
          <xs:documentation>NEPAL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NLD">
        <xs:annotation>
          <xs:documentation>NETHERLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ANT">
        <xs:annotation>
          <xs:documentation>NETHERLANDS ANTILLES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NCL">
        <xs:annotation>
          <xs:documentation>NEW CALEDONIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NZL">
        <xs:annotation>
          <xs:documentation>NEW ZEALAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NIC">
        <xs:annotation>
          <xs:documentation>NICARAGUA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NER">
        <xs:annotation>
          <xs:documentation>NIGER</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NGA">
        <xs:annotation>
          <xs:documentation>NIGERIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NIU">
        <xs:annotation>
          <xs:documentation>NIUE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NFK">
        <xs:annotation>
          <xs:documentation>NORFOLK ISLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MNP">
        <xs:annotation>
          <xs:documentation>NORTHERN MARIANA ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NOR">
        <xs:annotation>
          <xs:documentation>NORWAY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="OMN">
        <xs:annotation>
          <xs:documentation>OMAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PAK">
        <xs:annotation>
          <xs:documentation>PAKISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PLW">
        <xs:annotation>
          <xs:documentation>PALAU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PSE">
        <xs:annotation>
          <xs:documentation>PALESTINIAN TERRITORY, OCCUPIED</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PAN">
        <xs:annotation>
          <xs:documentation>PANAMA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PNG">
        <xs:annotation>
          <xs:documentation>PAPUA NEW GUINEA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PRY">
        <xs:annotation>
          <xs:documentation>PARAGUAY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PER">
        <xs:annotation>
          <xs:documentation>PERU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PHL">
        <xs:annotation>
          <xs:documentation>PHILIPPINES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PCN">
        <xs:annotation>
          <xs:documentation>PITCAIRN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="POL">
        <xs:annotation>
          <xs:documentation>POLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PRT">
        <xs:annotation>
          <xs:documentation>PORTUGAL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PRI">
        <xs:annotation>
          <xs:documentation>PUERTO RICO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="QAT">
        <xs:annotation>
          <xs:documentation>QATAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="REU">
        <xs:annotation>
          <xs:documentation>RÉUNION</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ROU">
        <xs:annotation>
          <xs:documentation>ROMANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RUS">
        <xs:annotation>
          <xs:documentation>RUSSIAN FEDERATION</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RWA">
        <xs:annotation>
          <xs:documentation>RWANDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BLM">
        <xs:annotation>
          <xs:documentation>SAINT BARTHÉLEMY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SHN">
        <xs:annotation>
          <xs:documentation>SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="KNA">
        <xs:annotation>
          <xs:documentation>SAINT KITTS AND NEVIS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LCA">
        <xs:annotation>
          <xs:documentation>SAINT LUCIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MAF">
        <xs:annotation>
          <xs:documentation>SAINT MARTIN (FRENCH PART)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SPM">
        <xs:annotation>
          <xs:documentation>SAINT PIERRE AND MIQUELON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VCT">
        <xs:annotation>
          <xs:documentation>SAINT VINCENT AND THE GRENADINES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WSM">
        <xs:annotation>
          <xs:documentation>SAMOA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SMR">
        <xs:annotation>
          <xs:documentation>SAN MARINO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="STP">
        <xs:annotation>
          <xs:documentation>SAO TOME AND PRINCIPE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SAU">
        <xs:annotation>
          <xs:documentation>SAUDI ARABIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SEN">
        <xs:annotation>
          <xs:documentation>SENEGAL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SRB">
        <xs:annotation>
          <xs:documentation>SERBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SYC">
        <xs:annotation>
          <xs:documentation>SEYCHELLES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SLE">
        <xs:annotation>
          <xs:documentation>SIERRA LEONE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SGP">
        <xs:annotation>
          <xs:documentation>SINGAPORE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SXM">
        <xs:annotation>
          <xs:documentation>SINT MAARTEN (DUTCH PART)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SVK">
        <xs:annotation>
          <xs:documentation>SLOVAKIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SVN">
        <xs:annotation>
          <xs:documentation>SLOVENIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SLB">
        <xs:annotation>
          <xs:documentation>SOLOMON ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SOM">
        <xs:annotation>
          <xs:documentation>SOMALIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ZAF">
        <xs:annotation>
          <xs:documentation>SOUTH AFRICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SGS">
        <xs:annotation>
          <xs:documentation>SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ESP">
        <xs:annotation>
          <xs:documentation>SPAIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LKA">
        <xs:annotation>
          <xs:documentation>SRI LANKA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SDN">
        <xs:annotation>
          <xs:documentation>SUDAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SUR">
        <xs:annotation>
          <xs:documentation>SURINAME</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SJM">
        <xs:annotation>
          <xs:documentation>SVALBARD AND JAN MAYEN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SWZ">
        <xs:annotation>
          <xs:documentation>SWAZILAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SWE">
        <xs:annotation>
          <xs:documentation>SWEDEN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CHE">
        <xs:annotation>
          <xs:documentation>SWITZERLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SYR">
        <xs:annotation>
          <xs:documentation>SYRIAN ARAB REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TWN">
        <xs:annotation>
          <xs:documentation>TAIWAN, PROVINCE OF CHINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TJK">
        <xs:annotation>
          <xs:documentation>TAJIKISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TZA">
        <xs:annotation>
          <xs:documentation>TANZANIA, UNITED REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="THA">
        <xs:annotation>
          <xs:documentation>THAILAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TLS">
        <xs:annotation>
          <xs:documentation>TIMOR-LESTE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TGO">
        <xs:annotation>
          <xs:documentation>TOGO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TKL">
        <xs:annotation>
          <xs:documentation>TOKELAU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TON">
        <xs:annotation>
          <xs:documentation>TONGA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TTO">
        <xs:annotation>
          <xs:documentation>TRINIDAD AND TOBAGO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TUN">
        <xs:annotation>
          <xs:documentation>TUNISIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TUR">
        <xs:annotation>
          <xs:documentation>TURKEY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TKM">
        <xs:annotation>
          <xs:documentation>TURKMENISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TCA">
        <xs:annotation>
          <xs:documentation>TURKS AND CAICOS ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TUV">
        <xs:annotation>
          <xs:documentation>TUVALU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UGA">
        <xs:annotation>
          <xs:documentation>UGANDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UKR">
        <xs:annotation>
          <xs:documentation>UKRAINE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ARE">
        <xs:annotation>
          <xs:documentation>UNITED ARAB EMIRATES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GBR">
        <xs:annotation>
          <xs:documentation>UNITED KINGDOM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="USA">
        <xs:annotation>
          <xs:documentation>UNITED STATES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UMI">
        <xs:annotation>
          <xs:documentation>UNITED STATES MINOR OUTLYING ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="URY">
        <xs:annotation>
          <xs:documentation>URUGUAY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UZB">
        <xs:annotation>
          <xs:documentation>UZBEKISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VUT">
        <xs:annotation>
          <xs:documentation>VANUATU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VEN">
        <xs:annotation>
          <xs:documentation>VENEZUELA, BOLIVARIAN REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VNM">
        <xs:annotation>
          <xs:documentation>VIET NAM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VGB">
        <xs:annotation>
          <xs:documentation>VIRGIN ISLANDS, BRITISH</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="VIR">
        <xs:annotation>
          <xs:documentation>VIRGIN ISLANDS, U.S.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WLF">
        <xs:annotation>
          <xs:documentation>WALLIS AND FUTUNA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ESH">
        <xs:annotation>
          <xs:documentation>WESTERN SAHARA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="YEM">
        <xs:annotation>
          <xs:documentation>YEMEN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ZMB">
        <xs:annotation>
          <xs:documentation>ZAMBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ZWE">
        <xs:annotation>
          <xs:documentation>ZIMBABWE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="4">
        <xs:annotation>
          <xs:documentation>AFGHANISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="248">
        <xs:annotation>
          <xs:documentation>ÅLAND ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="8">
        <xs:annotation>
          <xs:documentation>ALBANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="12">
        <xs:annotation>
          <xs:documentation>ALGERIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="16">
        <xs:annotation>
          <xs:documentation>AMERICAN SAMOA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="20">
        <xs:annotation>
          <xs:documentation>ANDORRA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="24">
        <xs:annotation>
          <xs:documentation>ANGOLA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="660">
        <xs:annotation>
          <xs:documentation>ANGUILLA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="10">
        <xs:annotation>
          <xs:documentation>ANTARCTICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="28">
        <xs:annotation>
          <xs:documentation>ANTIGUA AND BARBUDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="32">
        <xs:annotation>
          <xs:documentation>ARGENTINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="51">
        <xs:annotation>
          <xs:documentation>ARMENIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="533">
        <xs:annotation>
          <xs:documentation>ARUBA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="36">
        <xs:annotation>
          <xs:documentation>AUSTRALIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="40">
        <xs:annotation>
          <xs:documentation>AUSTRIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="31">
        <xs:annotation>
          <xs:documentation>AZERBAIJAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="44">
        <xs:annotation>
          <xs:documentation>BAHAMAS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="48">
        <xs:annotation>
          <xs:documentation>BAHRAIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="50">
        <xs:annotation>
          <xs:documentation>BANGLADESH</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="52">
        <xs:annotation>
          <xs:documentation>BARBADOS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="112">
        <xs:annotation>
          <xs:documentation>BELARUS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="56">
        <xs:annotation>
          <xs:documentation>BELGIUM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="84">
        <xs:annotation>
          <xs:documentation>BELIZE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="204">
        <xs:annotation>
          <xs:documentation>BENIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="60">
        <xs:annotation>
          <xs:documentation>BERMUDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="64">
        <xs:annotation>
          <xs:documentation>BHUTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="68">
        <xs:annotation>
          <xs:documentation>BOLIVIA, PLURINATIONAL STATE OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="535">
        <xs:annotation>
          <xs:documentation>BONAIRE, SAINT EUSTATIUS AND SABA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="70">
        <xs:annotation>
          <xs:documentation>BOSNIA AND HERZEGOVINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="72">
        <xs:annotation>
          <xs:documentation>BOTSWANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="74">
        <xs:annotation>
          <xs:documentation>BOUVET ISLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="76">
        <xs:annotation>
          <xs:documentation>BRAZIL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="86">
        <xs:annotation>
          <xs:documentation>BRITISH INDIAN OCEAN TERRITORY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="96">
        <xs:annotation>
          <xs:documentation>BRUNEI DARUSSALAM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="100">
        <xs:annotation>
          <xs:documentation>BULGARIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="854">
        <xs:annotation>
          <xs:documentation>BURKINA FASO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="108">
        <xs:annotation>
          <xs:documentation>BURUNDI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="116">
        <xs:annotation>
          <xs:documentation>CAMBODIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="120">
        <xs:annotation>
          <xs:documentation>CAMEROON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="124">
        <xs:annotation>
          <xs:documentation>CANADA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="132">
        <xs:annotation>
          <xs:documentation>CAPE VERDE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="136">
        <xs:annotation>
          <xs:documentation>CAYMAN ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="140">
        <xs:annotation>
          <xs:documentation>CENTRAL AFRICAN REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="148">
        <xs:annotation>
          <xs:documentation>CHAD</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="152">
        <xs:annotation>
          <xs:documentation>CHILE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="156">
        <xs:annotation>
          <xs:documentation>CHINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="162">
        <xs:annotation>
          <xs:documentation>CHRISTMAS ISLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="166">
        <xs:annotation>
          <xs:documentation>COCOS (KEELING) ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="170">
        <xs:annotation>
          <xs:documentation>COLOMBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="174">
        <xs:annotation>
          <xs:documentation>COMOROS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="178">
        <xs:annotation>
          <xs:documentation>CONGO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="180">
        <xs:annotation>
          <xs:documentation>CONGO, THE DEMOCRATIC REPUBLIC OF THE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="184">
        <xs:annotation>
          <xs:documentation>COOK ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="188">
        <xs:annotation>
          <xs:documentation>COSTA RICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="384">
        <xs:annotation>
          <xs:documentation>CÔTE D'IVOIRE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="191">
        <xs:annotation>
          <xs:documentation>CROATIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="192">
        <xs:annotation>
          <xs:documentation>CUBA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="531">
        <xs:annotation>
          <xs:documentation>CURAÇAO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="196">
        <xs:annotation>
          <xs:documentation>CYPRUS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="203">
        <xs:annotation>
          <xs:documentation>CZECH REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="208">
        <xs:annotation>
          <xs:documentation>DENMARK</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="262">
        <xs:annotation>
          <xs:documentation>DJIBOUTI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="212">
        <xs:annotation>
          <xs:documentation>DOMINICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="214">
        <xs:annotation>
          <xs:documentation>DOMINICAN REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="218">
        <xs:annotation>
          <xs:documentation>ECUADOR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="818">
        <xs:annotation>
          <xs:documentation>EGYPT</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="222">
        <xs:annotation>
          <xs:documentation>EL SALVADOR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="226">
        <xs:annotation>
          <xs:documentation>EQUATORIAL GUINEA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="232">
        <xs:annotation>
          <xs:documentation>ERITREA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="233">
        <xs:annotation>
          <xs:documentation>ESTONIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="231">
        <xs:annotation>
          <xs:documentation>ETHIOPIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="238">
        <xs:annotation>
          <xs:documentation>FALKLAND ISLANDS (MALVINAS)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="234">
        <xs:annotation>
          <xs:documentation>FAROE ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="242">
        <xs:annotation>
          <xs:documentation>FIJI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="246">
        <xs:annotation>
          <xs:documentation>FINLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="250">
        <xs:annotation>
          <xs:documentation>FRANCE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="254">
        <xs:annotation>
          <xs:documentation>FRENCH GUIANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="258">
        <xs:annotation>
          <xs:documentation>FRENCH POLYNESIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="260">
        <xs:annotation>
          <xs:documentation>FRENCH SOUTHERN TERRITORIES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="266">
        <xs:annotation>
          <xs:documentation>GABON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="270">
        <xs:annotation>
          <xs:documentation>GAMBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="268">
        <xs:annotation>
          <xs:documentation>GEORGIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="276">
        <xs:annotation>
          <xs:documentation>GERMANY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="288">
        <xs:annotation>
          <xs:documentation>GHANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="292">
        <xs:annotation>
          <xs:documentation>GIBRALTAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="300">
        <xs:annotation>
          <xs:documentation>GREECE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="304">
        <xs:annotation>
          <xs:documentation>GREENLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="308">
        <xs:annotation>
          <xs:documentation>GRENADA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="312">
        <xs:annotation>
          <xs:documentation>GUADELOUPE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="316">
        <xs:annotation>
          <xs:documentation>GUAM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="320">
        <xs:annotation>
          <xs:documentation>GUATEMALA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="831">
        <xs:annotation>
          <xs:documentation>GUERNSEY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="324">
        <xs:annotation>
          <xs:documentation>GUINEA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="624">
        <xs:annotation>
          <xs:documentation>GUINEA-BISSAU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="328">
        <xs:annotation>
          <xs:documentation>GUYANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="332">
        <xs:annotation>
          <xs:documentation>HAITI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="334">
        <xs:annotation>
          <xs:documentation>HEARD ISLAND AND MCDONALD ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="336">
        <xs:annotation>
          <xs:documentation>HOLY SEE (VATICAN CITY STATE)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="340">
        <xs:annotation>
          <xs:documentation>HONDURAS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="344">
        <xs:annotation>
          <xs:documentation>HONG KONG</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="348">
        <xs:annotation>
          <xs:documentation>HUNGARY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="352">
        <xs:annotation>
          <xs:documentation>ICELAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="356">
        <xs:annotation>
          <xs:documentation>INDIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="360">
        <xs:annotation>
          <xs:documentation>INDONESIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="364">
        <xs:annotation>
          <xs:documentation>IRAN, ISLAMIC REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="368">
        <xs:annotation>
          <xs:documentation>IRAQ</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="372">
        <xs:annotation>
          <xs:documentation>IRELAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="833">
        <xs:annotation>
          <xs:documentation>ISLE OF MAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="376">
        <xs:annotation>
          <xs:documentation>ISRAEL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="380">
        <xs:annotation>
          <xs:documentation>ITALY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="388">
        <xs:annotation>
          <xs:documentation>JAMAICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="392">
        <xs:annotation>
          <xs:documentation>JAPAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="832">
        <xs:annotation>
          <xs:documentation>JERSEY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="400">
        <xs:annotation>
          <xs:documentation>JORDAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="398">
        <xs:annotation>
          <xs:documentation>KAZAKHSTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="404">
        <xs:annotation>
          <xs:documentation>KENYA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="296">
        <xs:annotation>
          <xs:documentation>KIRIBATI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="408">
        <xs:annotation>
          <xs:documentation>KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="410">
        <xs:annotation>
          <xs:documentation>KOREA, REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="414">
        <xs:annotation>
          <xs:documentation>KUWAIT</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="417">
        <xs:annotation>
          <xs:documentation>KYRGYZSTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="418">
        <xs:annotation>
          <xs:documentation>LAO PEOPLE'S DEMOCRATIC REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="428">
        <xs:annotation>
          <xs:documentation>LATVIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="422">
        <xs:annotation>
          <xs:documentation>LEBANON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="426">
        <xs:annotation>
          <xs:documentation>LESOTHO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="430">
        <xs:annotation>
          <xs:documentation>LIBERIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="434">
        <xs:annotation>
          <xs:documentation>LIBYAN ARAB JAMAHIRIYA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="438">
        <xs:annotation>
          <xs:documentation>LIECHTENSTEIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="440">
        <xs:annotation>
          <xs:documentation>LITHUANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="442">
        <xs:annotation>
          <xs:documentation>LUXEMBOURG</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="446">
        <xs:annotation>
          <xs:documentation>MACAO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="807">
        <xs:annotation>
          <xs:documentation>MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="450">
        <xs:annotation>
          <xs:documentation>MADAGASCAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="454">
        <xs:annotation>
          <xs:documentation>MALAWI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="458">
        <xs:annotation>
          <xs:documentation>MALAYSIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="462">
        <xs:annotation>
          <xs:documentation>MALDIVES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="466">
        <xs:annotation>
          <xs:documentation>MALI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="470">
        <xs:annotation>
          <xs:documentation>MALTA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="584">
        <xs:annotation>
          <xs:documentation>MARSHALL ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="474">
        <xs:annotation>
          <xs:documentation>MARTINIQUE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="478">
        <xs:annotation>
          <xs:documentation>MAURITANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="480">
        <xs:annotation>
          <xs:documentation>MAURITIUS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="175">
        <xs:annotation>
          <xs:documentation>MAYOTTE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="484">
        <xs:annotation>
          <xs:documentation>MEXICO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="583">
        <xs:annotation>
          <xs:documentation>MICRONESIA, FEDERATED STATES OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="498">
        <xs:annotation>
          <xs:documentation>MOLDOVA, REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="492">
        <xs:annotation>
          <xs:documentation>MONACO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="496">
        <xs:annotation>
          <xs:documentation>MONGOLIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="499">
        <xs:annotation>
          <xs:documentation>MONTENEGRO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="500">
        <xs:annotation>
          <xs:documentation>MONTSERRAT</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="504">
        <xs:annotation>
          <xs:documentation>MOROCCO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="508">
        <xs:annotation>
          <xs:documentation>MOZAMBIQUE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="104">
        <xs:annotation>
          <xs:documentation>MYANMAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="516">
        <xs:annotation>
          <xs:documentation>NAMIBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="520">
        <xs:annotation>
          <xs:documentation>NAURU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="524">
        <xs:annotation>
          <xs:documentation>NEPAL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="528">
        <xs:annotation>
          <xs:documentation>NETHERLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="599">
        <xs:annotation>
          <xs:documentation>NETHERLANDS ANTILLES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="540">
        <xs:annotation>
          <xs:documentation>NEW CALEDONIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="554">
        <xs:annotation>
          <xs:documentation>NEW ZEALAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="558">
        <xs:annotation>
          <xs:documentation>NICARAGUA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="562">
        <xs:annotation>
          <xs:documentation>NIGER</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="566">
        <xs:annotation>
          <xs:documentation>NIGERIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="570">
        <xs:annotation>
          <xs:documentation>NIUE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="574">
        <xs:annotation>
          <xs:documentation>NORFOLK ISLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="580">
        <xs:annotation>
          <xs:documentation>NORTHERN MARIANA ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="578">
        <xs:annotation>
          <xs:documentation>NORWAY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="512">
        <xs:annotation>
          <xs:documentation>OMAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="586">
        <xs:annotation>
          <xs:documentation>PAKISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="585">
        <xs:annotation>
          <xs:documentation>PALAU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="275">
        <xs:annotation>
          <xs:documentation>PALESTINIAN TERRITORY, OCCUPIED</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="591">
        <xs:annotation>
          <xs:documentation>PANAMA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="598">
        <xs:annotation>
          <xs:documentation>PAPUA NEW GUINEA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="600">
        <xs:annotation>
          <xs:documentation>PARAGUAY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="604">
        <xs:annotation>
          <xs:documentation>PERU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="608">
        <xs:annotation>
          <xs:documentation>PHILIPPINES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="612">
        <xs:annotation>
          <xs:documentation>PITCAIRN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="616">
        <xs:annotation>
          <xs:documentation>POLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="620">
        <xs:annotation>
          <xs:documentation>PORTUGAL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="630">
        <xs:annotation>
          <xs:documentation>PUERTO RICO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="634">
        <xs:annotation>
          <xs:documentation>QATAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="638">
        <xs:annotation>
          <xs:documentation>RÉUNION</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="642">
        <xs:annotation>
          <xs:documentation>ROMANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="643">
        <xs:annotation>
          <xs:documentation>RUSSIAN FEDERATION</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="646">
        <xs:annotation>
          <xs:documentation>RWANDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="652">
        <xs:annotation>
          <xs:documentation>SAINT BARTHÉLEMY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="654">
        <xs:annotation>
          <xs:documentation>SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="659">
        <xs:annotation>
          <xs:documentation>SAINT KITTS AND NEVIS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="662">
        <xs:annotation>
          <xs:documentation>SAINT LUCIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="663">
        <xs:annotation>
          <xs:documentation>SAINT MARTIN (FRENCH PART)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="666">
        <xs:annotation>
          <xs:documentation>SAINT PIERRE AND MIQUELON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="670">
        <xs:annotation>
          <xs:documentation>SAINT VINCENT AND THE GRENADINES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="882">
        <xs:annotation>
          <xs:documentation>SAMOA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="674">
        <xs:annotation>
          <xs:documentation>SAN MARINO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="678">
        <xs:annotation>
          <xs:documentation>SAO TOME AND PRINCIPE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="682">
        <xs:annotation>
          <xs:documentation>SAUDI ARABIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="686">
        <xs:annotation>
          <xs:documentation>SENEGAL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="688">
        <xs:annotation>
          <xs:documentation>SERBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="690">
        <xs:annotation>
          <xs:documentation>SEYCHELLES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="694">
        <xs:annotation>
          <xs:documentation>SIERRA LEONE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="702">
        <xs:annotation>
          <xs:documentation>SINGAPORE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="534">
        <xs:annotation>
          <xs:documentation>SINT MAARTEN (DUTCH PART)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="703">
        <xs:annotation>
          <xs:documentation>SLOVAKIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="705">
        <xs:annotation>
          <xs:documentation>SLOVENIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="90">
        <xs:annotation>
          <xs:documentation>SOLOMON ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="706">
        <xs:annotation>
          <xs:documentation>SOMALIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="710">
        <xs:annotation>
          <xs:documentation>SOUTH AFRICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="239">
        <xs:annotation>
          <xs:documentation>SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="724">
        <xs:annotation>
          <xs:documentation>SPAIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="144">
        <xs:annotation>
          <xs:documentation>SRI LANKA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="736">
        <xs:annotation>
          <xs:documentation>SUDAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="740">
        <xs:annotation>
          <xs:documentation>SURINAME</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="744">
        <xs:annotation>
          <xs:documentation>SVALBARD AND JAN MAYEN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="748">
        <xs:annotation>
          <xs:documentation>SWAZILAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="752">
        <xs:annotation>
          <xs:documentation>SWEDEN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="756">
        <xs:annotation>
          <xs:documentation>SWITZERLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="760">
        <xs:annotation>
          <xs:documentation>SYRIAN ARAB REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="158">
        <xs:annotation>
          <xs:documentation>TAIWAN, PROVINCE OF CHINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="762">
        <xs:annotation>
          <xs:documentation>TAJIKISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="834">
        <xs:annotation>
          <xs:documentation>TANZANIA, UNITED REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="764">
        <xs:annotation>
          <xs:documentation>THAILAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="626">
        <xs:annotation>
          <xs:documentation>TIMOR-LESTE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="768">
        <xs:annotation>
          <xs:documentation>TOGO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="772">
        <xs:annotation>
          <xs:documentation>TOKELAU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="776">
        <xs:annotation>
          <xs:documentation>TONGA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="780">
        <xs:annotation>
          <xs:documentation>TRINIDAD AND TOBAGO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="788">
        <xs:annotation>
          <xs:documentation>TUNISIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="792">
        <xs:annotation>
          <xs:documentation>TURKEY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="795">
        <xs:annotation>
          <xs:documentation>TURKMENISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="796">
        <xs:annotation>
          <xs:documentation>TURKS AND CAICOS ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="798">
        <xs:annotation>
          <xs:documentation>TUVALU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="800">
        <xs:annotation>
          <xs:documentation>UGANDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="804">
        <xs:annotation>
          <xs:documentation>UKRAINE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="784">
        <xs:annotation>
          <xs:documentation>UNITED ARAB EMIRATES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="826">
        <xs:annotation>
          <xs:documentation>UNITED KINGDOM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="840">
        <xs:annotation>
          <xs:documentation>UNITED STATES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="581">
        <xs:annotation>
          <xs:documentation>UNITED STATES MINOR OUTLYING ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="858">
        <xs:annotation>
          <xs:documentation>URUGUAY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="860">
        <xs:annotation>
          <xs:documentation>UZBEKISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="548">
        <xs:annotation>
          <xs:documentation>VANUATU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="862">
        <xs:annotation>
          <xs:documentation>VENEZUELA, BOLIVARIAN REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="704">
        <xs:annotation>
          <xs:documentation>VIET NAM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="92">
        <xs:annotation>
          <xs:documentation>VIRGIN ISLANDS, BRITISH</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="850">
        <xs:annotation>
          <xs:documentation>VIRGIN ISLANDS, U.S.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="876">
        <xs:annotation>
          <xs:documentation>WALLIS AND FUTUNA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="732">
        <xs:annotation>
          <xs:documentation>WESTERN SAHARA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="887">
        <xs:annotation>
          <xs:documentation>YEMEN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="894">
        <xs:annotation>
          <xs:documentation>ZAMBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="716">
        <xs:annotation>
          <xs:documentation>ZIMBABWE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AF">
        <xs:annotation>
          <xs:documentation>AFGHANISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AX">
        <xs:annotation>
          <xs:documentation>ÅLAND ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AL">
        <xs:annotation>
          <xs:documentation>ALBANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:DZ">
        <xs:annotation>
          <xs:documentation>ALGERIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AS">
        <xs:annotation>
          <xs:documentation>AMERICAN SAMOA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AD">
        <xs:annotation>
          <xs:documentation>ANDORRA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AO">
        <xs:annotation>
          <xs:documentation>ANGOLA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AI">
        <xs:annotation>
          <xs:documentation>ANGUILLA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AQ">
        <xs:annotation>
          <xs:documentation>ANTARCTICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AG">
        <xs:annotation>
          <xs:documentation>ANTIGUA AND BARBUDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AR">
        <xs:annotation>
          <xs:documentation>ARGENTINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AM">
        <xs:annotation>
          <xs:documentation>ARMENIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AW">
        <xs:annotation>
          <xs:documentation>ARUBA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AU">
        <xs:annotation>
          <xs:documentation>AUSTRALIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AT">
        <xs:annotation>
          <xs:documentation>AUSTRIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AZ">
        <xs:annotation>
          <xs:documentation>AZERBAIJAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BS">
        <xs:annotation>
          <xs:documentation>BAHAMAS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BH">
        <xs:annotation>
          <xs:documentation>BAHRAIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BD">
        <xs:annotation>
          <xs:documentation>BANGLADESH</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BB">
        <xs:annotation>
          <xs:documentation>BARBADOS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BY">
        <xs:annotation>
          <xs:documentation>BELARUS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BE">
        <xs:annotation>
          <xs:documentation>BELGIUM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BZ">
        <xs:annotation>
          <xs:documentation>BELIZE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BJ">
        <xs:annotation>
          <xs:documentation>BENIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BM">
        <xs:annotation>
          <xs:documentation>BERMUDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BT">
        <xs:annotation>
          <xs:documentation>BHUTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BO">
        <xs:annotation>
          <xs:documentation>BOLIVIA, PLURINATIONAL STATE OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BQ">
        <xs:annotation>
          <xs:documentation>BONAIRE, SAINT EUSTATIUS AND SABA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BA">
        <xs:annotation>
          <xs:documentation>BOSNIA AND HERZEGOVINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BW">
        <xs:annotation>
          <xs:documentation>BOTSWANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BV">
        <xs:annotation>
          <xs:documentation>BOUVET ISLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BR">
        <xs:annotation>
          <xs:documentation>BRAZIL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:IO">
        <xs:annotation>
          <xs:documentation>BRITISH INDIAN OCEAN TERRITORY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BN">
        <xs:annotation>
          <xs:documentation>BRUNEI DARUSSALAM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BG">
        <xs:annotation>
          <xs:documentation>BULGARIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BF">
        <xs:annotation>
          <xs:documentation>BURKINA FASO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BI">
        <xs:annotation>
          <xs:documentation>BURUNDI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:KH">
        <xs:annotation>
          <xs:documentation>CAMBODIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CM">
        <xs:annotation>
          <xs:documentation>CAMEROON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CA">
        <xs:annotation>
          <xs:documentation>CANADA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CV">
        <xs:annotation>
          <xs:documentation>CAPE VERDE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:KY">
        <xs:annotation>
          <xs:documentation>CAYMAN ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CF">
        <xs:annotation>
          <xs:documentation>CENTRAL AFRICAN REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TD">
        <xs:annotation>
          <xs:documentation>CHAD</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CL">
        <xs:annotation>
          <xs:documentation>CHILE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CN">
        <xs:annotation>
          <xs:documentation>CHINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CX">
        <xs:annotation>
          <xs:documentation>CHRISTMAS ISLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CC">
        <xs:annotation>
          <xs:documentation>COCOS (KEELING) ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CO">
        <xs:annotation>
          <xs:documentation>COLOMBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:KM">
        <xs:annotation>
          <xs:documentation>COMOROS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CG">
        <xs:annotation>
          <xs:documentation>CONGO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CD">
        <xs:annotation>
          <xs:documentation>CONGO, THE DEMOCRATIC REPUBLIC OF THE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CK">
        <xs:annotation>
          <xs:documentation>COOK ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CR">
        <xs:annotation>
          <xs:documentation>COSTA RICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CI">
        <xs:annotation>
          <xs:documentation>CÔTE D'IVOIRE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:HR">
        <xs:annotation>
          <xs:documentation>CROATIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CU">
        <xs:annotation>
          <xs:documentation>CUBA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CW">
        <xs:annotation>
          <xs:documentation>CURAÇAO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CY">
        <xs:annotation>
          <xs:documentation>CYPRUS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CZ">
        <xs:annotation>
          <xs:documentation>CZECH REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:DK">
        <xs:annotation>
          <xs:documentation>DENMARK</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:DJ">
        <xs:annotation>
          <xs:documentation>DJIBOUTI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:DM">
        <xs:annotation>
          <xs:documentation>DOMINICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:DO">
        <xs:annotation>
          <xs:documentation>DOMINICAN REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:EC">
        <xs:annotation>
          <xs:documentation>ECUADOR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:EG">
        <xs:annotation>
          <xs:documentation>EGYPT</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SV">
        <xs:annotation>
          <xs:documentation>EL SALVADOR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GQ">
        <xs:annotation>
          <xs:documentation>EQUATORIAL GUINEA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:ER">
        <xs:annotation>
          <xs:documentation>ERITREA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:EE">
        <xs:annotation>
          <xs:documentation>ESTONIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:ET">
        <xs:annotation>
          <xs:documentation>ETHIOPIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:FK">
        <xs:annotation>
          <xs:documentation>FALKLAND ISLANDS (MALVINAS)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:FO">
        <xs:annotation>
          <xs:documentation>FAROE ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:FJ">
        <xs:annotation>
          <xs:documentation>FIJI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:FI">
        <xs:annotation>
          <xs:documentation>FINLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:FR">
        <xs:annotation>
          <xs:documentation>FRANCE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GF">
        <xs:annotation>
          <xs:documentation>FRENCH GUIANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PF">
        <xs:annotation>
          <xs:documentation>FRENCH POLYNESIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TF">
        <xs:annotation>
          <xs:documentation>FRENCH SOUTHERN TERRITORIES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GA">
        <xs:annotation>
          <xs:documentation>GABON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GM">
        <xs:annotation>
          <xs:documentation>GAMBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GE">
        <xs:annotation>
          <xs:documentation>GEORGIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:DE">
        <xs:annotation>
          <xs:documentation>GERMANY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GH">
        <xs:annotation>
          <xs:documentation>GHANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GI">
        <xs:annotation>
          <xs:documentation>GIBRALTAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GR">
        <xs:annotation>
          <xs:documentation>GREECE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GL">
        <xs:annotation>
          <xs:documentation>GREENLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GD">
        <xs:annotation>
          <xs:documentation>GRENADA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GP">
        <xs:annotation>
          <xs:documentation>GUADELOUPE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GU">
        <xs:annotation>
          <xs:documentation>GUAM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GT">
        <xs:annotation>
          <xs:documentation>GUATEMALA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GG">
        <xs:annotation>
          <xs:documentation>GUERNSEY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GN">
        <xs:annotation>
          <xs:documentation>GUINEA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GW">
        <xs:annotation>
          <xs:documentation>GUINEA-BISSAU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GY">
        <xs:annotation>
          <xs:documentation>GUYANA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:HT">
        <xs:annotation>
          <xs:documentation>HAITI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:HM">
        <xs:annotation>
          <xs:documentation>HEARD ISLAND AND MCDONALD ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:VA">
        <xs:annotation>
          <xs:documentation>HOLY SEE (VATICAN CITY STATE)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:HN">
        <xs:annotation>
          <xs:documentation>HONDURAS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:HK">
        <xs:annotation>
          <xs:documentation>HONG KONG</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:HU">
        <xs:annotation>
          <xs:documentation>HUNGARY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:IS">
        <xs:annotation>
          <xs:documentation>ICELAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:IN">
        <xs:annotation>
          <xs:documentation>INDIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:ID">
        <xs:annotation>
          <xs:documentation>INDONESIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:IR">
        <xs:annotation>
          <xs:documentation>IRAN, ISLAMIC REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:IQ">
        <xs:annotation>
          <xs:documentation>IRAQ</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:IE">
        <xs:annotation>
          <xs:documentation>IRELAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:IM">
        <xs:annotation>
          <xs:documentation>ISLE OF MAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:IL">
        <xs:annotation>
          <xs:documentation>ISRAEL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:IT">
        <xs:annotation>
          <xs:documentation>ITALY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:JM">
        <xs:annotation>
          <xs:documentation>JAMAICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:JP">
        <xs:annotation>
          <xs:documentation>JAPAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:JE">
        <xs:annotation>
          <xs:documentation>JERSEY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:JO">
        <xs:annotation>
          <xs:documentation>JORDAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:KZ">
        <xs:annotation>
          <xs:documentation>KAZAKHSTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:KE">
        <xs:annotation>
          <xs:documentation>KENYA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:KI">
        <xs:annotation>
          <xs:documentation>KIRIBATI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:KP">
        <xs:annotation>
          <xs:documentation>KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:KR">
        <xs:annotation>
          <xs:documentation>KOREA, REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:KW">
        <xs:annotation>
          <xs:documentation>KUWAIT</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:KG">
        <xs:annotation>
          <xs:documentation>KYRGYZSTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:LA">
        <xs:annotation>
          <xs:documentation>LAO PEOPLE'S DEMOCRATIC REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:LV">
        <xs:annotation>
          <xs:documentation>LATVIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:LB">
        <xs:annotation>
          <xs:documentation>LEBANON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:LS">
        <xs:annotation>
          <xs:documentation>LESOTHO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:LR">
        <xs:annotation>
          <xs:documentation>LIBERIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:LY">
        <xs:annotation>
          <xs:documentation>LIBYAN ARAB JAMAHIRIYA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:LI">
        <xs:annotation>
          <xs:documentation>LIECHTENSTEIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:LT">
        <xs:annotation>
          <xs:documentation>LITHUANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:LU">
        <xs:annotation>
          <xs:documentation>LUXEMBOURG</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MO">
        <xs:annotation>
          <xs:documentation>MACAO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MK">
        <xs:annotation>
          <xs:documentation>MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MG">
        <xs:annotation>
          <xs:documentation>MADAGASCAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MW">
        <xs:annotation>
          <xs:documentation>MALAWI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MY">
        <xs:annotation>
          <xs:documentation>MALAYSIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MV">
        <xs:annotation>
          <xs:documentation>MALDIVES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:ML">
        <xs:annotation>
          <xs:documentation>MALI</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MT">
        <xs:annotation>
          <xs:documentation>MALTA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MH">
        <xs:annotation>
          <xs:documentation>MARSHALL ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MQ">
        <xs:annotation>
          <xs:documentation>MARTINIQUE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MR">
        <xs:annotation>
          <xs:documentation>MAURITANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MU">
        <xs:annotation>
          <xs:documentation>MAURITIUS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:YT">
        <xs:annotation>
          <xs:documentation>MAYOTTE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MX">
        <xs:annotation>
          <xs:documentation>MEXICO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:FM">
        <xs:annotation>
          <xs:documentation>MICRONESIA, FEDERATED STATES OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MD">
        <xs:annotation>
          <xs:documentation>MOLDOVA, REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MC">
        <xs:annotation>
          <xs:documentation>MONACO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MN">
        <xs:annotation>
          <xs:documentation>MONGOLIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:ME">
        <xs:annotation>
          <xs:documentation>MONTENEGRO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MS">
        <xs:annotation>
          <xs:documentation>MONTSERRAT</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MA">
        <xs:annotation>
          <xs:documentation>MOROCCO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MZ">
        <xs:annotation>
          <xs:documentation>MOZAMBIQUE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MM">
        <xs:annotation>
          <xs:documentation>MYANMAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:NA">
        <xs:annotation>
          <xs:documentation>NAMIBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:NR">
        <xs:annotation>
          <xs:documentation>NAURU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:NP">
        <xs:annotation>
          <xs:documentation>NEPAL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:NL">
        <xs:annotation>
          <xs:documentation>NETHERLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:NC">
        <xs:annotation>
          <xs:documentation>NEW CALEDONIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:NZ">
        <xs:annotation>
          <xs:documentation>NEW ZEALAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:NI">
        <xs:annotation>
          <xs:documentation>NICARAGUA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:NE">
        <xs:annotation>
          <xs:documentation>NIGER</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:NG">
        <xs:annotation>
          <xs:documentation>NIGERIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:NU">
        <xs:annotation>
          <xs:documentation>NIUE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:NF">
        <xs:annotation>
          <xs:documentation>NORFOLK ISLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MP">
        <xs:annotation>
          <xs:documentation>NORTHERN MARIANA ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:NO">
        <xs:annotation>
          <xs:documentation>NORWAY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:OM">
        <xs:annotation>
          <xs:documentation>OMAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PK">
        <xs:annotation>
          <xs:documentation>PAKISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PW">
        <xs:annotation>
          <xs:documentation>PALAU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PS">
        <xs:annotation>
          <xs:documentation>PALESTINIAN TERRITORY, OCCUPIED</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PA">
        <xs:annotation>
          <xs:documentation>PANAMA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PG">
        <xs:annotation>
          <xs:documentation>PAPUA NEW GUINEA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PY">
        <xs:annotation>
          <xs:documentation>PARAGUAY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PE">
        <xs:annotation>
          <xs:documentation>PERU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PH">
        <xs:annotation>
          <xs:documentation>PHILIPPINES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PN">
        <xs:annotation>
          <xs:documentation>PITCAIRN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PL">
        <xs:annotation>
          <xs:documentation>POLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PT">
        <xs:annotation>
          <xs:documentation>PORTUGAL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PR">
        <xs:annotation>
          <xs:documentation>PUERTO RICO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:QA">
        <xs:annotation>
          <xs:documentation>QATAR</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:RE">
        <xs:annotation>
          <xs:documentation>RÉUNION</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:RO">
        <xs:annotation>
          <xs:documentation>ROMANIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:RU">
        <xs:annotation>
          <xs:documentation>RUSSIAN FEDERATION</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:RW">
        <xs:annotation>
          <xs:documentation>RWANDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:BL">
        <xs:annotation>
          <xs:documentation>SAINT BARTHÉLEMY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SH">
        <xs:annotation>
          <xs:documentation>SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:KN">
        <xs:annotation>
          <xs:documentation>SAINT KITTS AND NEVIS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:LC">
        <xs:annotation>
          <xs:documentation>SAINT LUCIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:MF">
        <xs:annotation>
          <xs:documentation>SAINT MARTIN (FRENCH PART)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:PM">
        <xs:annotation>
          <xs:documentation>SAINT PIERRE AND MIQUELON</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:VC">
        <xs:annotation>
          <xs:documentation>SAINT VINCENT AND THE GRENADINES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:WS">
        <xs:annotation>
          <xs:documentation>SAMOA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SM">
        <xs:annotation>
          <xs:documentation>SAN MARINO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:ST">
        <xs:annotation>
          <xs:documentation>SAO TOME AND PRINCIPE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SA">
        <xs:annotation>
          <xs:documentation>SAUDI ARABIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SN">
        <xs:annotation>
          <xs:documentation>SENEGAL</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:RS">
        <xs:annotation>
          <xs:documentation>SERBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SC">
        <xs:annotation>
          <xs:documentation>SEYCHELLES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SL">
        <xs:annotation>
          <xs:documentation>SIERRA LEONE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SG">
        <xs:annotation>
          <xs:documentation>SINGAPORE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SX">
        <xs:annotation>
          <xs:documentation>SINT MAARTEN (DUTCH PART)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SK">
        <xs:annotation>
          <xs:documentation>SLOVAKIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SI">
        <xs:annotation>
          <xs:documentation>SLOVENIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SB">
        <xs:annotation>
          <xs:documentation>SOLOMON ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SO">
        <xs:annotation>
          <xs:documentation>SOMALIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:ZA">
        <xs:annotation>
          <xs:documentation>SOUTH AFRICA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GS">
        <xs:annotation>
          <xs:documentation>SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:ES">
        <xs:annotation>
          <xs:documentation>SPAIN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:LK">
        <xs:annotation>
          <xs:documentation>SRI LANKA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SD">
        <xs:annotation>
          <xs:documentation>SUDAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SR">
        <xs:annotation>
          <xs:documentation>SURINAME</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SJ">
        <xs:annotation>
          <xs:documentation>SVALBARD AND JAN MAYEN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SZ">
        <xs:annotation>
          <xs:documentation>SWAZILAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SE">
        <xs:annotation>
          <xs:documentation>SWEDEN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:CH">
        <xs:annotation>
          <xs:documentation>SWITZERLAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:SY">
        <xs:annotation>
          <xs:documentation>SYRIAN ARAB REPUBLIC</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TW">
        <xs:annotation>
          <xs:documentation>TAIWAN, PROVINCE OF CHINA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TJ">
        <xs:annotation>
          <xs:documentation>TAJIKISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TZ">
        <xs:annotation>
          <xs:documentation>TANZANIA, UNITED REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TH">
        <xs:annotation>
          <xs:documentation>THAILAND</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TL">
        <xs:annotation>
          <xs:documentation>TIMOR-LESTE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TG">
        <xs:annotation>
          <xs:documentation>TOGO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TK">
        <xs:annotation>
          <xs:documentation>TOKELAU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TO">
        <xs:annotation>
          <xs:documentation>TONGA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TT">
        <xs:annotation>
          <xs:documentation>TRINIDAD AND TOBAGO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TN">
        <xs:annotation>
          <xs:documentation>TUNISIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TR">
        <xs:annotation>
          <xs:documentation>TURKEY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TM">
        <xs:annotation>
          <xs:documentation>TURKMENISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TC">
        <xs:annotation>
          <xs:documentation>TURKS AND CAICOS ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:TV">
        <xs:annotation>
          <xs:documentation>TUVALU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:UG">
        <xs:annotation>
          <xs:documentation>UGANDA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:UA">
        <xs:annotation>
          <xs:documentation>UKRAINE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:AE">
        <xs:annotation>
          <xs:documentation>UNITED ARAB EMIRATES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:GB">
        <xs:annotation>
          <xs:documentation>UNITED KINGDOM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:US">
        <xs:annotation>
          <xs:documentation>UNITED STATES</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:UM">
        <xs:annotation>
          <xs:documentation>UNITED STATES MINOR OUTLYING ISLANDS</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:UY">
        <xs:annotation>
          <xs:documentation>URUGUAY</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:UZ">
        <xs:annotation>
          <xs:documentation>UZBEKISTAN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:VU">
        <xs:annotation>
          <xs:documentation>VANUATU</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:VE">
        <xs:annotation>
          <xs:documentation>VENEZUELA, BOLIVARIAN REPUBLIC OF</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:VN">
        <xs:annotation>
          <xs:documentation>VIET NAM</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:VG">
        <xs:annotation>
          <xs:documentation>VIRGIN ISLANDS, BRITISH</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:VI">
        <xs:annotation>
          <xs:documentation>VIRGIN ISLANDS, U.S.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:WF">
        <xs:annotation>
          <xs:documentation>WALLIS AND FUTUNA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:EH">
        <xs:annotation>
          <xs:documentation>WESTERN SAHARA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:YE">
        <xs:annotation>
          <xs:documentation>YEMEN</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:ZM">
        <xs:annotation>
          <xs:documentation>ZAMBIA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ISO 3166-2:ZW">
        <xs:annotation>
          <xs:documentation>ZIMBABWE</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:annotation>
    <xs:documentation>Gemstone object types - declared as an include to be used in GN4 as well as Tark4</xs:documentation>
  </xs:annotation>
  <xs:element name="genDoc">
    <xs:annotation>
      <xs:documentation>General document</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type126" gs:key="folderRef name">
      <xs:annotation>
        <xs:appinfo>
          <gs:fullTextObj exaSourceName="genDoc" xmlns:gs="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
            <gs:meta name="gn4Title" field="true" isUsedForSorting="true" />
            <gs:meta name="modifiedDate" field="true" isUsedForSorting="true" />
            <gs:meta name="creationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="authors" field="true" />
            <gs:meta name="location" field="true" />
            <gs:meta name="cats" field="true" />
            <gs:meta name="keywords" field="true" />
            <gs:meta name="publicationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="publicationRef" field="true" isUsedForSorting="true" />
            <gs:meta name="sourceRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderKind" field="true" />
          </gs:fullTextObj>
          <gs:compute inherit="true">
            <!-- 
              Semplified XSL transformation to compute size
            -->
            <genDoc xmlns="">
              <!-- Size -->
              <xsl:attribute name="size" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:choose>
                  <xsl:when test="gn4:data/@size">
                    <xsl:value-of select="gn4:data/@size" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="'0'" />
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
            </genDoc>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:archiveObject">
          <xs:sequence>
            <xs:element minOccurs="0" name="fileExtension" nillable="true" type="gn4:t32">
              <xs:annotation>
                <xs:documentation>The file extension of the main document itself.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="image/jpeg image/gif image/png" minOccurs="0" name="thumbnail" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The optional document thumbnail. Generated by the import process.</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Image" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="documentPreviews" gs:mimeTypes="image/jpeg image/gif image/png" minOccurs="0" name="preview" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The optional document preview - larger than the thumbnail. Generated by the import process.</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Image" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="documents" minOccurs="0" name="data" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The document itself.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute gs:access="Content" default="0" name="pixWidth" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Width in pixel of the image. Set by the import process.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Content" default="0" name="pixHeight" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Height in pixel of the image. Set by the import process.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="width" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Width in millipoints of the image. Set by the import process.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="height" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Height in millipoints of the image. Set by the import process.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:annotation>
    <xs:documentation>Planning additional object types - declared as an include to be used in GN4 as well as Tark4</xs:documentation>
  </xs:annotation>
  <xs:element name="equipment">
    <xs:annotation>
      <xs:documentation>An equipment item</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type127" gs:key="name">
      <xs:annotation>
        <xs:appinfo />
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" nillable="true" type="gn4:tLine">
              <xs:annotation>
                <xs:documentation>The description of the equipment.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="EquipmentTypes" name="type" type="gn4:categoryRef">
              <xs:annotation>
                <xs:documentation>The kind of equipment</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="EquipmentLocations" name="location" type="gn4:categoryRef">
              <xs:annotation>
                <xs:documentation>Where the equipment is located</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="EquipmentConditions" name="condition" type="gn4:categoryRef">
              <xs:annotation>
                <xs:documentation>The condition of equipment</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="equipmentImages" gs:mimeTypes="image/jpeg image/gif image/png" minOccurs="0" name="image" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>Image of the equipment.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="availability" use="optional">
            <xs:annotation>
              <xs:documentation>Availability status of the equipment</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="unknown" />
                <xs:enumeration value="available" />
                <xs:enumeration value="notAvailable" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="purchaseDate" type="xs:date" use="optional">
            <xs:annotation>
              <xs:documentation>The purchase/lease date of this object.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:annotation>
    <xs:documentation>Tark4 object types - declared as an include to be used in GN4 as well as Tark4</xs:documentation>
  </xs:annotation>
  <xs:simpleType name="tLine">
    <xs:annotation>
      <xs:documentation>A line of text (single-line string), useful for titles / descriptions</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="255" />
      <xs:whiteSpace value="collapse" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="t32">
    <xs:annotation>
      <xs:documentation>Single-line text of max. 32 characters</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="32" />
      <xs:whiteSpace value="collapse" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="t64">
    <xs:annotation>
      <xs:documentation>Single-line text of max. 64 characters</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="64" />
      <xs:whiteSpace value="collapse" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="t128">
    <xs:annotation>
      <xs:documentation>Single-line text of max. 64 characters</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="128" />
      <xs:whiteSpace value="collapse" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="tHtml">
    <xs:annotation>
      <xs:documentation>HTML content stored as text (actually XHTML)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any minOccurs="0" maxOccurs="unbounded" namespace="http://www.w3.org/1999/xhtml" />
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="tBarcode">
    <xs:annotation>
      <xs:documentation>Barcode attributes for the element</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ISSN">
        <xs:annotation>
          <xs:documentation>
The ISSN of the publication, as a 7-digit number. No leading '977' or trailing checksum is necessary. This can be the string ‘Zone’, ‘Section’ or ‘EditionNumber’ for the tBarcode of the Title (Publication) to indicate to retrieve the ISSN from the element of that object.
  </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Frequency">
        <xs:annotation>
          <xs:documentation>
Publication frequency: 0 for Daily newspapers; 1 for Weeklies; 2 for Monthly</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PriceChange">
        <xs:annotation>
          <xs:documentation>
The price change barcode value. For Daily publications, this is a SINGLE DIGIT values; for weeklies and monthly, it must be 2 digits long. By default it is 0.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PageNo">
        <xs:annotation>
          <xs:documentation>
The page on which the barcode has to be published. By default is 1, the first page.
To indicate the last page of the edition, use -1.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BCFolderId">
        <xs:annotation>
          <xs:documentation>
The folder where the barcode image resides.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BCTxtStyle">
        <xs:annotation>
          <xs:documentation>
The GNML string to be printed over the barcode, in a local text box. It can usually be the paper's price. An example is &gt;f 10111&lt;&gt;hld 10pt&lt; &gt;pqr&lt;&gt;is&lt;
The GNML tag will be followed by a text passed by the script. If the script doesn't pass any text, the ISSN of the paper will be published.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:attributeGroup name="objectExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'object' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="objectExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'object' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="securityScopeExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'securityScope' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="securityScopeExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'securityScope' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="teamExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'team' object type that are rendered as XML attributes
      </xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="teamExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'team' object type that are rendered as XML element
      </xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="securityExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'security' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="securityExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'security' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="userExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'user' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="userExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'user' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="userGapExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'userGap' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="userGapExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'userGap' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="groupExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'group' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="groupExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'group' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="configScopeExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'configScope' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="configScopeExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'configScope' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="configExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'config' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="configExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'config' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="iconExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'icon' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="iconExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'icon' object type that
        are rendered as XML element
      </xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="categoryExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'category' object type that
        are rendered as XML attributes
      </xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="categoryExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'category' object type that
        are rendered as XML element
      </xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="categorySetExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'categorySet' object type that
        are rendered as XML attributes
      </xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="categorySetExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'categorySet' object type that
        are rendered as XML element
      </xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="keywordSetExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'keywordSetExtra' object type that
        are rendered as XML attributes
      </xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="keywordSetExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'keywordSetExtra' object type that
        are rendered as XML element
      </xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="pubModeExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'pubMode' object type that
        are rendered as XML attributes
      </xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="pubModeExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'pubMode' object type that
        are rendered as XML element
      </xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="pubTemplateExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'pubTemplate' object type that
        are rendered as XML attributes
      </xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="pubTemplateExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'pubTemplate' object type that
        are rendered as XML element
      </xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="pubDestExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'pubDest' object type that
        are rendered as XML attributes
      </xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="pubDestExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'pubDest' object type that
        are rendered as XML element
      </xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="notifyDestExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'notifyDest' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="notifyDestExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'notifyDest' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="quotaExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'quota' object type that
        are rendered as XML attributes
      </xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="quotaExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'quota' object type that
        are rendered as XML element
      </xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="partitionExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'partition' object type that
        are rendered as XML attributes
      </xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="partitionExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'partition' object type that
        are rendered as XML element
      </xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="counterExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'counter' object type that
        are rendered as XML attributes
      </xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="counterExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'counter' object type that are rendered as XML elements</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="workstateExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'workstate' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
    <xs:attribute default="0" name="percentComplete" use="optional">
      <xs:annotation>
        <xs:documentation>Completion percentage for tasks in this workstate - from 0 = nothing done, to 100 = completed.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:short">
          <xs:minInclusive value="0" />
          <xs:maxInclusive value="100" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:group name="workstateExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'workstate' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="folderExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'folder' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
    <xs:attribute default="false" name="doNotArchive" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>Boolean attribute to disable the archiving of folder's content</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:group name="folderExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'folder' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="description" type="gn4:tLine" />
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="folderObjectExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'folderObject' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
    <xs:attribute name="rating" type="xs:short" use="optional">
      <xs:annotation>
        <xs:documentation>
          A user-assigned rating for this file. The value shall be -1 or in the range
          [0..5], where -1 indicates “rejected” and 0 indicates “unrated”. If xmp:Rating is not present, a value of 0 should be assumed.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:group name="folderObjectExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'folderObject' object type that are rendered as XML element</xs:documentation>
      <xs:appinfo>
        <gs:compute inherit="true" xmlns:gs="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
          <folderObject xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns="">
            <xsl:variable name="hasCats" select="gn4:cats" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" />
            <!-- 'Fake' test of the handle attribute to generate a dependency -->
            <xsl:if test="string($hasCats/@nav:handle)">
              <catsList>
                <xsl:for-each select="gn4:cats/gn4:ref">
                  <xsl:sort select="@weight" data-type="number" order="descending" />
                  <xsl:sort select="nav:refObject/gn4:category/@name" />
                  <xsl:if test="position()&gt;1">
                    <xsl:text>, </xsl:text>
                  </xsl:if>
                  <xsl:value-of select="nav:refObject/gn4:category/@name" />
                </xsl:for-each>
              </catsList>
            </xsl:if>
          </folderObject>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="title" type="gn4:tLine">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="gn4Title" />
          </xs:appinfo>
          <xs:documentation>Optional descriptive line (title) for the object. It is not unique - as opposed to the name that it is. Corresponds to the XMP field 'photoshop:Headline' and to the IIM (IPTC) field '2:105 Headline'</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element gs:refer="MainKeywords" minOccurs="0" name="keywords" type="gn4:keywords">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="keywords">
            </gs:fullTextAttr>
          </xs:appinfo>
          <xs:documentation>Optional keywords associated to the folderObject. Corresponds to the XMP field 'dc:subject' and to the IIM (IPTC) field '2:25 Keywords</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element gs:refer="MainCategories" minOccurs="0" name="cats" type="gn4:categoryRefs">
        <xs:annotation>
          <xs:documentation>Object categories. Corresponds loosely to the XMP fields 'Iptc4xmpCore:SubjectCode', 'photoshop:Category', 'photoshop:SupplementalCategory' and to the IIM (IPTC) fields '2:12 Subject Reference', '2:15', '2:20'.</xs:documentation>
          <xs:appinfo>
            <gs:ui>
              <gs:template kind="Tree" displayCompletePath="false" showWeights="false">
                <objectUI xmlns="">
                  <web maxRows="5" />
                </objectUI>
              </gs:template>
            </gs:ui>
            <gs:fullTextAttr exaMetaName="cats">
            </gs:fullTextAttr>
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
      <xs:element gs:refer="TISO_Tark" minOccurs="0" name="aCats" type="gn4:categoryRefs">
        <xs:annotation>
          <xs:documentation>Object categories. List of Tark's cateogories</xs:documentation>
          <xs:appinfo>
            <gs:ui>
              <gs:template kind="Tree" displayCompletePath="false" showWeights="false">
                <objectUI xmlns="">
                  <web maxRows="5" />
                </objectUI>
              </gs:template>
            </gs:ui>
            <gs:fullTextAttr exaMetaName="cats">
            </gs:fullTextAttr>
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
      <xs:element gs:compute="true" minOccurs="0" name="catsList" type="xs:string">
        <xs:annotation>
          <xs:documentation>Computed comma-separated string of the categories, ordered by the percentage weight</xs:documentation>
          <xs:appinfo>
            <gs:ui mode="ReadOnly" />
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="summary" type="gn4:tText">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="summary">
            </gs:fullTextAttr>
          </xs:appinfo>
          <xs:documentation>Optional summary / caption / description of the object as plain text. It can be even the complete text contained in the object. Corresponds to the XMP field 'dc:description' and to the IIM (IPTC) field '2:120 Caption/Abstract'</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="pubInfo">
        <xs:annotation>
          <xs:documentation>
            Publishing information filled when distributing the object to various destinations.
            The attribute is not meant to be edited directly, but filled by custom workflow when
            publishing.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
              <xs:complexType>
                <xs:attribute name="name">
                  <xs:annotation>
                    <xs:documentation>Name of the parameter.</xs:documentation>
                  </xs:annotation>
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:minLength value="1" />
                      <xs:maxLength value="30" />
                      <xs:pattern value="[A-Za-z0-9_.]+" />
                    </xs:restriction>
                  </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="value" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>Value of the parameter.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="valueExtra" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation>Value of the extra parameter.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="publicationDate" type="xs:dateTime" use="optional">
                  <xs:annotation>
                    <xs:documentation>The last publication date of this object.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element gs:compute="true" minOccurs="0" default="false" name="isPublished" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Computed boolean: false: not published - true: published</xs:documentation>
          <xs:appinfo>
            <gs:ui mode="ReadOnly" />
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="clientTemplateExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'clientTemplate' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="clientTemplateExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'clientTemplate' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="clientSpecExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'clientTemplate' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="clientSpecExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'clientTemplate' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="expirationRuleExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'expirationRule' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="expirationRuleExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'expirationRule' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="back4ConfigExtra">
    <xs:annotation>
      <xs:documentation>Attributes of the 'back4Config' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="back4ConfigExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'back4Config' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="dataSrcTemplateExtra">
    <xs:annotation>
      <xs:documentation>Attributes of the 'dataSrcTemplate' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="dataSrcTemplateExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'dataSrcTemplate' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="dataSrcFilesExtra">
    <xs:annotation>
      <xs:documentation>Attributes of the 'dataSrcFiles' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="dataSrcFilesExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'dataSrcFiles' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="dataSrcEMailExtra">
    <xs:annotation>
      <xs:documentation>Attributes of the 'dataSrcEMail' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="dataSrcEMailExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'dataSrcEMail' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="dataSrcFeedExtra">
    <xs:annotation>
      <xs:documentation>Attributes of the 'dataSrcFeed' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="dataSrcFeedExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'dataSrcFeed' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="dataSrcCustomExtra">
    <xs:annotation>
      <xs:documentation>Attributes of the 'dataSrcCustom' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="dataSrcCustomExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'dataSrcCustom' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="calendarExtra">
    <xs:annotation>
      <xs:documentation>Attributes of the 'calendar' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="calendarExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'calendar' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="calendarObjectExtra">
    <xs:annotation>
      <xs:documentation>Attributes of the 'calendarObject' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="calendarObjectExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'calendarObject' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="taskExtra">
    <xs:annotation>
      <xs:documentation>Attributes of the 'task' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="taskExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'task' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element gs:refer="TaskKinds" minOccurs="0" name="kind" nillable="true" type="gn4:categoryRef">
        <xs:annotation>
          <xs:documentation>Task kind - indicates the type of action expected to complete the task (write an article, upload photos . . .) - i.e. the expected task products</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="quantity" type="gn4:tShortLine">
        <xs:annotation>
          <xs:documentation>Description of the required length/number/quantity of the task products ('500 words', '3 minutes', '800 words, 2 pictures' . . .)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element gs:refer="TaskPositions" minOccurs="0" name="positions" type="gn4:keywords">
        <xs:annotation>
          <xs:documentation>Expected positions of the task product: page(s), section(s), Web sites etc.</xs:documentation>
          <xs:appinfo>
            <gs:ui>
              <gs:template kind="Suggest" autoCompleteMinChars="1" startsWith="true" />
            </gs:ui>
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
      <xs:element gs:refer="user" minOccurs="0" name="startUserRef" nillable="true" type="gn4:reference">
        <xs:annotation>
          <xs:documentation>User that started the work on the task - i.e. transitioned to 'inProcess'</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element gs:refer="user" minOccurs="0" name="completedUserRef" nillable="true" type="gn4:reference">
        <xs:annotation>
          <xs:documentation>User that completed work on the task - i.e. transitioned to 'completed'</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contacts">
        <xs:annotation>
          <xs:documentation>List of task's contacts</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element gs:ordered="false" gs:refer="contact" minOccurs="0" maxOccurs="unbounded" name="ref" type="gn4:reference" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="equipment">
        <xs:annotation>
          <xs:documentation>List of task's allocated equipment</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element gs:ordered="false" gs:refer="equipment" minOccurs="0" maxOccurs="unbounded" name="ref" type="gn4:reference" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="eventExtra">
    <xs:annotation>
      <xs:documentation>Attributes of the 'event' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="eventExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'event' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="budgetExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'budget' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="budgetExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'budget' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="budgetTasksExtra">
    <xs:annotation>
      <xs:documentation>Additional sub-attributes of the 'tasks' attribute of the 'budget' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="budgetTasksExtra">
    <xs:annotation>
      <xs:documentation>Additional sub-attributes of the 'tasks' attribute of the 'budget' object type that are rendered as XML elements</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="sourceExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'source' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="sourceExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'source' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="archiveExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'archive' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="archiveExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'archive' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="copyrightExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'copyright' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="copyrightExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'copyright' object type that are rendered as XML elements</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="xmlModeExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'xmlMode' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="xmlModeExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'xmlMode' object type that are rendered as XML elements</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="xmlFormatExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'xmlFormat' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="xmlFormatExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'xmlFormat' object type that are rendered as XML elements</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="extractDestExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'extractDest' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="extractDestExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'extractDest' object type that are rendered as XML elements</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="params">
        <xs:annotation>
          <xs:documentation>What and who is needed for accomplish the task</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="item">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="codeName" type="gn4:t32" />
                  <xs:element minOccurs="0" name="destFolder" type="gn4:tLine" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="docTypeExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'docType' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="docTypeExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'docType' object type that are rendered as XML elements</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="publicationExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'publication' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="publicationExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'publication' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="barcode">
        <xs:annotation>
          <xs:documentation>
Barcode object containing ISSN, Frequency, etc. if the publication is defined by the Publication (title). If the Barcode configuration is stored against one of the other elements, one of the strings Zone, Section or EditionNumber must be entered for the ISSN, indicating to the script from where to get the details from.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
              <xs:complexType>
                <xs:attribute name="barcodeElement" type="gn4:tBarcode" use="optional" />
                <xs:attribute name="value" type="gn4:tName" use="required">
                  <xs:annotation>
                    <xs:documentation>
Value for the barcode element
    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="mediaExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'media' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="mediaExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'media' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:attributeGroup name="zoneExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'zone' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="zoneExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'zone' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="extraStr" type="gn4:tDescription">
        <xs:annotation>
          <xs:documentation>General extra string data associated with the zone</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="barcode">
        <xs:annotation>
          <xs:documentation>
Barcode object containing ISSN, Frequency, etc. if the publication is defined by the Zones.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
              <xs:complexType>
                <xs:attribute name="barcodeElement" type="gn4:tBarcode" use="optional" />
                <xs:attribute name="value" type="gn4:tName" use="required">
                  <xs:annotation>
                    <xs:documentation>Value for the barcode element </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="archivePublicationName" type="gn4:tOptionalName">
        <xs:annotation>
          <xs:documentation>The publication name to archive pages in this Zone as. If not set, pages will archive with the title's name as the publication. </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="sectionExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'section' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="sectionExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'section' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="extraStr" type="gn4:tDescription">
        <xs:annotation>
          <xs:documentation>General extra string data associated with the section</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element gs:refer="folder" minOccurs="0" name="defaultFolderRef" nillable="true" type="gn4:reference">
        <xs:annotation>
          <xs:documentation>Default destination folder for article copy.</xs:documentation>
          <xs:appinfo>
            <gs:ui>
              <gs:template kind="Tree" refAttributes="folderParent" displayCompletePath="true" />
            </gs:ui>
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
      <xs:element name="barcode">
        <xs:annotation>
          <xs:documentation>Barcode object containing ISSN, Frequency, etc. if the publication is defined by the Sections.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
              <xs:complexType>
                <xs:attribute name="barcodeElement" type="gn4:tBarcode" use="optional" />
                <xs:attribute name="value" type="gn4:tName" use="required">
                  <xs:annotation>
                    <xs:documentation>Value for the barcode element </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="bookExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'book' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="bookExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'book' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="extraStr" type="gn4:tDescription">
        <xs:annotation>
          <xs:documentation>General extra string data associated with the book</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element gs:refer="folder" minOccurs="0" name="defaultFolderRef" nillable="true" type="gn4:reference">
        <xs:annotation>
          <xs:documentation>Default destination folder for article copy.</xs:documentation>
          <xs:appinfo>
            <gs:ui>
              <gs:template kind="Tree" refAttributes="folderParent" displayCompletePath="true" />
            </gs:ui>
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
      <xs:element name="barcode">
        <xs:annotation>
          <xs:documentation>Barcode object containing ISSN, Frequency, etc. if the publication is defined by the Books.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
              <xs:complexType>
                <xs:attribute name="barcodeElement" type="gn4:tBarcode" use="optional" />
                <xs:attribute name="value" type="gn4:tName" use="required">
                  <xs:annotation>
                    <xs:documentation>Value for the barcode element </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="editionNumberExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'editionNumber' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
    <xs:attribute default="false" name="isArchive" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>True if object can not be listed in Edt panels</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:group name="editionNumberExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'editionNumber' object type that are rendered as XML element</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="extraStr" type="gn4:tDescription">
        <xs:annotation>
          <xs:documentation>General extra string data associated with the editionNumber</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="barcode">
        <xs:annotation>
          <xs:documentation>Barcode object containing ISSN, Frequency, etc. if the publication is defined by the Edition Numbers.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element gs:ordered="false" minOccurs="0" maxOccurs="unbounded" name="item">
              <xs:complexType>
                <xs:attribute name="barcodeElement" type="gn4:tBarcode" use="optional" />
                <xs:attribute name="value" type="gn4:tName" use="required">
                  <xs:annotation>
                    <xs:documentation>Value for the barcode element </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="archiveObjectExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'archiveObject' object type that are rendered as XML attributes</xs:documentation>
    </xs:annotation>
    <xs:attribute name="priority" use="optional">
      <xs:annotation>
        <xs:documentation>Object priority. Corresponds to IPTC 'urgency' (IIM 2:10) with 'Low' mapped values greater that 5, 'Medium' mapped to 5 and 'High' mapped values less than 5</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="low" />
          <xs:enumeration value="medium" />
          <xs:enumeration value="high" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="eventDate" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>Date and optionally the time ofthe event the object refers to - it is the date/time a photo or video was originally shot. Corresponds to XMP field 'photoshop:DateCreated' and to IIM (IPTC) field '2:55 Date Created' for photos.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:group name="archiveObjectExtra">
    <xs:annotation>
      <xs:documentation>Additional attributes of the 'archiveObject' object type that are rendered as XML elements</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="authors" type="gn4:tLine">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="authors">
            </gs:fullTextAttr>
          </xs:appinfo>
          <xs:documentation>The original authors of the object (e.g. the photographer that shot the picture). Comma separated if there are multiple authors. Corresponds to the XMP field 'dc:creator' and to the IIM (IPTC) field '2:80 By-line'.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="instructions" type="gn4:tDescription">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="instructions">
            </gs:fullTextAttr>
          </xs:appinfo>
          <xs:documentation>Instructions from the provider to the receiver of the object: embargoes and other restrictions; information regarding the original means of capture (scanning notes, colourspace info) or other specific text information that the user may need for accurate reproduction; additional permissions or credits required when publishing. Corresponds to the XMP field 'photoshop:Instructions' and to the IIM (IPTC) field '2:40 Special Instruction'</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="credit" type="gn4:t32">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="credit">
            </gs:fullTextAttr>
          </xs:appinfo>
          <xs:documentation>Provider of the object (e.g. 'AP'). Corresponds to XMP field 'photoshop:Credit' and IIM (IPTC) field '2:110 Credit'</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="orgSource" type="gn4:t32">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="orgSource">
            </gs:fullTextAttr>
          </xs:appinfo>
          <xs:documentation>Original owner of the copyright for the object. This could be an agency, a member of an agency or an individual. Corresponds to XMP field 'photoshop:Source' and IIM (IPTC) field '2:115 Source'</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="location" type="gn4:t128">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="location">
            </gs:fullTextAttr>
          </xs:appinfo>
          <xs:documentation>Name of a location the content is focussing on - either the location shown in visual media or referenced by text or audio media. This location name could either be the name of a sublocation to a city or the name of a well known location or (natural) monument outside a city. Corresponds to the XMP field 'Iptc4xmpCore:Location' and to the IIM (IPTC) field '2:92 Sublocation'.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="city" type="gn4:t32">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="location">
            </gs:fullTextAttr>
          </xs:appinfo>
          <xs:documentation>Name of the city the content is focussing on - either the place shown in visual media or referenced by text or audio media. Corresponds to the XMP field 'photoshop:City' and to the IIM (IPTC) field '2:90 City'.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="state" type="gn4:t32">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="location">
            </gs:fullTextAttr>
          </xs:appinfo>
          <xs:documentation>Name of the subregion of a country - either called province or state or anything else - the content is focussing on - either the subregion shown in visual media or referenced by text or audio media. Corresponds to the XMP field 'photoshop:State' and to the IIM (IPTC) field '2:95 Province/State'.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="country" type="gn4:t64">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="location">
            </gs:fullTextAttr>
          </xs:appinfo>
          <xs:documentation>Full name of the country the content is focussing on - either the country shown in visual media or referenced by text or audio media. Corresponds to the XMP field 'photoshop:Country' and to the IIM (IPTC) field '2:101 Country/Primary Location Name'.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="countryCode" type="gn4:ISO3166-1">
        <xs:annotation>
          <xs:documentation>Code of the country the content is focussing on - either the country shown in visual media or referenced by text or audio media. Corresponds to the XMP field 'photoshop:CountryCode' and to the IIM (IPTC) field '2:100 Country/Primary Location Code'.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="position" type="gn4:position">
        <xs:annotation>
          <xs:documentation>Optional coordinate pairs of a geographical position</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="publicationDate" nillable="true" type="xs:date">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="publicationDate">
            </gs:fullTextAttr>
          </xs:appinfo>
          <xs:documentation>The last publication date of this object (if any).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element gs:refer="publicationBase" minOccurs="0" name="publicationRef" nillable="true" type="gn4:reference">
        <xs:annotation>
          <xs:appinfo>
            <gs:fullTextAttr exaMetaName="publicationRef">
            </gs:fullTextAttr>
          </xs:appinfo>
          <xs:documentation>The last publication where this object has been used. It references publicationBase instead than publication not to affect access permissions.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element gs:refer="TISO_Status" minOccurs="0" name="status" type="gn4:categoryRef">
        <xs:annotation>
          <xs:documentation>A category set used to set a status like in the old Tark3</xs:documentation>
          <xs:appinfo>
            <gs:ui>
              <gs:template kind="Tree" displayCompletePath="false" showWeights="false">
                <objectUI xmlns="">
                  <web maxRows="3" />
                </objectUI>
              </gs:template>
            </gs:ui>
            <gs:fullTextAttr exaMetaName="cats">
            </gs:fullTextAttr>
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="mediaGalleryExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'mediaGallery' object type that are rendered as XML attributes
      </xs:documentation>
    </xs:annotation>
  </xs:attributeGroup>
  <xs:group name="mediaGalleryExtra">
    <xs:annotation>
      <xs:documentation>
        Additional attributes of the 'mediaGallery' object type that are rendered as XML element
      </xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:group>
  <xs:complexType id="type128" gs:key="folderRef name" name="package">
    <xs:annotation>
      <xs:documentation>Group of related objects</xs:documentation>
      <xs:appinfo>
        <gs:_objectType mediaType="Image" />
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:archiveObject">
        <xs:sequence>
          <xs:element minOccurs="0" name="objs">
            <xs:annotation>
              <xs:documentation>Objects belonging to the group - as references. Note that this can include groups - creating hierarchies.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="true" gs:refer="archiveObject" minOccurs="0" maxOccurs="unbounded" name="ref">
                  <xs:complexType>
                    <xs:complexContent mixed="false">
                      <xs:extension base="gn4:reference">
                        <xs:sequence>
                          <xs:element gs:refer="PackageRelationships" minOccurs="0" name="rel" nillable="true" type="gn4:categoryRef">
                            <xs:annotation>
                              <xs:documentation>Relationship between the package and the referenced object</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="title" type="gn4:tShortLine">
                            <xs:annotation>
                              <xs:documentation>Short natural language description of the relationship</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="caption" type="gn4:tShortText">
                            <xs:annotation>
                              <xs:documentation>Descriptive text associated with the referenced object.</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                      </xs:extension>
                    </xs:complexContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="package" type="gn4:package">
    <xs:annotation>
      <xs:documentation>Group of related objects</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType id="type129" gs:key="folderRef name" name="bulletin">
    <xs:annotation>
      <xs:documentation>Group of related objects</xs:documentation>
      <xs:appinfo>
        <gs:_objectType mediaType="Image" />
        <gs:fullTextObj exaSourceName="bulletin">
          <gs:meta name="gn4Title" field="true" isUsedForSorting="true" />
          <gs:meta name="modifiedDate" field="true" isUsedForSorting="true" />
          <gs:meta name="creationDate" field="true" isUsedForSorting="true" />
          <gs:meta name="authors" field="true" />
          <gs:meta name="location" field="true" />
          <gs:meta name="cats" field="true" />
          <gs:meta name="keywords" field="true" />
          <gs:meta name="publicationDate" field="true" isUsedForSorting="true" />
          <gs:meta name="publicationRef" field="true" isUsedForSorting="true" />
          <gs:meta name="sourceRef" field="true" isUsedForSorting="true" />
          <gs:meta name="folderRef" field="true" isUsedForSorting="true" />
          <gs:meta name="folderKind" field="true" />
          <gs:meta name="era" field="true" />
        </gs:fullTextObj>
        <gs:compute inherit="true">
          <bulletin xmlns="">
            <xsl:attribute name="duration">
              <xsl:variable name="durations">
                <root>
                  <xsl:for-each select="gn4:objs/gn4:ref/nav:refObject/gn4:*[local-name()='article' or local-name()='story' or local-name()='audio' or local-name()='video']">
                    <item>
                      <xsl:choose>
                        <xsl:when test="local-name()='story'">
                          <xsl:variable name="readingTimeParams" select="$context/lc:LoginContext/lc:GlobalConfig/lc:ReadingTime" />
                          <xsl:variable name="storyReadingTime" select="fn:estimateReadingTime(gn4:xmlText,$readingTimeParams,1,'')" />
                          <xsl:variable name="storyDurations">
                            <root>
                              <item>
                                <xsl:choose>
                                  <xsl:when test="$storyReadingTime/@avg">
                                    <xsl:value-of select="$storyReadingTime/@avg" />
                                  </xsl:when>
                                  <xsl:otherwise>0</xsl:otherwise>
                                </xsl:choose>
                              </item>
                              <xsl:for-each select="gn4:objs/gn4:ref/nav:refObject/gn4:*[local-name()='audio' or local-name()='video']">
                                <item>
                                  <xsl:value-of select="@duration" />
                                </item>
                              </xsl:for-each>
                            </root>
                          </xsl:variable>
                          <xsl:value-of select="fn:maxNumber(msxsl:node-set($storyDurations)/root/*)" />
                        </xsl:when>
                        <xsl:when test="local-name()='article'">
                          <xsl:value-of select="@duration" />
                        </xsl:when>
                        <xsl:when test="local-name()='video'">
                          <xsl:value-of select="@duration" />
                        </xsl:when>
                        <xsl:when test="local-name()='audio'">
                          <xsl:value-of select="@duration" />
                        </xsl:when>
                        <xsl:otherwise>0</xsl:otherwise>
                      </xsl:choose>
                    </item>
                  </xsl:for-each>
                </root>
              </xsl:variable>
              <xsl:value-of select="sum(msxsl:node-set($durations)/root/*)" />
            </xsl:attribute>
          </bulletin>
        </gs:compute>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:archiveObject">
        <xs:sequence>
          <xs:element minOccurs="0" name="objs">
            <xs:annotation>
              <xs:documentation>Objects belonging to the group - as references. Note that this can include groups - creating hierarchies.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="true" gs:refer="folderObject" minOccurs="0" maxOccurs="unbounded" name="ref">
                  <xs:complexType>
                    <xs:complexContent mixed="false">
                      <xs:extension base="gn4:reference">
                        <xs:sequence>
                          <xs:element gs:refer="BulletinRelationships" minOccurs="0" name="rel" nillable="true" type="gn4:categoryRef">
                            <xs:annotation>
                              <xs:documentation>Relationship between the bulletin and the referenced object</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="title" type="gn4:tShortLine">
                            <xs:annotation>
                              <xs:documentation>Short natural language description of the relationship</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="caption" type="gn4:tShortText">
                            <xs:annotation>
                              <xs:documentation>Descriptive text associated with the referenced object.</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" default="false" name="float" type="xs:boolean">
                            <xs:annotation>
                              <xs:documentation>Flag to make the referenced object optional into the list.</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                      </xs:extension>
                    </xs:complexContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute gs:dimension="time:s" gs:access="Content" gs:compute="true" name="duration" type="xs:float">
          <xs:annotation>
            <xs:appinfo>
              <gs:ui mode="ReadOnly" />
            </xs:appinfo>
            <xs:documentation>The sum of all the durations of the objects contained into the bulletin</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="startDate" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:documentation>The start time of the bulletin</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="endDate" type="xs:dateTime" use="optional">
          <xs:annotation>
            <xs:documentation>The end time of the bulletin</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="bulletin" type="gn4:bulletin">
    <xs:annotation>
      <xs:documentation>Group of related objects</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="image">
    <xs:annotation>
      <xs:documentation>Archived and wire images</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type130" gs:key="folderRef name">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType mediaType="Image" />
          <gs:fullTextObj exaSourceName="image">
            <gs:meta name="gn4Title" field="true" isUsedForSorting="true" />
            <gs:meta name="modifiedDate" field="true" isUsedForSorting="true" />
            <gs:meta name="creationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="authors" field="true" />
            <gs:meta name="keywords" field="true" />
            <gs:meta name="location" field="true" />
            <gs:meta name="cats" field="true" />
            <gs:meta name="keywords" field="true" />
            <gs:meta name="publicationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="publicationRef" field="true" isUsedForSorting="true" />
            <gs:meta name="sourceRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderKind" field="true" />
            <gs:meta name="era" field="true" />
          </gs:fullTextObj>
          <gs:compute inherit="true">
            <!-- 
              Semplified XSL transformation to compute size
            -->
            <image xmlns="">
              <!-- Compute size -->
              <xsl:attribute name="size">
                <xsl:choose>
                  <xsl:when test="gn4:data/@size">
                    <xsl:value-of select="gn4:data/@size" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="'0'" />
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <!-- Compute the isPublished -->
              <xsl:variable name="isPub" select="nav:referencing/nav:referencingBy[@attrName='pubDest.objs']/nav:refs" />
              <!-- 'Fake' test of the handle attribute to generate a dependency -->
              <xsl:if test="string($isPub/@handle)">
                <xsl:choose>
                  <xsl:when test="$isPub/nav:refObject/gn4:pubDest">
                    <isPublished>true</isPublished>
                  </xsl:when>
                  <xsl:otherwise>
                    <isPublished>false</isPublished>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:if>
            </image>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:archiveObject">
          <xs:sequence>
            <xs:element gs:volume="images" gs:mimeTypes="image application/postscript" gs:access="Content" minOccurs="1" name="data" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The image itself</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Image" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="image/jpeg image/gif image/png" gs:access="Content" minOccurs="0" name="thumbnail" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The image thumbnail. Generated by the import process.</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Image" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="imagePreviews" gs:mimeTypes="image/jpeg image/gif image/png" gs:access="Content" minOccurs="0" name="preview" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The image preview. Generated by the import process.</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Image" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:access="Content" minOccurs="0" name="clipPath" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>Image clip path data information exracted from the image file if any exists</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:storage="XmlText" gs:access="Content" minOccurs="0" name="spotColors" type="gn4:tXml">
              <xs:annotation>
                <xs:documentation>Spot colors info stored as XML</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="faces" type="gn4:faces">
              <xs:annotation>
                <xs:documentation>List of faces coordinates into image</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:access="Special" minOccurs="0" name="crops">
              <xs:annotation>
                <xs:documentation>List of all the extractions/crops that have been done on this image</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element gs:refer="extractDest" minOccurs="0" name="extractRef" nillable="true" type="gn4:reference">
                          <xs:annotation>
                            <xs:documentation>The extraction/cropping destination</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element gs:refer="user" minOccurs="0" name="userRef" nillable="true" type="gn4:reference">
                          <xs:annotation>
                            <xs:documentation>The user that extracted/cropped the image</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element minOccurs="0" name="name" nillable="true" type="gn4:tShortLine">
                          <xs:annotation>
                            <xs:documentation>Name assigned to the extracted/cropped image</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element minOccurs="0" name="description" nillable="true" type="gn4:tDescription">
                          <xs:annotation>
                            <xs:documentation>Description of the extracted/cropped image</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                      </xs:sequence>
                      <xs:attribute name="time" type="xs:dateTime" use="optional">
                        <xs:annotation>
                          <xs:documentation>When the extraction/cropping was executed</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="0" name="rotation" type="xs:short" use="optional">
                        <xs:annotation>
                          <xs:documentation>Rotation of the extracted/cropped image in tenth of degrees counterclockwise</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="-1" name="x1" type="xs:int" use="optional">
                        <xs:annotation>
                          <xs:documentation>Crop rectangle top left X. -1 if the image has not been cropped</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="-1" name="y1" type="xs:int" use="optional">
                        <xs:annotation>
                          <xs:documentation>Crop rectangle top left Y. -1 if the image has not been cropped</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="-1" name="x2" type="xs:int" use="optional">
                        <xs:annotation>
                          <xs:documentation>Crop rectangle bottom right X. -1 if the image has not been cropped</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="-1" name="y2" type="xs:int" use="optional">
                        <xs:annotation>
                          <xs:documentation>Crop rectangle bottom right Y. -1 if the image has not been cropped</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="false" name="flip" type="xs:boolean" use="optional">
                        <xs:annotation>
                          <xs:documentation>True if the image has been flipped</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute default="1000" name="scale" type="xs:short" use="optional">
                        <xs:annotation>
                          <xs:documentation>Extracted/cropped image scaling in per-thousandths (1000 = original scale)</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:refer="TISO_Era" minOccurs="0" name="era" nillable="true" type="gn4:categoryRef">
              <xs:annotation>
                <xs:documentation>The era the image referes to</xs:documentation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="era" />
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="TISO_MoodTypes" minOccurs="0" name="moodType" nillable="true" type="gn4:categoryRef">
              <xs:annotation>
                <xs:documentation>The mood type the image express</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="TISO_ObjectTypes" minOccurs="0" name="imageType" nillable="true" type="gn4:categoryRef">
              <xs:annotation>
                <xs:documentation>The image type</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute gs:access="Content" default="0" name="pixWidth" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Width in pixel of the image. Set by the import process.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Content" default="0" name="pixHeight" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Height in pixel of the image. Set by the import process.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="width" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Width in millipoints of the image. Set by the import process.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="length:m" gs:access="Content" default="0" name="height" type="gn4:tNonNegativeInt" use="optional">
            <xs:annotation>
              <xs:documentation>Height in millipoints of the image. Set by the import process.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Content" default="cuNone" name="colorUsage" type="gn4:tColorUsage" use="optional">
            <xs:annotation>
              <xs:documentation>Image color space. Set by the import process.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="facesPixBBox" use="optional">
            <xs:annotation>
              <xs:documentation>The coordinates that include all face coordinates (x,y,w,h)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute default="" name="iccProfile" use="optional">
            <xs:annotation>
              <xs:documentation>Optional name of the ICC color profile of the image</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="255" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute gs:access="Special" default="0" name="rotation" type="xs:short" use="optional">
            <xs:annotation>
              <xs:documentation>Display rotation in tenth of degree counterclockwise. Use access class 'Special' to be modifiable indipendently from the metadata.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="audio">
    <xs:annotation>
      <xs:documentation>Audios</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type131" gs:key="folderRef name">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType mediaType="Audio" />
          <gs:fullTextObj exaSourceName="audio">
            <gs:meta name="gn4Title" field="true" isUsedForSorting="true" />
            <gs:meta name="modifiedDate" field="true" isUsedForSorting="true" />
            <gs:meta name="creationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="sourceRef" field="true" isUsedForSorting="true" />
            <gs:meta name="authors" field="true" />
            <gs:meta name="location" field="true" />
            <gs:meta name="cats" field="true" />
            <gs:meta name="keywords" field="true" />
            <gs:meta name="publicationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="publicationRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderKind" field="true" />
            <gs:meta name="era" field="true" />
          </gs:fullTextObj>
          <gs:compute inherit="true">
            <!--
              Semplified XSL transformation to compute size
            -->
            <audio xmlns="">
              <!-- Compute size -->
              <xsl:attribute name="size">
                <xsl:choose>
                  <xsl:when test="gn4:data/@size">
                    <xsl:value-of select="gn4:data/@size" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="'0'" />
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
            </audio>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:archiveObject">
          <xs:sequence>
            <xs:element gs:volume="audioPreviews" gs:mimeTypes="audio/mpeg audio/x-mpeg" minOccurs="0" name="audioPreview" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>MP3 version of the audio</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Audio" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="audio" gs:volume="audios" gs:access="Content" name="data" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The audio itself</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute gs:dimension="time:s" gs:access="Content" name="duration" type="xs:float" use="required">
            <xs:annotation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
              <xs:documentation>The duration of the audio</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="frequency:Hz" gs:access="Content" name="sampleRate" type="xs:int" use="optional">
            <xs:annotation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
              <xs:documentation>The sample rate of the audio, i.e. the number of samples per second,  measured in hertz (Hz)</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Normal" name="album" type="xs:string" use="optional">
            <xs:annotation>
              <xs:appinfo>
                <gs:fullTextAttr exaMetaName="album">
                </gs:fullTextAttr>
              </xs:appinfo>
              <xs:documentation>The title of the music album</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="kind" use="optional">
            <xs:annotation>
              <xs:documentation>Kind of audio content. It is optional, to be left unfilled if the kind is not know or not one of the listed ones.</xs:documentation>
              <xs:appinfo>
                <gs:fullTextAttr exaMetaName="audiokind">
                </gs:fullTextAttr>
              </xs:appinfo>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="spoken word" />
                <xs:enumeration value="music" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="video">
    <xs:annotation>
      <xs:documentation>Video</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type132" gs:key="folderRef name">
      <xs:annotation>
        <xs:appinfo>
          <gs:_objectType mediaType="Video" />
          <gs:fullTextObj exaSourceName="video">
            <gs:meta name="gn4Title" field="true" isUsedForSorting="true" />
            <gs:meta name="modifiedDate" field="true" isUsedForSorting="true" />
            <gs:meta name="creationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="authors" field="true" />
            <gs:meta name="location" field="true" />
            <gs:meta name="cats" field="true" />
            <gs:meta name="keywords" field="true" />
            <gs:meta name="publicationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="publicationRef" field="true" isUsedForSorting="true" />
            <gs:meta name="sourceRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderKind" field="true" />
            <gs:meta name="era" field="true" />
          </gs:fullTextObj>
          <gs:compute inherit="true">
            <!--
              Semplified XSL transformation to compute size
            -->
            <video xmlns="">
              <!-- Compute size -->
              <xsl:attribute name="size">
                <xsl:choose>
                  <xsl:when test="gn4:data/@size">
                    <xsl:value-of select="gn4:data/@size" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="'0'" />
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <!-- Compute the isPublished -->
              <xsl:variable name="isPub" select="nav:referencing/nav:referencingBy[@attrName='pubDest.objs']/nav:refs" />
              <!-- 'Fake' test of the handle attribute to generate a dependency -->
              <xsl:if test="string($isPub/@handle)">
                <xsl:choose>
                  <xsl:when test="$isPub/nav:refObject/gn4:pubDest">
                    <isPublished>true</isPublished>
                  </xsl:when>
                  <xsl:otherwise>
                    <isPublished>false</isPublished>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:if>
            </video>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:archiveObject">
          <xs:sequence>
            <xs:element gs:mimeTypes="image/jpeg image/gif image/png" minOccurs="0" name="thumbnail" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The video thumbnail image. Generated by the import process, usually a single frame.</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Image" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="videoPreviews" gs:mimeTypes="image/jpeg image/gif image/png" minOccurs="0" name="preview" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The video preview image - larger than the thumbnail. Generated by the import process, usually multiple frames tiled.</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Image" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="videoPreviews" gs:mimeTypes="video/x-flv video/mp4" minOccurs="0" name="videoPreview" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>Reduced version of the video either in Flash or MP4 format for preview</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Video" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="video" gs:volume="videos" gs:access="Content" name="data" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The video itself</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
          <xs:attribute gs:access="Content" name="pixWidth" type="xs:int" use="required">
            <xs:annotation>
              <xs:documentation>Width in pixels of the video frames</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Content" name="pixHeight" type="xs:int" use="required">
            <xs:annotation>
              <xs:documentation>Height in pixels of the video frames</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:dimension="time:s" gs:access="Content" name="duration" type="xs:float" use="required">
            <xs:annotation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
              <xs:documentation>The duration of the video</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:access="Content" name="frameRate" type="xs:float" use="optional">
            <xs:annotation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly" />
              </xs:appinfo>
              <xs:documentation>The frame rate of the video, i.e. the number of frames per second.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="story">
    <xs:annotation>
      <xs:documentation>Complete story: text with subject(s) + list of associated media objects</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type133" gs:key="folderRef name">
      <xs:annotation>
        <xs:appinfo>
          <gs:fullTextObj exaSourceName="story">
            <gs:meta name="gn4Title" field="true" isUsedForSorting="true" />
            <gs:meta name="modifiedDate" field="true" isUsedForSorting="true" />
            <gs:meta name="creationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="authors" field="true" />
            <gs:meta name="location" field="true" />
            <gs:meta name="cats" field="true" />
            <gs:meta name="keywords" field="true" />
            <gs:meta name="publicationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="publicationRef" field="true" isUsedForSorting="true" />
            <gs:meta name="sourceRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderKind" field="true" />
            <gs:meta name="era" field="true" />
          </gs:fullTextObj>
          <gs:categorize target="cats" when="@folderKind='otherContent'">
            <gs:field name="xmlText" />
          </gs:categorize>
          <gs:compute inherit="true">
            <!-- 
              Semplified XSL transformation to compute size, number of words and 
              characters
            -->
            <story xmlns="">
              <!-- Compute size and number of words and characters -->
              <xsl:choose>
                <xsl:when test="gn4:xmlText">
                  <xsl:attribute name="size">
                    <xsl:value-of select="fn:xmlLength(gn4:xmlText)" />
                  </xsl:attribute>
                  <xsl:variable name="xmlFormat" select="gn4:xmlFormatRef/nav:refObject/gn4:xmlFormat" />
                  <xsl:variable name="xmlTextCount" select="fn:countText(gn4:xmlText,$xmlFormat/@isHtml,$xmlFormat/@wordBreakTags)" />
                  <xsl:attribute name="nWords">
                    <xsl:value-of select="$xmlTextCount/@words" />
                  </xsl:attribute>
                  <xsl:attribute name="nChars">
                    <xsl:value-of select="$xmlTextCount/@chars" />
                  </xsl:attribute>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:attribute name="size">
                    <xsl:value-of select="'0'" />
                  </xsl:attribute>
                  <xsl:attribute name="nWords">
                    <xsl:value-of select="'0'" />
                  </xsl:attribute>
                  <xsl:attribute name="nChars">
                    <xsl:value-of select="'0'" />
                  </xsl:attribute>
                </xsl:otherwise>
              </xsl:choose>
            </story>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:package">
          <xs:sequence>
            <xs:element gs:storage="SafeXmlText" gs:access="Content" name="xmlText" type="gn4:tXml">
              <xs:annotation>
                <xs:documentation>The text of the story as XML. The specific XML format/namespace is specified by the xmlFormatRef attribute.</xs:documentation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="xmlText">
                  </gs:fullTextAttr>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="xmlFormat" name="xmlFormatRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The XML format used for this text</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="followId" type="gn4:tSourceId">
              <xs:annotation>
                <xs:documentation>The identifier grouping follow-up stories. Usually equal to sourceId, except for follow-up stories where it is usually equal to the sourceId (and followId) of the original story.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="versions">
              <xs:annotation>
                <xs:documentation>Previous versions of the text (story/article) that has been archived as this story</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element minOccurs="0" name="who" type="gn4:tShortLine">
                          <xs:annotation>
                            <xs:documentation>Who created the version</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element minOccurs="0" name="when" type="xs:dateTime">
                          <xs:annotation>
                            <xs:documentation>When the version was created</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element gs:storage="SafeXmlText" name="xmlText" type="gn4:tXml">
                          <xs:annotation>
                            <xs:documentation>The text of the version as XML. It is assumed the same format of the main story text, as specified by the xmlFormatRef attribute.</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="comments">
              <xs:annotation>
                <xs:documentation>Archived comments - i.e. comments associated to the original article or story that has been archived as this story.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element minOccurs="0" name="who" type="gn4:tShortLine">
                          <xs:annotation>
                            <xs:documentation>Who created the comment</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element minOccurs="0" name="when" type="xs:dateTime">
                          <xs:annotation>
                            <xs:documentation>When the comment was created</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element minOccurs="0" name="xmlText" type="gn4:tXml">
                          <xs:annotation>
                            <xs:documentation>Comment content as XML. It is assumed the same format of the main story text, as specified by the xmlFormatRef attribute.</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute gs:compute="true" name="nWords" type="gn4:tNonNegativeInt">
            <xs:annotation>
              <xs:documentation>Number of words in the text.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute gs:compute="true" name="nChars" type="gn4:tNonNegativeInt">
            <xs:annotation>
              <xs:documentation>Number of characters in the text</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="document">
    <xs:annotation>
      <xs:documentation>Composite document (InDesign or Quark multi-page document, GN3/GN4 page)</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type134" gs:key="folderRef name">
      <xs:annotation>
        <xs:appinfo>
          <gs:fullTextObj exaSourceName="document">
            <gs:meta name="gn4Title" field="true" isUsedForSorting="true" />
            <gs:meta name="modifiedDate" field="true" isUsedForSorting="true" />
            <gs:meta name="creationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="authors" field="true" />
            <gs:meta name="cats" field="true" />
            <gs:meta name="keywords" field="true" />
            <gs:meta name="location" field="true" />
            <gs:meta name="publicationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="publicationRef" field="true" isUsedForSorting="true" />
            <gs:meta name="editionNumberRef" field="true" isUsedForSorting="true" />
            <gs:meta name="sectionRef" field="true" isUsedForSorting="true" />
            <gs:meta name="sourceRef" field="true" isUsedForSorting="true" />
            <gs:meta name="zoneRef" field="true" isUsedForSorting="true" />
            <gs:meta name="bookRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderKind" field="true" />
            <gs:meta name="era" field="true" />
          </gs:fullTextObj>
          <gs:compute inherit="true">
            <!-- 
              Semplified XSL transformation to compute size
            -->
            <document xmlns="">
              <!-- Size -->
              <xsl:attribute name="size">
                <xsl:choose>
                  <xsl:when test="gn4:data/@size">
                    <xsl:value-of select="gn4:data/@size" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="'0'" />
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
            </document>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:archiveObject">
          <xs:sequence>
            <xs:element gs:refer="editionNumber" minOccurs="0" name="editionNumberRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="editionNumberRef">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>The edition of this document</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="sectionBase" minOccurs="0" name="sectionRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="sectionRef">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>The section of this document</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="zoneBase" minOccurs="0" name="zoneRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="zoneRef">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>The zone of this document</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="bookBase" minOccurs="0" name="bookRef" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="bookRef">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>The book of this document</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="image/jpeg image/gif image/png" minOccurs="0" name="thumbnail" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The optional document thumbnail. Generated by the import process.</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Image" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="documentPreviews" gs:mimeTypes="image/jpeg image/gif image/png" minOccurs="0" name="preview" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The optional document preview - larger than the thumbnail. Generated by the import process.</xs:documentation>
                <xs:appinfo>
                  <gs:ui mode="ReadOnly">
                    <gs:template kind="Image" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="documents" minOccurs="0" name="data" nillable="true" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The document itself. Note that it is optional - a GN3/GN4 page does not have a 'document' file</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="docType" name="docTypeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The type of this document (InDesign, XPress, GN3 page etc.)</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="pages">
              <xs:annotation>
                <xs:documentation>Descriptions of the pages of the document</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element gs:mimeTypes="image/jpeg image/gif image/png" minOccurs="0" name="thumbnail" nillable="true" type="gn4:dataContent">
                          <xs:annotation>
                            <xs:documentation>The optional page thumbnail</xs:documentation>
                            <xs:appinfo>
                              <gs:ui mode="ReadOnly">
                                <gs:template kind="Image" />
                              </gs:ui>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:element>
                        <xs:element gs:volume="documentPreviews" gs:mimeTypes="image/jpeg image/gif image/png" minOccurs="0" name="preview" nillable="true" type="gn4:dataContent">
                          <xs:annotation>
                            <xs:documentation>The optional page preview</xs:documentation>
                            <xs:appinfo>
                              <gs:ui mode="ReadOnly">
                                <gs:template kind="Image" />
                              </gs:ui>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:element>
                      </xs:sequence>
                      <xs:attribute name="name" type="gn4:tName">
                        <xs:annotation>
                          <xs:documentation>The name identifying the page ('1', '2', 'A1', 'xii' etc.)</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="images">
              <xs:annotation>
                <xs:documentation>List of images associated with the document - as references</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" gs:refer="image" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence />
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="stories">
              <xs:annotation>
                <xs:documentation>List of stories associated with the document - as references</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" gs:refer="story" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence />
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="variantTypeImage">
    <xs:annotation>
      <xs:documentation>Variant type for images</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type135">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <variantTypeImage xmlns="">
              <typeRef>image</typeRef>
            </variantTypeImage>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:variantType">
          <xs:sequence />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="variantTypeAudio">
    <xs:annotation>
      <xs:documentation>Variant type for audios</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type136">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <variantTypeAudio xmlns="">
              <typeRef>audio</typeRef>
            </variantTypeAudio>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:variantType">
          <xs:sequence />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="variantTypeVideo">
    <xs:annotation>
      <xs:documentation>Variant type for video</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type137">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <variantTypeVideo xmlns="">
              <typeRef>video</typeRef>
            </variantTypeVideo>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:variantType">
          <xs:sequence />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="variantTypeDoc">
    <xs:annotation>
      <xs:documentation>Variant type for documents - typically PDF rendering in various qualities</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type138">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <variantTypeDoc xmlns="">
              <typeRef>document</typeRef>
            </variantTypeDoc>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:variantType">
          <xs:sequence />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="variantTypeStory">
    <xs:annotation>
      <xs:documentation>Variant type for text (story object type) - typically different encoding/markup versions</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type139">
      <xs:annotation>
        <xs:appinfo>
          <gs:compute inherit="true">
            <variantTypeStory xmlns="">
              <typeRef>story</typeRef>
            </variantTypeStory>
          </gs:compute>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:variantType">
          <xs:sequence />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="contact">
    <xs:annotation>
      <xs:documentation>Contacts: details about persons and organizations and other miscellaneous information useful to the newsroom</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type140" gs:key="name" gs:descName="gn4:title">
      <xs:annotation>
        <xs:appinfo>
          <gs:fullTextObj exaSourceName="contact">
            <gs:meta name="folderRef" field="true" isUsedForSorting="true" />
            <gs:meta name="folderKind" field="true" />
            <gs:meta name="gn4Title" field="true" isUsedForSorting="true" />
            <gs:meta name="modifiedDate" field="true" isUsedForSorting="true" />
            <gs:meta name="creationDate" field="true" isUsedForSorting="true" />
            <gs:meta name="keywords" field="true" />
            <gs:meta name="cats" field="true" />
            <gs:meta name="location" field="true" />
          </gs:fullTextObj>
        </xs:appinfo>
      </xs:annotation>
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:folderObject">
          <xs:sequence>
            <xs:element minOccurs="0" name="nameTitle" type="gn4:t32">
              <xs:annotation>
                <xs:documentation>Person's title: Mr, Ms, Dr etc.</xs:documentation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactName">
                  </gs:fullTextAttr>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="firstName" type="gn4:tShortLine">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactName">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Person's first name</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="middleName" type="gn4:tShortLine">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactName">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Person's middle name</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" name="lastName" type="gn4:tShortLine">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactName">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Person's last name</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="initials" type="gn4:t32">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactName">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Person's initials</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="gender">
              <xs:annotation>
                <xs:documentation>Person's gender</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="male" />
                  <xs:enumeration value="female" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="suffix" type="gn4:t32">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactName">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>The contact's suffix (e.g. 'Jr' in John James Jr.)</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:volume="pictures" gs:mimeTypes="image" gs:access="Content" minOccurs="0" name="picture" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>The contact's photo / picture</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="company" type="gn4:tShortLine">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactJobInfo">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Person's company or organization</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="department" type="gn4:tShortLine">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactJobInfo">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Person's department within the company or organization</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="jobTitle" type="gn4:tShortLine">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactJobInfo">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Person's job title</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="specialization" type="gn4:tShortLine">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactJobInfo">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Person's specialization</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="birthDate" type="xs:date">
              <xs:annotation>
                <xs:documentation>Person's birth date</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="deathDate" type="xs:date">
              <xs:annotation>
                <xs:documentation>Person's death date</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="busPosition" type="gn4:position">
              <xs:annotation>
                <xs:documentation>Optional coordinate pairs (longitude, latitude) of the business address.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="busStreet" type="gn4:tShortText">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="location">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Business street address (multi-line)</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="busCity" type="gn4:t32">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="location">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Business address city</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="busState" type="gn4:t32">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="location">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Business address state or region</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="busPostalCode" type="gn4:t32">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="location">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Business address postal code</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="busCountry" type="gn4:t64">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="location">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Business address country full name.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="busCountryCode" type="gn4:ISO3166-1">
              <xs:annotation>
                <xs:documentation>Business address country full name.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="homePosition" type="gn4:position">
              <xs:annotation>
                <xs:documentation>Optional coordinate pairs (longitude, latitude) of the home address.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="homeStreet" type="gn4:tShortText">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="location">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Home street address (multi-line)</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="homeCity" type="gn4:t32">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="location">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Home address city</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="homeState" type="gn4:t32">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="location">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Home address state or region</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="homePostalCode" type="gn4:t32">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="location">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Home address postal code</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="homeCountry" type="gn4:t64">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="location">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Home address country full name.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="homeCountryCode" type="gn4:ISO3166-1">
              <xs:annotation>
                <xs:documentation>Home address country full name.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="phones">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactExtrainfo">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>Phone numbers</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:attribute name="kind">
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:enumeration value="busPhone" />
                            <xs:enumeration value="busFax" />
                            <xs:enumeration value="homePhone" />
                            <xs:enumeration value="homeFax" />
                            <xs:enumeration value="isdn" />
                            <xs:enumeration value="mobilePhone" />
                            <xs:enumeration value="skype" />
                            <xs:enumeration value="buzzer" />
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                      <xs:attribute name="number" type="gn4:t32" />
                      <xs:attribute name="note" type="gn4:tShortLine" />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="emails">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactExtrainfo">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>email addresses</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:attribute name="kind">
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:enumeration value="bus" />
                            <xs:enumeration value="personal" />
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                      <xs:attribute name="address" type="gn4:tShortLine" />
                      <xs:attribute name="displayName" type="gn4:tShortLine" />
                      <xs:attribute name="note" type="gn4:tShortLine" />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="urls">
              <xs:annotation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactExtrainfo">
                  </gs:fullTextAttr>
                </xs:appinfo>
                <xs:documentation>URLs of the person (website, facebook, twitter, etc.)</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:attribute name="url" type="gn4:tPath" />
                      <xs:attribute name="note" type="gn4:tShortLine" />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="notes" type="gn4:tText">
              <xs:annotation>
                <xs:documentation>General notes (multi-line)</xs:documentation>
                <xs:appinfo>
                  <gs:fullTextAttr exaMetaName="contactExtrainfo">
                  </gs:fullTextAttr>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType id="type141" gs:key="folderRef name" name="mediaGallery">
    <xs:annotation>
      <xs:documentation>Media Gallery</xs:documentation>
      <xs:appinfo>
        <gs:fullTextObj exaSourceName="mediaGallery">
          <gs:meta name="gn4Title" field="true" isUsedForSorting="true" />
          <gs:meta name="modifiedDate" field="true" isUsedForSorting="true" />
          <gs:meta name="creationDate" field="true" isUsedForSorting="true" />
          <gs:meta name="authors" field="true" />
          <gs:meta name="keywords" field="true" />
          <gs:meta name="location" field="true" />
          <gs:meta name="cats" field="true" />
          <gs:meta name="keywords" field="true" />
          <gs:meta name="publicationDate" field="true" isUsedForSorting="true" />
          <gs:meta name="publicationRef" field="true" isUsedForSorting="true" />
          <gs:meta name="sourceRef" field="true" isUsedForSorting="true" />
          <gs:meta name="folderRef" field="true" isUsedForSorting="true" />
          <gs:meta name="folderKind" field="true" />
          <gs:meta name="era" field="true" />
        </gs:fullTextObj>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gn4:archiveObject">
        <xs:sequence>
          <xs:element gs:mimeTypes="image/jpeg image/gif image/png" gs:access="Special" minOccurs="0" name="thumbnail" nillable="true" type="gn4:dataContent">
            <xs:annotation>
              <xs:documentation>The mediaGallery thumbnail.</xs:documentation>
              <xs:appinfo>
                <gs:ui mode="ReadOnly">
                  <gs:template kind="Image" />
                </gs:ui>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element gs:access="Content" minOccurs="0" name="objs">
            <xs:annotation>
              <xs:documentation>Objects belonging to the gallery.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element gs:ordered="true" gs:refer="folderObject" minOccurs="0" maxOccurs="unbounded" name="ref">
                  <xs:complexType>
                    <xs:complexContent mixed="false">
                      <xs:extension base="gn4:reference">
                        <xs:sequence>
                          <xs:element minOccurs="0" name="title" type="gn4:tLine">
                            <xs:annotation>
                              <xs:documentation>Short natural language description of the relationship</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element minOccurs="0" name="caption" type="gn4:tText">
                            <xs:annotation>
                              <xs:documentation>Descriptive text associated with the referenced object.</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                      </xs:extension>
                    </xs:complexContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:group ref="gn4:mediaGalleryExtra" />
        </xs:sequence>
        <xs:attribute default="0" name="minObjs" type="xs:short" use="optional">
          <xs:annotation>
            <xs:documentation>Override minimum number of objects in the media gallery. Optional - ignored if 0 or negative</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute default="0" name="maxObjs" type="xs:short" use="optional">
          <xs:annotation>
            <xs:documentation>Override maximum number of objects in the media gallery. Optional - ignored if 0 or negative</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="gn4:mediaGalleryExtra" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="mediaGallery" type="gn4:mediaGallery">
    <xs:annotation>
      <xs:documentation>Media Gallery</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="customer">
    <xs:annotation>
      <xs:documentation>Customer</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type859" gs:key="name" gs:descName="substring(concat(@name,gn4:title),string-length(substring(gn4:title,1,1))*string-length(@name)+1)">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the customer belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="title" type="gn4:tTitle">
              <xs:annotation>
                <xs:documentation>One-line customer description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tText">
              <xs:annotation>
                <xs:documentation>General customer description.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="image/gif image/jpeg image/png" gs:maxSize="64000" gs:access="Normal" minOccurs="0" name="image" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>Specifies a GIF, JPEG or PNG image visually representing the customer. the company logo for example</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="url" type="gn4:tPath">
              <xs:annotation>
                <xs:documentation>URL of a Web page or Web site containing details about the customer.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:access="Content" name="attachs">
              <xs:annotation>
                <xs:documentation>Binary data attached to the customer - e.g a PDF or Word documents containing the relevant contracts or other such documents.
                NOTE: this cannot be an arbitrary file, but has to be a parse-able file...
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:ordered="true" minOccurs="0" maxOccurs="unbounded" name="item">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element minOccurs="1" name="data" type="gn4:dataContent">
                          <xs:annotation>
                            <xs:documentation>The data of the attachment</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element minOccurs="0" name="title" type="gn4:tTitle">
                          <xs:annotation>
                            <xs:documentation>Optional title (e.g. the file name) identifying the attachment</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:access="Content" minOccurs="0" name="contacts">
              <xs:annotation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Grid" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                      <searchObjectUI>
                        <attribute path="ObjectType.Id" op="In" objectTypes="contact" mode="Hidden" />
                        <attribute path="[contact.title]">
                          <ui label="Name">
                            <template kind="FullText" />
                          </ui>
                        </attribute>
                      </searchObjectUI>
                      <DataTemplate>
                        <StackPanel Orientation="Vertical" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
                          <StackPanel Orientation="Horizontal">
                            <TextBlock FontWeight="Bold" Text="{Binding Path=[contact.title]}" />
                          </StackPanel>
                          <TextBlock FontSize="9" Foreground="Gray" Text="{Binding Path=[contact.summary], Converter={StaticResource TrimTextConverter}, ConverterParameter=100: :...}" />
                        </StackPanel>
                      </DataTemplate>
                    </gs:template>
                  </gs:ui>
                </xs:appinfo>
                <xs:documentation>The related contacts</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:refer="contact" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence>
                            <xs:element gs:refer="ContactRelationships" minOccurs="0" name="relationshipType" nillable="true" type="gn4:categoryRef">
                              <xs:annotation>
                                <xs:documentation>Relationship between the contact and the related contact</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                          </xs:sequence>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:access="Content" minOccurs="0" name="users">
              <xs:annotation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="Grid" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                      <searchObjectUI>
                        <attribute path="ObjectType.Id" op="In" objectTypes="user" mode="Hidden" />
                        <attribute path="[user.name]">
                          <ui label="Name">
                            <template kind="FullText" />
                          </ui>
                        </attribute>
                      </searchObjectUI>
                      <DataTemplate>
                        <StackPanel Orientation="Vertical" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
                          <StackPanel Orientation="Horizontal">
                            <TextBlock FontWeight="Bold" Text="{Binding Path=[user.name]}" />
                          </StackPanel>
                          <TextBlock FontSize="9" Foreground="Gray" Text="{Binding Path=[user.fullName], Converter={StaticResource TrimTextConverter}, ConverterParameter=100: :...}" />
                        </StackPanel>
                      </DataTemplate>
                    </gs:template>
                  </gs:ui>
                </xs:appinfo>
                <xs:documentation>User accounts for this customer</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:refer="user" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference" />
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element gs:access="Content" minOccurs="0" name="prods">
              <xs:annotation>
                <xs:appinfo />
                <xs:documentation>The products bought by the customer</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element gs:refer="productConfig" minOccurs="0" maxOccurs="unbounded" name="ref">
                    <xs:complexType>
                      <xs:complexContent mixed="false">
                        <xs:extension base="gn4:reference">
                          <xs:sequence>
                            <xs:element gs:compute="false" minOccurs="0" default="false" name="disabled" type="xs:boolean">
                              <xs:annotation>
                                <xs:documentation>If this product is temporarily disabled.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="startDate" type="xs:dateTime">
                              <xs:annotation>
                                <xs:appinfo />
                                <xs:documentation>When the subscription to this product starts.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="endDate" type="xs:dateTime">
                              <xs:annotation>
                                <xs:appinfo />
                                <xs:documentation>When the subscription to this product ends.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="howOftenRun" type="xs:int">
                              <xs:annotation>
                                <xs:appinfo>
                                  <!-- TODO: we should do a UI with a drop-down list of pre-set times? 15 mins, 30 mins,
                                               1 hour, 2 hours, 3 hours, 6 hours, 12 hours, 24 hours? -->
                                </xs:appinfo>
                                <xs:documentation>Every how many minutes this product runs.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="lastRun" nillable="true" type="xs:dateTime">
                              <xs:annotation>
                                <xs:appinfo>
                                  <gs:ui mode="ReadOnly" />
                                </xs:appinfo>
                                <xs:documentation>Date and time of the last time this product ran for this customer. Read-only, updated by the scheduler.</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                          </xs:sequence>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="kind" use="optional">
            <xs:annotation>
              <xs:documentation>Specifies the kind of customer</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="partner" />
                <xs:enumeration value="customer" />
                <xs:enumeration value="vendor" />
                <xs:enumeration value="other" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="productConfig">
    <xs:annotation>
      <xs:documentation>Product Configuration - customer specific</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type860" gs:key="name" gs:descName="@name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element minOccurs="0" name="description" type="gn4:tDescription">
              <xs:annotation>
                <xs:documentation>Multi-line description of the configuration</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="access" type="gn4:access">
              <xs:annotation>
                <xs:documentation>Access permissions to the configuration.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="product" minOccurs="1" name="productRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>Product this configuration refers to</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="params" type="gn4:tParams">
              <xs:annotation>
                <xs:documentation>Parameters that are passed to the publishing template.</xs:documentation>
                <xs:appinfo>
                  <gs:ui>
                    <!-- was: paramsDefPath="productRef.pubTemplateRef.parsDef" -->
                    <gs:template kind="ParamsGrid" paramsDefPath="productRef.parsDef" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd" />
                  </gs:ui>
                </xs:appinfo>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="product">
    <xs:annotation>
      <xs:documentation>syndication product specific for the customer</xs:documentation>
    </xs:annotation>
    <xs:complexType id="type861" gs:key="name">
      <xs:complexContent mixed="false">
        <xs:extension base="gn4:object">
          <xs:sequence>
            <xs:element gs:refer="configScope" gs:access="Protected" name="scopeRef" type="gn4:reference">
              <xs:annotation>
                <xs:documentation>The scope the product belongs to - used to set access rights.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="title" type="gn4:tTitle">
              <xs:annotation>
                <xs:documentation>One-line product description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="gn4:tText">
              <xs:annotation>
                <xs:documentation>General customer description.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:mimeTypes="image/gif image/jpeg image/png" gs:maxSize="64000" gs:access="Normal" minOccurs="0" name="image" type="gn4:dataContent">
              <xs:annotation>
                <xs:documentation>Specifies a GIF, JPEG or PNG image visually representing the product.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="GNQuerySelector" type="gn4:tText">
              <xs:annotation>
                <xs:documentation>GNQuery to select the objects to syndicate. May refer to params defined below. 
                May be empty (if so, the workflow will have to select what items to publish).</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:compute="false" minOccurs="0" default="true" name="onlyModified" type="xs:boolean">
              <xs:annotation>
                <xs:documentation>If true (the default) only syndicate changed or new objects</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element gs:refer="config" name="workflow" nillable="true" type="gn4:reference">
              <xs:annotation>
                <xs:appinfo>
                  <gs:ui>
                    <gs:template kind="DropDown" xmlns="http://www.teradp.com/schemas/GN4/1/XmlSchemaExt.xsd">
                      <gs:searchObjectUI>
                        <gs:searchConditions>
                          <attribute path="[config.name]" initValue1="feed_" op="Starting" />
                          <gs:SearchNode xmlns="http://www.teradp.com/schemas/GN4/1/SearchConditions.xsd" xsi:type="SearchConditionList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                            <gs:List Op="Starting" Path="[config.name]" xsi:type="SearchCondition">
                              <!-- TODO: we should have only wf_* or wf_syndication* -->
                            </gs:List>
                          </gs:SearchNode>
                        </gs:searchConditions>
                        <gs:attribute path="[config.name]">
                          <gs:ui label="Name" />
                        </gs:attribute>
                      </gs:searchObjectUI>
                    </gs:template>
                  </gs:ui>
                </xs:appinfo>
                <xs:documentation>Reference to the workflow that will be executed for this product.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="parsDef" type="gn4:tParamsDef">
              <xs:annotation>
                <xs:documentation>Parameters that are passed to the workflow.</xs:documentation>
                <xs:appinfo />
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:group name="tarkObjects">
    <xs:annotation>
      <xs:documentation>List of the Tark4 non-abstract object types - to be used inside the 'objects' complex type declaration</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:group ref="gn4:baseObjects" />
      <xs:group ref="gn4:archiveObjects" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:image" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:audio" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:video" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:story" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:document" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="gn4:contact" />
    </xs:sequence>
  </xs:group>
</xs:schema>